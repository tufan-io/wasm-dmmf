datasource db {
    provider = "postgresql"
    url      = "postgres://postgres:password@localhost:5432/postgres"
}

model abuse_reports {
    id                      Int       @id @default(autoincrement())
    reporter_id             Int?
    user_id                 Int?
    message                 String?
    created_at              DateTime? @db.Timestamp(6)
    updated_at              DateTime? @db.Timestamp(6)
    message_html            String?
    cached_markdown_version Int?

    @@index([user_id], map: "index_abuse_reports_on_user_id")
}

model agent_activity_events {
    id                   BigInt                @id @default(autoincrement())
    agent_id             BigInt
    user_id              Int?
    project_id           Int?
    merge_request_id     Int?
    agent_token_id       BigInt?
    recorded_at          DateTime              @db.Timestamptz(6)
    kind                 Int                   @db.SmallInt
    level                Int                   @db.SmallInt
    sha                  Bytes?
    detail               String?
    cluster_agents       cluster_agents        @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c815368376")
    cluster_agent_tokens cluster_agent_tokens? @relation(fields: [agent_token_id], references: [id], onUpdate: NoAction, map: "fk_c8b006d40f")
    merge_requests       merge_requests?       @relation(fields: [merge_request_id], references: [id], onUpdate: NoAction, map: "fk_3af186389b")
    projects             projects?             @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "fk_256c631779")
    users                users?                @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_d6f785c9fc")

    @@index([agent_id, recorded_at, id], map: "index_agent_activity_events_on_agent_id_and_recorded_at_and_id")
}

model agent_group_authorizations {
    id             BigInt         @id @default(autoincrement())
    group_id       Int
    agent_id       BigInt
    config         Json
    cluster_agents cluster_agents @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_fb70782616")
    namespaces     namespaces     @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_2c9f941965")

    @@unique([agent_id, group_id], map: "index_agent_group_authorizations_on_agent_id_and_group_id")
    @@index([group_id], map: "index_agent_group_authorizations_on_group_id")
}

model agent_project_authorizations {
    id             BigInt         @id @default(autoincrement())
    project_id     Int
    agent_id       BigInt
    config         Json
    cluster_agents cluster_agents @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b7fe9b4777")
    projects       projects       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_1d30bb4987")

    @@unique([agent_id, project_id], map: "index_agent_project_authorizations_on_agent_id_and_project_id")
    @@index([project_id], map: "index_agent_project_authorizations_on_project_id")
}

model alert_management_alert_assignees {
    id                      BigInt                  @id @default(autoincrement())
    user_id                 Int
    alert_id                BigInt
    alert_management_alerts alert_management_alerts @relation(fields: [alert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_93c0f6703b")
    users                   users                   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d47570ac62")

    @@unique([user_id, alert_id], map: "index_alert_assignees_on_user_id_and_alert_id")
    @@index([alert_id], map: "index_alert_assignees_on_alert_id")
}

model alert_management_alert_metric_images {
    id                      BigInt                  @id @default(autoincrement())
    alert_id                BigInt
    created_at              DateTime                @db.Timestamptz(6)
    updated_at              DateTime                @db.Timestamptz(6)
    file_store              Int?                    @db.SmallInt
    file                    String
    url                     String?
    url_text                String?
    alert_management_alerts alert_management_alerts @relation(fields: [alert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_338e55b408")

    @@index([alert_id], map: "index_alert_management_alert_metric_images_on_alert_id")
}

model alert_management_alert_user_mentions {
    id                        BigInt                  @id @default(autoincrement())
    alert_management_alert_id BigInt
    note_id                   Int?
    mentioned_users_ids       Int[]
    mentioned_projects_ids    Int[]
    mentioned_groups_ids      Int[]
    alert_management_alerts   alert_management_alerts @relation(fields: [alert_management_alert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8e48eca0fe")
    notes                     notes?                  @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_eb2de0cdef")

    @@unique([alert_management_alert_id, note_id], map: "index_alert_user_mentions_on_alert_id_and_note_id")
}

model alert_management_alerts {
    id                                            BigInt                                          @id @default(autoincrement())
    created_at                                    DateTime                                        @db.Timestamptz(6)
    updated_at                                    DateTime                                        @db.Timestamptz(6)
    started_at                                    DateTime                                        @db.Timestamptz(6)
    ended_at                                      DateTime?                                       @db.Timestamptz(6)
    events                                        Int                                             @default(1)
    iid                                           Int
    severity                                      Int                                             @default(0) @db.SmallInt
    status                                        Int                                             @default(0) @db.SmallInt
    fingerprint                                   Bytes?
    issue_id                                      Int?
    project_id                                    Int
    title                                         String
    description                                   String?
    service                                       String?
    monitoring_tool                               String?
    hosts                                         String[]
    payload                                       Json                                            @default("{}")
    prometheus_alert_id                           Int?
    environment_id                                Int?
    domain                                        Int?                                            @default(0) @db.SmallInt
    environments                                  environments?                                   @relation(fields: [environment_id], references: [id], onUpdate: NoAction, map: "fk_aad61aedca")
    issues                                        issues?                                         @relation(fields: [issue_id], references: [id], onUpdate: NoAction, map: "fk_2358b75436")
    projects                                      projects                                        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_9e49e5c2b7")
    prometheus_alerts                             prometheus_alerts?                              @relation(fields: [prometheus_alert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_51ab4b6089")
    alert_management_alert_assignees              alert_management_alert_assignees[]
    alert_management_alert_metric_images          alert_management_alert_metric_images[]
    alert_management_alert_user_mentions          alert_management_alert_user_mentions[]
    incident_management_pending_alert_escalations incident_management_pending_alert_escalations[] @ignore

    @@unique([project_id, iid], map: "index_alert_management_alerts_on_project_id_and_iid")
    @@index([domain], map: "index_alert_management_alerts_on_domain")
    @@index([issue_id], map: "index_alert_management_alerts_on_issue_id")
}

model alert_management_http_integrations {
    id                        BigInt   @id @default(autoincrement())
    created_at                DateTime @db.Timestamptz(6)
    updated_at                DateTime @db.Timestamptz(6)
    project_id                Int
    active                    Boolean  @default(false)
    encrypted_token           String
    encrypted_token_iv        String
    endpoint_identifier       String
    name                      String
    payload_example           Json     @default("{}")
    payload_attribute_mapping Json     @default("{}")
    projects                  projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bec49f52cc")

    @@index([project_id], map: "index_alert_management_http_integrations_on_project_id")
}

model allowed_email_domains {
    id         BigInt     @id @default(autoincrement())
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    group_id   Int
    domain     String     @db.VarChar(255)
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8b5da859f9")

    @@index([group_id], map: "index_allowed_email_domains_on_group_id")
}

model analytics_cycle_analytics_aggregations {
    group_id                                   Int        @id
    incremental_runtimes_in_seconds            Int[]
    incremental_processed_records              Int[]
    last_full_run_runtimes_in_seconds          Int[]
    last_full_run_processed_records            Int[]
    last_incremental_issues_id                 Int?
    last_incremental_merge_requests_id         Int?
    last_full_run_issues_id                    Int?
    last_full_run_merge_requests_id            Int?
    last_incremental_run_at                    DateTime?  @db.Timestamptz(6)
    last_incremental_issues_updated_at         DateTime?  @db.Timestamptz(6)
    last_incremental_merge_requests_updated_at DateTime?  @db.Timestamptz(6)
    last_full_run_at                           DateTime?  @db.Timestamptz(6)
    last_full_run_issues_updated_at            DateTime?  @db.Timestamptz(6)
    last_full_run_mrs_updated_at               DateTime?  @db.Timestamptz(6)
    last_consistency_check_updated_at          DateTime?  @db.Timestamptz(6)
    enabled                                    Boolean    @default(true)
    namespaces                                 namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_13c8374c7a")
}

model analytics_cycle_analytics_group_stages {
    id                                                                         BigInt                                        @id @default(autoincrement())
    created_at                                                                 DateTime                                      @db.Timestamptz(6)
    updated_at                                                                 DateTime                                      @db.Timestamptz(6)
    relative_position                                                          Int?
    start_event_identifier                                                     Int
    end_event_identifier                                                       Int
    group_id                                                                   Int
    start_event_label_id                                                       Int?
    end_event_label_id                                                         Int?
    hidden                                                                     Boolean                                       @default(false)
    custom                                                                     Boolean                                       @default(true)
    name                                                                       String                                        @db.VarChar(255)
    group_value_stream_id                                                      BigInt
    stage_event_hash_id                                                        BigInt?
    labels_analytics_cycle_analytics_group_stages_end_event_label_idTolabels   labels?                                       @relation("analytics_cycle_analytics_group_stages_end_event_label_idTolabels", fields: [end_event_label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_dfb37c880d")
    namespaces                                                                 namespaces                                    @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ae5da3409b")
    analytics_cycle_analytics_group_value_streams                              analytics_cycle_analytics_group_value_streams @relation(fields: [group_value_stream_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_analytics_cycle_analytics_group_stages_group_value_stream_id")
    analytics_cycle_analytics_stage_event_hashes                               analytics_cycle_analytics_stage_event_hashes? @relation(fields: [stage_event_hash_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_3078345d6d")
    labels_analytics_cycle_analytics_group_stages_start_event_label_idTolabels labels?                                       @relation("analytics_cycle_analytics_group_stages_start_event_label_idTolabels", fields: [start_event_label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5a22f40223")

    @@unique([group_id, group_value_stream_id, name], map: "index_group_stages_on_group_id_group_value_stream_id_and_name")
    @@index([end_event_label_id], map: "index_analytics_ca_group_stages_on_end_event_label_id")
    @@index([group_id], map: "index_analytics_ca_group_stages_on_group_id")
    @@index([relative_position], map: "index_analytics_ca_group_stages_on_relative_position")
    @@index([start_event_label_id], map: "index_analytics_ca_group_stages_on_start_event_label_id")
    @@index([group_value_stream_id], map: "index_analytics_ca_group_stages_on_value_stream_id")
    @@index([stage_event_hash_id], map: "index_group_stages_on_stage_event_hash_id")
}

model analytics_cycle_analytics_group_value_streams {
    id                                     BigInt                                   @id @default(autoincrement())
    created_at                             DateTime                                 @db.Timestamptz(6)
    updated_at                             DateTime                                 @db.Timestamptz(6)
    group_id                               Int
    name                                   String
    namespaces                             namespaces                               @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_540627381a")
    analytics_cycle_analytics_group_stages analytics_cycle_analytics_group_stages[]

    @@unique([group_id, name], map: "index_analytics_ca_group_value_streams_on_group_id_and_name")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model analytics_cycle_analytics_issue_stage_events {
    stage_event_hash_id   BigInt
    issue_id              BigInt
    group_id              BigInt
    project_id            BigInt
    milestone_id          BigInt?
    author_id             BigInt?
    start_event_timestamp DateTime  @db.Timestamptz(6)
    end_event_timestamp   DateTime? @db.Timestamptz(6)
    state_id              Int       @default(1) @db.SmallInt

    @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model analytics_cycle_analytics_merge_request_stage_events {
    stage_event_hash_id   BigInt
    merge_request_id      BigInt
    group_id              BigInt
    project_id            BigInt
    milestone_id          BigInt?
    author_id             BigInt?
    start_event_timestamp DateTime  @db.Timestamptz(6)
    end_event_timestamp   DateTime? @db.Timestamptz(6)
    state_id              Int       @default(1) @db.SmallInt

    @@ignore
}

model analytics_cycle_analytics_project_stages {
    id                                                                           BigInt                                          @id @default(autoincrement())
    created_at                                                                   DateTime                                        @db.Timestamptz(6)
    updated_at                                                                   DateTime                                        @db.Timestamptz(6)
    relative_position                                                            Int?
    start_event_identifier                                                       Int
    end_event_identifier                                                         Int
    project_id                                                                   Int
    start_event_label_id                                                         Int?
    end_event_label_id                                                           Int?
    hidden                                                                       Boolean                                         @default(false)
    custom                                                                       Boolean                                         @default(true)
    name                                                                         String                                          @db.VarChar(255)
    project_value_stream_id                                                      BigInt
    stage_event_hash_id                                                          BigInt?
    labels_analytics_cycle_analytics_project_stages_end_event_label_idTolabels   labels?                                         @relation("analytics_cycle_analytics_project_stages_end_event_label_idTolabels", fields: [end_event_label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3ec9fd7912")
    projects                                                                     projects                                        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3829e49b66")
    analytics_cycle_analytics_project_value_streams                              analytics_cycle_analytics_project_value_streams @relation(fields: [project_value_stream_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_796a7dbc9c")
    analytics_cycle_analytics_stage_event_hashes                                 analytics_cycle_analytics_stage_event_hashes?   @relation(fields: [stage_event_hash_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c3339bdfc9")
    labels_analytics_cycle_analytics_project_stages_start_event_label_idTolabels labels?                                         @relation("analytics_cycle_analytics_project_stages_start_event_label_idTolabels", fields: [start_event_label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1722574860")

    @@unique([project_id, name], map: "index_analytics_ca_project_stages_on_project_id_and_name")
    @@index([end_event_label_id], map: "index_analytics_ca_project_stages_on_end_event_label_id")
    @@index([project_id], map: "index_analytics_ca_project_stages_on_project_id")
    @@index([relative_position], map: "index_analytics_ca_project_stages_on_relative_position")
    @@index([start_event_label_id], map: "index_analytics_ca_project_stages_on_start_event_label_id")
    @@index([project_value_stream_id], map: "index_analytics_ca_project_stages_on_value_stream_id")
    @@index([stage_event_hash_id], map: "index_project_stages_on_stage_event_hash_id")
}

model analytics_cycle_analytics_project_value_streams {
    id                                       BigInt                                     @id @default(autoincrement())
    created_at                               DateTime                                   @db.Timestamptz(6)
    updated_at                               DateTime                                   @db.Timestamptz(6)
    project_id                               Int
    name                                     String
    projects                                 projects                                   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_669f4ba293")
    analytics_cycle_analytics_project_stages analytics_cycle_analytics_project_stages[]

    @@unique([project_id, name], map: "index_analytics_ca_project_value_streams_on_project_id_and_name")
}

model analytics_cycle_analytics_stage_event_hashes {
    id                                       BigInt                                     @id @default(autoincrement())
    hash_sha256                              Bytes?                                     @unique(map: "index_cycle_analytics_stage_event_hashes_on_hash_sha_256")
    analytics_cycle_analytics_group_stages   analytics_cycle_analytics_group_stages[]
    analytics_cycle_analytics_project_stages analytics_cycle_analytics_project_stages[]
}

model analytics_devops_adoption_segments {
    id                                                                             BigInt      @id @default(autoincrement())
    last_recorded_at                                                               DateTime?   @db.Timestamptz(6)
    created_at                                                                     DateTime    @db.Timestamptz(6)
    updated_at                                                                     DateTime    @db.Timestamptz(6)
    namespace_id                                                                   Int?
    display_namespace_id                                                           Int?
    namespaces_analytics_devops_adoption_segments_display_namespace_idTonamespaces namespaces? @relation("analytics_devops_adoption_segments_display_namespace_idTonamespaces", fields: [display_namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_190a24754d")
    namespaces_analytics_devops_adoption_segments_namespace_idTonamespaces         namespaces? @relation("analytics_devops_adoption_segments_namespace_idTonamespaces", fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f5aa768998")

    @@unique([display_namespace_id, namespace_id], map: "idx_devops_adoption_segments_namespaces_pair")
    @@index([namespace_id], map: "idx_analytics_devops_adoption_segments_on_namespace_id")
}

model analytics_devops_adoption_snapshots {
    id                                  BigInt      @id @default(autoincrement())
    recorded_at                         DateTime    @db.Timestamptz(6)
    issue_opened                        Boolean
    merge_request_opened                Boolean
    merge_request_approved              Boolean
    runner_configured                   Boolean
    pipeline_succeeded                  Boolean
    deploy_succeeded                    Boolean
    security_scan_succeeded             Boolean?
    end_time                            DateTime    @db.Timestamptz(6)
    total_projects_count                Int?
    code_owners_used_count              Int?
    namespace_id                        Int?
    sast_enabled_count                  Int?
    dast_enabled_count                  Int?
    dependency_scanning_enabled_count   Int?
    coverage_fuzzing_enabled_count      Int?
    vulnerability_management_used_count Int?
    namespaces                          namespaces? @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_78c9eac821")

    @@index([namespace_id, end_time], map: "idx_devops_adoption_segments_namespace_end_time")
    @@index([namespace_id, recorded_at], map: "idx_devops_adoption_segments_namespace_recorded_at")
}

model analytics_language_trend_repository_languages {
    file_count              Int                   @default(0)
    programming_language_id Int
    project_id              Int
    loc                     Int                   @default(0)
    bytes                   Int                   @default(0)
    percentage              Int                   @default(0) @db.SmallInt
    snapshot_date           DateTime              @db.Date
    programming_languages   programming_languages @relation(fields: [programming_language_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9d851d566c")
    projects                projects              @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_86cc9aef5f")

    @@id([programming_language_id, project_id, snapshot_date])
    @@index([project_id], map: "analytics_repository_languages_on_project_id")
}

model analytics_usage_trends_measurements {
    id          BigInt   @id @default(autoincrement())
    count       BigInt
    recorded_at DateTime @db.Timestamptz(6)
    identifier  Int      @db.SmallInt

    @@unique([identifier, recorded_at], map: "index_on_instance_statistics_recorded_at_and_identifier")
}

model appearances {
    id                              Int      @id @default(autoincrement())
    title                           String   @db.VarChar
    description                     String
    logo                            String?  @db.VarChar
    updated_by                      Int?
    header_logo                     String?  @db.VarChar
    created_at                      DateTime @db.Timestamptz(6)
    updated_at                      DateTime @db.Timestamptz(6)
    description_html                String?
    cached_markdown_version         Int?
    new_project_guidelines          String?
    new_project_guidelines_html     String?
    header_message                  String?
    header_message_html             String?
    footer_message                  String?
    footer_message_html             String?
    message_background_color        String?
    message_font_color              String?
    favicon                         String?  @db.VarChar
    email_header_and_footer_enabled Boolean  @default(false)
    profile_image_guidelines        String?
    profile_image_guidelines_html   String?
}

model application_setting_terms {
    id                      Int               @id @default(autoincrement())
    cached_markdown_version Int?
    terms                   String
    terms_html              String?
    term_agreements         term_agreements[]
    users                   users[]
}

model application_settings {
    id                                                                            Int         @id @default(autoincrement())
    default_projects_limit                                                        Int?
    signup_enabled                                                                Boolean?
    gravatar_enabled                                                              Boolean?
    sign_in_text                                                                  String?
    created_at                                                                    DateTime?   @db.Timestamp(6)
    updated_at                                                                    DateTime?   @db.Timestamp(6)
    home_page_url                                                                 String?     @db.VarChar
    default_branch_protection                                                     Int?        @default(2)
    help_text                                                                     String?
    restricted_visibility_levels                                                  String?
    version_check_enabled                                                         Boolean?    @default(true)
    max_attachment_size                                                           Int         @default(10)
    default_project_visibility                                                    Int         @default(0)
    default_snippet_visibility                                                    Int         @default(0)
    user_oauth_applications                                                       Boolean?    @default(true)
    after_sign_out_path                                                           String?     @db.VarChar
    session_expire_delay                                                          Int         @default(10080)
    import_sources                                                                String?
    help_page_text                                                                String?
    shared_runners_enabled                                                        Boolean     @default(true)
    max_artifacts_size                                                            Int         @default(100)
    runners_registration_token                                                    String?     @db.VarChar
    max_pages_size                                                                Int         @default(100)
    require_two_factor_authentication                                             Boolean?    @default(false)
    two_factor_grace_period                                                       Int?        @default(48)
    metrics_enabled                                                               Boolean?    @default(false)
    metrics_host                                                                  String?     @default("localhost") @db.VarChar
    metrics_pool_size                                                             Int?        @default(16)
    metrics_timeout                                                               Int?        @default(10)
    metrics_method_call_threshold                                                 Int?        @default(10)
    recaptcha_enabled                                                             Boolean?    @default(false)
    metrics_port                                                                  Int?        @default(8089)
    akismet_enabled                                                               Boolean?    @default(false)
    metrics_sample_interval                                                       Int?        @default(15)
    email_author_in_body                                                          Boolean?    @default(false)
    default_group_visibility                                                      Int?
    repository_checks_enabled                                                     Boolean?    @default(false)
    shared_runners_text                                                           String?
    metrics_packet_size                                                           Int?        @default(1)
    disabled_oauth_sign_in_sources                                                String?
    health_check_access_token                                                     String?     @db.VarChar
    send_user_confirmation_email                                                  Boolean?    @default(false)
    container_registry_token_expire_delay                                         Int?        @default(5)
    after_sign_up_text                                                            String?
    user_default_external                                                         Boolean     @default(false)
    elasticsearch_indexing                                                        Boolean     @default(false)
    elasticsearch_search                                                          Boolean     @default(false)
    repository_storages                                                           String?     @default("default") @db.VarChar
    enabled_git_access_protocol                                                   String?     @db.VarChar
    usage_ping_enabled                                                            Boolean     @default(true)
    sign_in_text_html                                                             String?
    help_page_text_html                                                           String?
    shared_runners_text_html                                                      String?
    after_sign_up_text_html                                                       String?
    rsa_key_restriction                                                           Int         @default(0)
    dsa_key_restriction                                                           Int         @default(-1)
    ecdsa_key_restriction                                                         Int         @default(0)
    ed25519_key_restriction                                                       Int         @default(0)
    housekeeping_enabled                                                          Boolean     @default(true)
    housekeeping_bitmaps_enabled                                                  Boolean     @default(true)
    housekeeping_incremental_repack_period                                        Int         @default(10)
    housekeeping_full_repack_period                                               Int         @default(50)
    housekeeping_gc_period                                                        Int         @default(200)
    html_emails_enabled                                                           Boolean?    @default(true)
    plantuml_url                                                                  String?     @db.VarChar
    plantuml_enabled                                                              Boolean?
    shared_runners_minutes                                                        Int         @default(0)
    repository_size_limit                                                         BigInt?     @default(0)
    terminal_max_session_time                                                     Int         @default(0)
    unique_ips_limit_per_user                                                     Int?
    unique_ips_limit_time_window                                                  Int?
    unique_ips_limit_enabled                                                      Boolean     @default(false)
    default_artifacts_expire_in                                                   String      @default("0") @db.VarChar
    elasticsearch_url                                                             String?     @default("http://localhost:9200") @db.VarChar
    elasticsearch_aws                                                             Boolean     @default(false)
    elasticsearch_aws_region                                                      String?     @default("us-east-1") @db.VarChar
    elasticsearch_aws_access_key                                                  String?     @db.VarChar
    geo_status_timeout                                                            Int?        @default(10)
    uuid                                                                          String?     @db.VarChar
    polling_interval_multiplier                                                   Decimal     @default(1.0) @db.Decimal
    cached_markdown_version                                                       Int?
    check_namespace_plan                                                          Boolean     @default(false)
    mirror_max_delay                                                              Int         @default(300)
    mirror_max_capacity                                                           Int         @default(100)
    mirror_capacity_threshold                                                     Int         @default(50)
    prometheus_metrics_enabled                                                    Boolean     @default(true)
    authorized_keys_enabled                                                       Boolean     @default(true)
    help_page_hide_commercial_content                                             Boolean?    @default(false)
    help_page_support_url                                                         String?     @db.VarChar
    slack_app_enabled                                                             Boolean?    @default(false)
    slack_app_id                                                                  String?     @db.VarChar
    performance_bar_allowed_group_id                                              Int?
    allow_group_owners_to_manage_ldap                                             Boolean     @default(true)
    hashed_storage_enabled                                                        Boolean     @default(true)
    project_export_enabled                                                        Boolean     @default(true)
    auto_devops_enabled                                                           Boolean     @default(true)
    throttle_unauthenticated_enabled                                              Boolean     @default(false)
    throttle_unauthenticated_requests_per_period                                  Int         @default(3600)
    throttle_unauthenticated_period_in_seconds                                    Int         @default(3600)
    throttle_authenticated_api_enabled                                            Boolean     @default(false)
    throttle_authenticated_api_requests_per_period                                Int         @default(7200)
    throttle_authenticated_api_period_in_seconds                                  Int         @default(3600)
    throttle_authenticated_web_enabled                                            Boolean     @default(false)
    throttle_authenticated_web_requests_per_period                                Int         @default(7200)
    throttle_authenticated_web_period_in_seconds                                  Int         @default(3600)
    gitaly_timeout_default                                                        Int         @default(55)
    gitaly_timeout_medium                                                         Int         @default(30)
    gitaly_timeout_fast                                                           Int         @default(10)
    mirror_available                                                              Boolean     @default(true)
    password_authentication_enabled_for_web                                       Boolean?
    password_authentication_enabled_for_git                                       Boolean     @default(true)
    auto_devops_domain                                                            String?     @db.VarChar
    external_authorization_service_enabled                                        Boolean     @default(false)
    external_authorization_service_url                                            String?     @db.VarChar
    external_authorization_service_default_label                                  String?     @db.VarChar
    pages_domain_verification_enabled                                             Boolean     @default(true)
    user_default_internal_regex                                                   String?     @db.VarChar
    external_authorization_service_timeout                                        Float?      @default(0.5)
    external_auth_client_cert                                                     String?
    encrypted_external_auth_client_key                                            String?
    encrypted_external_auth_client_key_iv                                         String?     @db.VarChar
    encrypted_external_auth_client_key_pass                                       String?     @db.VarChar
    encrypted_external_auth_client_key_pass_iv                                    String?     @db.VarChar
    email_additional_text                                                         String?     @db.VarChar
    enforce_terms                                                                 Boolean?    @default(false)
    file_template_project_id                                                      Int?
    pseudonymizer_enabled                                                         Boolean     @default(false)
    hide_third_party_offers                                                       Boolean     @default(false)
    snowplow_enabled                                                              Boolean     @default(false)
    snowplow_collector_hostname                                                   String?     @db.VarChar
    snowplow_cookie_domain                                                        String?     @db.VarChar
    web_ide_clientside_preview_enabled                                            Boolean     @default(false)
    user_show_add_ssh_key_message                                                 Boolean     @default(true)
    custom_project_templates_group_id                                             Int?
    usage_stats_set_by_user_id                                                    Int?
    receive_max_input_size                                                        Int?
    diff_max_patch_bytes                                                          Int         @default(204800)
    archive_builds_in_seconds                                                     Int?
    commit_email_hostname                                                         String?     @db.VarChar
    protected_ci_variables                                                        Boolean     @default(true)
    runners_registration_token_encrypted                                          String?     @db.VarChar
    local_markdown_version                                                        Int         @default(0)
    first_day_of_week                                                             Int         @default(0)
    elasticsearch_limit_indexing                                                  Boolean     @default(false)
    default_project_creation                                                      Int         @default(2)
    lets_encrypt_notification_email                                               String?     @db.VarChar
    lets_encrypt_terms_of_service_accepted                                        Boolean     @default(false)
    geo_node_allowed_ips                                                          String?     @default(dbgenerated("'0.0.0.0/0, ::/0'::character varying")) @db.VarChar
    elasticsearch_shards                                                          Int         @default(5)
    elasticsearch_replicas                                                        Int         @default(1)
    encrypted_lets_encrypt_private_key                                            String?
    encrypted_lets_encrypt_private_key_iv                                         String?
    required_instance_ci_template                                                 String?     @db.VarChar
    dns_rebinding_protection_enabled                                              Boolean     @default(true)
    default_project_deletion_protection                                           Boolean     @default(false)
    grafana_enabled                                                               Boolean     @default(false)
    lock_memberships_to_ldap                                                      Boolean     @default(false)
    time_tracking_limit_to_hours                                                  Boolean     @default(false)
    grafana_url                                                                   String      @default("/-/grafana") @db.VarChar
    login_recaptcha_protection_enabled                                            Boolean     @default(false)
    outbound_local_requests_whitelist                                             String[]    @db.VarChar(255)
    raw_blob_request_limit                                                        Int         @default(300)
    allow_local_requests_from_web_hooks_and_services                              Boolean     @default(false)
    allow_local_requests_from_system_hooks                                        Boolean     @default(true)
    instance_administration_project_id                                            Int?
    asset_proxy_enabled                                                           Boolean     @default(false)
    asset_proxy_url                                                               String?     @db.VarChar
    encrypted_asset_proxy_secret_key                                              String?
    encrypted_asset_proxy_secret_key_iv                                           String?     @db.VarChar
    static_objects_external_storage_url                                           String?     @db.VarChar(255)
    static_objects_external_storage_auth_token                                    String?     @db.VarChar(255)
    max_personal_access_token_lifetime                                            Int?
    throttle_protected_paths_enabled                                              Boolean     @default(false)
    throttle_protected_paths_requests_per_period                                  Int         @default(10)
    throttle_protected_paths_period_in_seconds                                    Int         @default(60)
    protected_paths                                                               String[]    @db.VarChar(255)
    throttle_incident_management_notification_enabled                             Boolean     @default(false)
    throttle_incident_management_notification_period_in_seconds                   Int?        @default(3600)
    throttle_incident_management_notification_per_period                          Int?        @default(3600)
    push_event_hooks_limit                                                        Int         @default(3)
    push_event_activities_limit                                                   Int         @default(3)
    custom_http_clone_url_root                                                    String?     @db.VarChar(511)
    deletion_adjourned_period                                                     Int         @default(7)
    license_trial_ends_on                                                         DateTime?   @db.Date
    eks_integration_enabled                                                       Boolean     @default(false)
    eks_account_id                                                                String?     @db.VarChar(128)
    eks_access_key_id                                                             String?     @db.VarChar(128)
    encrypted_eks_secret_access_key_iv                                            String?     @db.VarChar(255)
    encrypted_eks_secret_access_key                                               String?
    snowplow_app_id                                                               String?     @db.VarChar
    productivity_analytics_start_date                                             DateTime?   @db.Timestamptz(6)
    default_ci_config_path                                                        String?     @db.VarChar(255)
    sourcegraph_enabled                                                           Boolean     @default(false)
    sourcegraph_url                                                               String?     @db.VarChar(255)
    sourcegraph_public_only                                                       Boolean     @default(true)
    snippet_size_limit                                                            BigInt      @default(52428800)
    minimum_password_length                                                       Int         @default(8)
    encrypted_akismet_api_key                                                     String?
    encrypted_akismet_api_key_iv                                                  String?     @db.VarChar(255)
    encrypted_elasticsearch_aws_secret_access_key                                 String?
    encrypted_elasticsearch_aws_secret_access_key_iv                              String?     @db.VarChar(255)
    encrypted_recaptcha_private_key                                               String?
    encrypted_recaptcha_private_key_iv                                            String?     @db.VarChar(255)
    encrypted_recaptcha_site_key                                                  String?
    encrypted_recaptcha_site_key_iv                                               String?     @db.VarChar(255)
    encrypted_slack_app_secret                                                    String?
    encrypted_slack_app_secret_iv                                                 String?     @db.VarChar(255)
    encrypted_slack_app_verification_token                                        String?
    encrypted_slack_app_verification_token_iv                                     String?     @db.VarChar(255)
    force_pages_access_control                                                    Boolean     @default(false)
    updating_name_disabled_for_users                                              Boolean     @default(false)
    instance_administrators_group_id                                              Int?
    elasticsearch_indexed_field_length_limit                                      Int         @default(0)
    elasticsearch_max_bulk_size_mb                                                Int         @default(10) @db.SmallInt
    elasticsearch_max_bulk_concurrency                                            Int         @default(10) @db.SmallInt
    disable_overriding_approvers_per_merge_request                                Boolean     @default(false)
    prevent_merge_requests_author_approval                                        Boolean     @default(false)
    prevent_merge_requests_committers_approval                                    Boolean     @default(false)
    email_restrictions_enabled                                                    Boolean     @default(false)
    email_restrictions                                                            String?
    npm_package_requests_forwarding                                               Boolean     @default(true)
    container_expiration_policies_enable_historic_entries                         Boolean     @default(false)
    issues_create_limit                                                           Int         @default(0)
    push_rule_id                                                                  Int?        @unique(map: "index_application_settings_on_push_rule_id")
    group_owners_can_manage_default_branch_protection                             Boolean     @default(true)
    container_registry_vendor                                                     String      @default("")
    container_registry_version                                                    String      @default("")
    container_registry_features                                                   String[]
    spam_check_endpoint_url                                                       String?
    spam_check_endpoint_enabled                                                   Boolean     @default(false)
    elasticsearch_pause_indexing                                                  Boolean     @default(false)
    repository_storages_weighted                                                  Json        @default("{}")
    max_import_size                                                               Int         @default(0)
    enforce_pat_expiration                                                        Boolean     @default(true)
    compliance_frameworks                                                         Int[]       @db.SmallInt
    notify_on_unknown_sign_in                                                     Boolean     @default(true)
    default_branch_name                                                           String?
    project_import_limit                                                          Int         @default(6)
    project_export_limit                                                          Int         @default(6)
    project_download_export_limit                                                 Int         @default(1)
    group_import_limit                                                            Int         @default(6)
    group_export_limit                                                            Int         @default(6)
    group_download_export_limit                                                   Int         @default(1)
    maintenance_mode                                                              Boolean     @default(false)
    maintenance_mode_message                                                      String?
    wiki_page_max_content_bytes                                                   BigInt      @default(52428800)
    elasticsearch_indexed_file_size_limit_kb                                      Int         @default(1024)
    enforce_namespace_storage_limit                                               Boolean     @default(false)
    container_registry_delete_tags_service_timeout                                Int         @default(250)
    kroki_url                                                                     String?     @db.VarChar
    kroki_enabled                                                                 Boolean?
    elasticsearch_client_request_timeout                                          Int         @default(0)
    gitpod_enabled                                                                Boolean     @default(false)
    gitpod_url                                                                    String?     @default("https://gitpod.io/")
    abuse_notification_email                                                      String?     @db.VarChar
    require_admin_approval_after_user_signup                                      Boolean     @default(true)
    help_page_documentation_base_url                                              String?
    automatic_purchased_storage_allocation                                        Boolean     @default(false)
    encrypted_ci_jwt_signing_key                                                  String?
    encrypted_ci_jwt_signing_key_iv                                               String?
    container_registry_expiration_policies_worker_capacity                        Int         @default(4)
    elasticsearch_analyzers_smartcn_enabled                                       Boolean     @default(false)
    elasticsearch_analyzers_smartcn_search                                        Boolean     @default(false)
    elasticsearch_analyzers_kuromoji_enabled                                      Boolean     @default(false)
    elasticsearch_analyzers_kuromoji_search                                       Boolean     @default(false)
    secret_detection_token_revocation_enabled                                     Boolean     @default(false)
    secret_detection_token_revocation_url                                         String?
    encrypted_secret_detection_token_revocation_token                             String?
    encrypted_secret_detection_token_revocation_token_iv                          String?
    domain_denylist_enabled                                                       Boolean?    @default(false)
    domain_denylist                                                               String?
    domain_allowlist                                                              String?
    new_user_signups_cap                                                          Int?
    encrypted_cloud_license_auth_token                                            String?
    encrypted_cloud_license_auth_token_iv                                         String?
    secret_detection_revocation_token_types_url                                   String?
    disable_feed_token                                                            Boolean     @default(false)
    personal_access_token_prefix                                                  String?     @default("glpat-")
    rate_limiting_response_text                                                   String?
    invisible_captcha_enabled                                                     Boolean     @default(false)
    container_registry_cleanup_tags_service_max_list_size                         Int         @default(200)
    enforce_ssh_key_expiration                                                    Boolean     @default(true)
    git_two_factor_session_expiry                                                 Int         @default(15)
    keep_latest_artifact                                                          Boolean     @default(true)
    notes_create_limit                                                            Int         @default(300)
    notes_create_limit_allowlist                                                  String[]
    kroki_formats                                                                 Json        @default("{}")
    in_product_marketing_emails_enabled                                           Boolean     @default(true)
    asset_proxy_whitelist                                                         String?
    admin_mode                                                                    Boolean     @default(false)
    delayed_project_removal                                                       Boolean     @default(false)
    lock_delayed_project_removal                                                  Boolean     @default(false)
    external_pipeline_validation_service_timeout                                  Int?
    encrypted_external_pipeline_validation_service_token                          String?
    encrypted_external_pipeline_validation_service_token_iv                       String?
    external_pipeline_validation_service_url                                      String?
    throttle_unauthenticated_packages_api_requests_per_period                     Int         @default(800)
    throttle_unauthenticated_packages_api_period_in_seconds                       Int         @default(15)
    throttle_authenticated_packages_api_requests_per_period                       Int         @default(1000)
    throttle_authenticated_packages_api_period_in_seconds                         Int         @default(15)
    throttle_unauthenticated_packages_api_enabled                                 Boolean     @default(false)
    throttle_authenticated_packages_api_enabled                                   Boolean     @default(false)
    deactivate_dormant_users                                                      Boolean     @default(false)
    whats_new_variant                                                             Int?        @default(0) @db.SmallInt
    encrypted_spam_check_api_key                                                  Bytes?
    encrypted_spam_check_api_key_iv                                               Bytes?
    floc_enabled                                                                  Boolean     @default(false)
    elasticsearch_username                                                        String?
    encrypted_elasticsearch_password                                              Bytes?
    encrypted_elasticsearch_password_iv                                           Bytes?
    diff_max_lines                                                                Int         @default(50000)
    diff_max_files                                                                Int         @default(1000)
    valid_runner_registrars                                                       String[]    @db.VarChar
    encrypted_mailgun_signing_key                                                 Bytes?
    encrypted_mailgun_signing_key_iv                                              Bytes?
    mailgun_events_enabled                                                        Boolean     @default(false)
    usage_ping_features_enabled                                                   Boolean     @default(false)
    encrypted_customers_dot_jwt_signing_key                                       Bytes?
    encrypted_customers_dot_jwt_signing_key_iv                                    Bytes?
    pypi_package_requests_forwarding                                              Boolean     @default(true)
    throttle_unauthenticated_files_api_requests_per_period                        Int         @default(125)
    throttle_unauthenticated_files_api_period_in_seconds                          Int         @default(15)
    throttle_authenticated_files_api_requests_per_period                          Int         @default(500)
    throttle_authenticated_files_api_period_in_seconds                            Int         @default(15)
    throttle_unauthenticated_files_api_enabled                                    Boolean     @default(false)
    throttle_authenticated_files_api_enabled                                      Boolean     @default(false)
    max_yaml_size_bytes                                                           BigInt      @default(1048576)
    max_yaml_depth                                                                Int         @default(100)
    throttle_authenticated_git_lfs_requests_per_period                            Int         @default(1000)
    throttle_authenticated_git_lfs_period_in_seconds                              Int         @default(60)
    throttle_authenticated_git_lfs_enabled                                        Boolean     @default(false)
    user_deactivation_emails_enabled                                              Boolean     @default(true)
    throttle_unauthenticated_api_enabled                                          Boolean     @default(false)
    throttle_unauthenticated_api_requests_per_period                              Int         @default(3600)
    throttle_unauthenticated_api_period_in_seconds                                Int         @default(3600)
    jobs_per_stage_page_size                                                      Int         @default(200)
    sidekiq_job_limiter_mode                                                      Int         @default(1) @db.SmallInt
    sidekiq_job_limiter_compression_threshold_bytes                               Int         @default(100000)
    sidekiq_job_limiter_limit_bytes                                               Int         @default(0)
    suggest_pipeline_enabled                                                      Boolean     @default(true)
    throttle_unauthenticated_deprecated_api_requests_per_period                   Int         @default(1800)
    throttle_unauthenticated_deprecated_api_period_in_seconds                     Int         @default(3600)
    throttle_unauthenticated_deprecated_api_enabled                               Boolean     @default(false)
    throttle_authenticated_deprecated_api_requests_per_period                     Int         @default(3600)
    throttle_authenticated_deprecated_api_period_in_seconds                       Int         @default(3600)
    throttle_authenticated_deprecated_api_enabled                                 Boolean     @default(false)
    dependency_proxy_ttl_group_policy_worker_capacity                             Int         @default(2) @db.SmallInt
    content_validation_endpoint_url                                               String?
    encrypted_content_validation_api_key                                          Bytes?
    encrypted_content_validation_api_key_iv                                       Bytes?
    content_validation_endpoint_enabled                                           Boolean     @default(false)
    sentry_enabled                                                                Boolean     @default(false)
    sentry_dsn                                                                    String?
    sentry_clientside_dsn                                                         String?
    sentry_environment                                                            String?
    max_ssh_key_lifetime                                                          Int?
    static_objects_external_storage_auth_token_encrypted                          String?
    future_subscriptions                                                          Json        @default("[]")
    user_email_lookup_limit                                                       Int         @default(60)
    packages_cleanup_package_file_worker_capacity                                 Int         @default(2) @db.SmallInt
    container_registry_import_max_tags_count                                      Int         @default(100)
    container_registry_import_max_retries                                         Int         @default(3)
    container_registry_import_start_max_retries                                   Int         @default(50)
    container_registry_import_max_step_duration                                   Int         @default(300)
    container_registry_import_target_plan                                         String      @default("free")
    container_registry_import_created_before                                      DateTime    @default(dbgenerated("'2022-01-23 00:00:00+00'::timestamp with time zone")) @db.Timestamptz(6)
    runner_token_expiration_interval                                              Int?
    group_runner_token_expiration_interval                                        Int?
    project_runner_token_expiration_interval                                      Int?
    ecdsa_sk_key_restriction                                                      Int         @default(0)
    ed25519_sk_key_restriction                                                    Int         @default(0)
    users_get_by_id_limit                                                         Int         @default(300)
    users_get_by_id_limit_allowlist                                               String[]
    container_registry_expiration_policies_caching                                Boolean     @default(true)
    search_rate_limit                                                             Int         @default(30)
    search_rate_limit_unauthenticated                                             Int         @default(10)
    encrypted_database_grafana_api_key                                            Bytes?
    encrypted_database_grafana_api_key_iv                                         Bytes?
    database_grafana_api_url                                                      String?
    database_grafana_tag                                                          String?
    namespaces_application_settings_custom_project_templates_group_idTonamespaces namespaces? @relation("application_settings_custom_project_templates_group_idTonamespaces", fields: [custom_project_templates_group_id], references: [id], onUpdate: NoAction, map: "fk_rails_b53e481273")
    projects_application_settings_file_template_project_idToprojects              projects?   @relation("application_settings_file_template_project_idToprojects", fields: [file_template_project_id], references: [id], onUpdate: NoAction, map: "fk_ec757bd087")
    projects_application_settings_instance_administration_project_idToprojects    projects?   @relation("application_settings_instance_administration_project_idToprojects", fields: [instance_administration_project_id], references: [id], onUpdate: NoAction, map: "fk_rails_7e112a9599")
    namespaces_application_settings_instance_administrators_group_idTonamespaces  namespaces? @relation("application_settings_instance_administrators_group_idTonamespaces", fields: [instance_administrators_group_id], references: [id], onUpdate: NoAction, map: "fk_e8a145f3a7")
    push_rules                                                                    push_rules? @relation(fields: [push_rule_id], references: [id], onUpdate: NoAction, map: "fk_693b8795e4")
    users                                                                         users?      @relation(fields: [usage_stats_set_by_user_id], references: [id], onUpdate: NoAction, map: "fk_964370041d")

    @@index([custom_project_templates_group_id], map: "index_application_settings_on_custom_project_templates_group_id")
    @@index([file_template_project_id], map: "index_application_settings_on_file_template_project_id")
    @@index([instance_administrators_group_id], map: "index_application_settings_on_instance_administrators_group_id")
    @@index([usage_stats_set_by_user_id], map: "index_application_settings_on_usage_stats_set_by_user_id")
    @@index([instance_administration_project_id], map: "index_applicationsettings_on_instance_administration_project_id")
}

model approval_merge_request_rule_sources {
    id                             BigInt                       @id @default(autoincrement())
    approval_merge_request_rule_id BigInt                       @unique(map: "index_approval_merge_request_rule_sources_1")
    approval_project_rule_id       BigInt
    approval_merge_request_rules   approval_merge_request_rules @relation(fields: [approval_merge_request_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e605a04f76")
    approval_project_rules         approval_project_rules       @relation(fields: [approval_project_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_64e8ed3c7e")

    @@index([approval_project_rule_id], map: "index_approval_merge_request_rule_sources_2")
}

model approval_merge_request_rules {
    id                                              BigInt                                            @id @default(autoincrement())
    created_at                                      DateTime                                          @db.Timestamptz(6)
    updated_at                                      DateTime                                          @db.Timestamptz(6)
    merge_request_id                                Int
    approvals_required                              Int                                               @default(0) @db.SmallInt
    name                                            String                                            @db.VarChar
    rule_type                                       Int                                               @default(1) @db.SmallInt
    report_type                                     Int?                                              @db.SmallInt
    section                                         String?
    modified_from_project_rule                      Boolean                                           @default(false)
    orchestration_policy_idx                        Int?                                              @db.SmallInt
    merge_requests                                  merge_requests                                    @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_004ce82224")
    approval_merge_request_rule_sources             approval_merge_request_rule_sources?
    approval_merge_request_rules_approved_approvers approval_merge_request_rules_approved_approvers[]
    approval_merge_request_rules_groups             approval_merge_request_rules_groups[]
    approval_merge_request_rules_users              approval_merge_request_rules_users[]

    @@index([merge_request_id], map: "approval_mr_rule_index_merge_request_id")
}

model approval_merge_request_rules_approved_approvers {
    id                             BigInt                       @id @default(autoincrement())
    approval_merge_request_rule_id BigInt
    user_id                        Int
    approval_merge_request_rules   approval_merge_request_rules @relation(fields: [approval_merge_request_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6577725edb")
    users                          users                        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8dc94cff4d")

    @@unique([approval_merge_request_rule_id, user_id], map: "index_approval_merge_request_rules_approved_approvers_1")
    @@index([user_id], map: "index_approval_merge_request_rules_approved_approvers_2")
}

model approval_merge_request_rules_groups {
    id                             BigInt                       @id @default(autoincrement())
    approval_merge_request_rule_id BigInt
    group_id                       Int
    approval_merge_request_rules   approval_merge_request_rules @relation(fields: [approval_merge_request_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5b2ecf6139")
    namespaces                     namespaces                   @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2020a7124a")

    @@unique([approval_merge_request_rule_id, group_id], map: "index_approval_merge_request_rules_groups_1")
    @@index([group_id], map: "index_approval_merge_request_rules_groups_2")
}

model approval_merge_request_rules_users {
    id                             BigInt                       @id @default(autoincrement())
    approval_merge_request_rule_id BigInt
    user_id                        Int
    approval_merge_request_rules   approval_merge_request_rules @relation(fields: [approval_merge_request_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_80e6801803")
    users                          users                        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bc8972fa55")

    @@unique([approval_merge_request_rule_id, user_id], map: "index_approval_merge_request_rules_users_1")
    @@index([user_id], map: "index_approval_merge_request_rules_users_2")
}

model approval_project_rules {
    id                                        BigInt                                      @id @default(autoincrement())
    created_at                                DateTime                                    @db.Timestamptz(6)
    updated_at                                DateTime                                    @db.Timestamptz(6)
    project_id                                Int
    approvals_required                        Int                                         @default(0) @db.SmallInt
    name                                      String                                      @db.VarChar
    rule_type                                 Int                                         @default(0) @db.SmallInt
    scanners                                  String[]
    vulnerabilities_allowed                   Int                                         @default(0) @db.SmallInt
    severity_levels                           String[]
    report_type                               Int?                                        @db.SmallInt
    vulnerability_states                      String[]
    orchestration_policy_idx                  Int?                                        @db.SmallInt
    projects                                  projects                                    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5fb4dd100b")
    approval_merge_request_rule_sources       approval_merge_request_rule_sources[]
    approval_project_rules_groups             approval_project_rules_groups[]
    approval_project_rules_protected_branches approval_project_rules_protected_branches[]
    approval_project_rules_users              approval_project_rules_users[]

    @@index([project_id], map: "index_approval_project_rules_on_project_id")
    @@index([rule_type], map: "index_approval_project_rules_on_rule_type")
    @@index([report_type], map: "index_approval_project_rules_report_type")
}

model approval_project_rules_groups {
    id                       BigInt                 @id @default(autoincrement())
    approval_project_rule_id BigInt
    group_id                 Int
    approval_project_rules   approval_project_rules @relation(fields: [approval_project_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9071e863d1")
    namespaces               namespaces             @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_396841e79e")

    @@unique([approval_project_rule_id, group_id], map: "index_approval_project_rules_groups_1")
    @@index([group_id], map: "index_approval_project_rules_groups_2")
}

model approval_project_rules_protected_branches {
    approval_project_rule_id BigInt
    protected_branch_id      Int
    approval_project_rules   approval_project_rules @relation(fields: [approval_project_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_65203aa786")
    protected_branches       protected_branches     @relation(fields: [protected_branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b7567b031b")

    @@id([approval_project_rule_id, protected_branch_id])
    @@index([protected_branch_id], map: "index_approval_project_rules_protected_branches_pb_id")
}

model approval_project_rules_users {
    id                       BigInt                 @id @default(autoincrement())
    approval_project_rule_id BigInt
    user_id                  Int
    approval_project_rules   approval_project_rules @relation(fields: [approval_project_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b9e9394efb")
    users                    users                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f365da8250")

    @@unique([approval_project_rule_id, user_id], map: "index_approval_project_rules_users_1")
    @@index([user_id], map: "index_approval_project_rules_users_2")
    @@index([approval_project_rule_id], map: "index_approval_project_rules_users_on_approval_project_rule_id")
}

model approvals {
    id               Int            @id @default(autoincrement())
    merge_request_id Int
    user_id          Int
    created_at       DateTime?      @db.Timestamp(6)
    updated_at       DateTime?      @db.Timestamp(6)
    merge_requests   merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_310d714958")

    @@unique([user_id, merge_request_id], map: "index_approvals_on_user_id_and_merge_request_id")
    @@index([merge_request_id], map: "index_approvals_on_merge_request_id")
    @@index([merge_request_id, created_at], map: "index_approvals_on_merge_request_id_and_created_at")
}

model approver_groups {
    id          Int        @id @default(autoincrement())
    target_id   Int
    target_type String     @db.VarChar
    group_id    Int
    created_at  DateTime?  @db.Timestamp(6)
    updated_at  DateTime?  @db.Timestamp(6)
    namespaces  namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1cdcbd7723")

    @@index([group_id], map: "index_approver_groups_on_group_id")
    @@index([target_id, target_type], map: "index_approver_groups_on_target_id_and_target_type")
}

model approvers {
    id          Int       @id @default(autoincrement())
    target_id   Int
    target_type String?   @db.VarChar
    user_id     Int
    created_at  DateTime? @db.Timestamp(6)
    updated_at  DateTime? @db.Timestamp(6)

    @@index([target_id, target_type], map: "index_approvers_on_target_id_and_target_type")
    @@index([user_id], map: "index_approvers_on_user_id")
}

model ar_internal_metadata {
    key        String   @id @db.VarChar
    value      String?  @db.VarChar
    created_at DateTime @db.Timestamp(6)
    updated_at DateTime @db.Timestamp(6)
}

model atlassian_identities {
    user_id                    Int       @id @default(autoincrement())
    created_at                 DateTime  @db.Timestamptz(6)
    updated_at                 DateTime  @db.Timestamptz(6)
    expires_at                 DateTime? @db.Timestamptz(6)
    extern_uid                 String    @unique(map: "index_atlassian_identities_on_extern_uid")
    encrypted_token            Bytes?
    encrypted_token_iv         Bytes?
    encrypted_refresh_token    Bytes?
    encrypted_refresh_token_iv Bytes?
    users                      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c02928bc18")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model audit_events {
    id             BigInt   @default(autoincrement())
    author_id      Int
    entity_id      Int
    entity_type    String   @db.VarChar
    details        String?
    ip_address     String?  @db.Inet
    author_name    String?
    entity_path    String?
    target_details String?
    created_at     DateTime @db.Timestamp(6)
    target_type    String?
    target_id      BigInt?

    @@ignore
}

model audit_events_external_audit_event_destinations {
    id                 BigInt     @id @default(autoincrement())
    namespace_id       Int
    destination_url    String
    created_at         DateTime   @db.Timestamptz(6)
    updated_at         DateTime   @db.Timestamptz(6)
    verification_token String?    @unique(map: "index_audit_events_external_audit_on_verification_token")
    namespaces         namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0bc80a4edc")

    @@unique([namespace_id, destination_url], map: "index_external_audit_event_destinations_on_namespace_id")
}

model authentication_events {
    id         BigInt   @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    user_id    Int?
    result     Int      @db.SmallInt
    ip_address String?  @db.Inet
    provider   String
    user_name  String
    users      users?   @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_rails_b204656a54")

    @@index([provider], map: "index_authentication_events_on_provider")
    @@index([user_id], map: "index_authentication_events_on_user_id")
}

model award_emoji {
    id             Int       @id @default(autoincrement())
    name           String?   @db.VarChar
    user_id        Int?
    awardable_id   Int?
    awardable_type String?   @db.VarChar
    created_at     DateTime? @db.Timestamp(6)
    updated_at     DateTime? @db.Timestamp(6)

    @@index([user_id, name, awardable_type, awardable_id], map: "idx_award_emoji_on_user_emoji_name_awardable_type_awardable_id")
    @@index([awardable_type, awardable_id], map: "index_award_emoji_on_awardable_type_and_awardable_id")
}

model aws_roles {
    user_id          Int      @id @unique(map: "index_aws_roles_on_user_id")
    created_at       DateTime @db.Timestamptz(6)
    updated_at       DateTime @db.Timestamptz(6)
    role_arn         String?  @db.VarChar(2048)
    role_external_id String   @unique(map: "index_aws_roles_on_role_external_id") @db.VarChar(64)
    region           String?
    users            users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4ed56f4720")
}

model background_migration_jobs {
    id         BigInt   @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    status     Int      @default(0) @db.SmallInt
    class_name String
    arguments  Json

    @@index([class_name, arguments], map: "index_background_migration_jobs_on_class_name_and_arguments")
    @@index([class_name, status, id], map: "index_background_migration_jobs_on_class_name_and_status_and_id")
}

model badges {
    id         Int         @id @default(autoincrement())
    link_url   String      @db.VarChar
    image_url  String      @db.VarChar
    project_id Int?
    group_id   Int?
    type       String      @db.VarChar
    name       String?     @db.VarChar(255)
    created_at DateTime    @db.Timestamptz(6)
    updated_at DateTime    @db.Timestamptz(6)
    namespaces namespaces? @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9df4a56538")
    projects   projects?   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5a7c055bdc")

    @@index([group_id], map: "index_badges_on_group_id")
    @@index([project_id], map: "index_badges_on_project_id")
}

model banned_users {
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    user_id    Int      @id
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fa5bb598e5")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model batched_background_migration_job_transition_logs {
    id                                  BigInt                            @default(autoincrement())
    batched_background_migration_job_id BigInt
    created_at                          DateTime                          @db.Timestamptz(6)
    updated_at                          DateTime                          @db.Timestamptz(6)
    previous_status                     Int                               @db.SmallInt
    next_status                         Int                               @db.SmallInt
    exception_class                     String?
    exception_message                   String?
    batched_background_migration_jobs   batched_background_migration_jobs @relation(fields: [batched_background_migration_job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b7523a175b")

    @@ignore
}

model batched_background_migration_jobs {
    id                                               BigInt                                             @id @default(autoincrement())
    created_at                                       DateTime                                           @db.Timestamptz(6)
    updated_at                                       DateTime                                           @db.Timestamptz(6)
    started_at                                       DateTime?                                          @db.Timestamptz(6)
    finished_at                                      DateTime?                                          @db.Timestamptz(6)
    batched_background_migration_id                  BigInt
    min_value                                        BigInt
    max_value                                        BigInt
    batch_size                                       Int
    sub_batch_size                                   Int
    status                                           Int                                                @default(0) @db.SmallInt
    attempts                                         Int                                                @default(0) @db.SmallInt
    metrics                                          Json                                               @default("{}")
    pause_ms                                         Int                                                @default(100)
    batched_background_migrations                    batched_background_migrations                      @relation(fields: [batched_background_migration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_432153b86d")
    batched_background_migration_job_transition_logs batched_background_migration_job_transition_logs[] @ignore

    @@index([batched_background_migration_id, id], map: "index_batched_jobs_by_batched_migration_id_and_id")
    @@index([batched_background_migration_id, status], map: "index_batched_jobs_on_batched_migration_id_and_status")
    @@index([batched_background_migration_id, finished_at], map: "index_migration_jobs_on_migration_id_and_finished_at")
    @@index([batched_background_migration_id, max_value], map: "index_migration_jobs_on_migration_id_and_max_value")
}

model batched_background_migrations {
    id                                BigInt                              @id @default(autoincrement())
    created_at                        DateTime                            @db.Timestamptz(6)
    updated_at                        DateTime                            @db.Timestamptz(6)
    min_value                         BigInt                              @default(1)
    max_value                         BigInt
    batch_size                        Int
    sub_batch_size                    Int
    interval                          Int                                 @db.SmallInt
    status                            Int                                 @default(0) @db.SmallInt
    job_class_name                    String
    batch_class_name                  String                              @default("PrimaryKeyBatchingStrategy")
    table_name                        String
    column_name                       String
    job_arguments                     Json                                @default("[]")
    total_tuple_count                 BigInt?
    pause_ms                          Int                                 @default(100)
    max_batch_size                    Int?
    batched_background_migration_jobs batched_background_migration_jobs[]

    @@unique([job_class_name, table_name, column_name, job_arguments], map: "index_batched_background_migrations_on_unique_configuration")
}

model board_assignees {
    id          Int    @id @default(autoincrement())
    board_id    Int
    assignee_id Int
    users       users  @relation(fields: [assignee_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1c0ff59e82")
    boards      boards @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3f6f926bd5")

    @@unique([board_id, assignee_id], map: "index_board_assignees_on_board_id_and_assignee_id")
    @@index([assignee_id], map: "index_board_assignees_on_assignee_id")
}

model board_group_recent_visits {
    id         BigInt      @id @default(autoincrement())
    created_at DateTime    @db.Timestamptz(6)
    updated_at DateTime    @db.Timestamptz(6)
    user_id    Int?
    board_id   Int?
    group_id   Int?
    boards     boards?     @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ca04c38720")
    namespaces namespaces? @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f410736518")
    users      users?      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_64bfc19bc5")

    @@unique([user_id, group_id, board_id], map: "index_board_group_recent_visits_on_user_group_and_board")
    @@index([board_id], map: "index_board_group_recent_visits_on_board_id")
    @@index([group_id], map: "index_board_group_recent_visits_on_group_id")
    @@index([user_id], map: "index_board_group_recent_visits_on_user_id")
}

model board_labels {
    id       Int    @id @default(autoincrement())
    board_id Int
    label_id Int
    boards   boards @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9374a16edd")
    labels   labels @relation(fields: [label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_362b0600a3")

    @@unique([board_id, label_id], map: "index_board_labels_on_board_id_and_label_id")
    @@index([label_id], map: "index_board_labels_on_label_id")
}

model board_project_recent_visits {
    id         BigInt    @id @default(autoincrement())
    created_at DateTime  @db.Timestamptz(6)
    updated_at DateTime  @db.Timestamptz(6)
    user_id    Int?
    project_id Int?
    board_id   Int?
    boards     boards?   @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b315dd0c80")
    projects   projects? @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_98f8843922")
    users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fb6fc419cb")

    @@unique([user_id, project_id, board_id], map: "index_board_project_recent_visits_on_user_project_and_board")
    @@index([board_id], map: "index_board_project_recent_visits_on_board_id")
    @@index([project_id], map: "index_board_project_recent_visits_on_project_id")
    @@index([user_id], map: "index_board_project_recent_visits_on_user_id")
}

model board_user_preferences {
    id          BigInt   @id @default(autoincrement())
    user_id     Int
    board_id    Int
    hide_labels Boolean?
    created_at  DateTime @db.Timestamptz(6)
    updated_at  DateTime @db.Timestamptz(6)
    boards      boards   @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_dbebdaa8fe")
    users       users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8b3b23ce82")

    @@unique([user_id, board_id], map: "index_board_user_preferences_on_user_id_and_board_id")
    @@index([board_id], map: "index_board_user_preferences_on_board_id")
    @@index([user_id], map: "index_board_user_preferences_on_user_id")
}

model boards {
    id                           Int                            @id @default(autoincrement())
    project_id                   Int?
    created_at                   DateTime                       @db.Timestamp(6)
    updated_at                   DateTime                       @db.Timestamp(6)
    name                         String                         @default("Development") @db.VarChar
    milestone_id                 Int?
    group_id                     Int?
    weight                       Int?
    hide_backlog_list            Boolean                        @default(false)
    hide_closed_list             Boolean                        @default(false)
    iteration_id                 BigInt?
    iteration_cadence_id         BigInt?
    namespaces                   namespaces?                    @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_1e9a074a35")
    iterations_cadences          iterations_cadences?           @relation(fields: [iteration_cadence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ab0a250ff6")
    projects                     projects?                      @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f15266b5f9")
    board_assignees              board_assignees[]
    board_group_recent_visits    board_group_recent_visits[]
    board_labels                 board_labels[]
    board_project_recent_visits  board_project_recent_visits[]
    board_user_preferences       board_user_preferences[]
    boards_epic_user_preferences boards_epic_user_preferences[]
    lists                        lists[]

    @@index([group_id], map: "index_boards_on_group_id")
    @@index([iteration_cadence_id], map: "index_boards_on_iteration_cadence_id")
    @@index([iteration_id], map: "index_boards_on_iteration_id")
    @@index([milestone_id], map: "index_boards_on_milestone_id")
    @@index([project_id], map: "index_boards_on_project_id")
}

model boards_epic_board_labels {
    id                 BigInt             @id @default(autoincrement())
    epic_board_id      BigInt
    label_id           Int
    boards_epic_boards boards_epic_boards @relation(fields: [epic_board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_7471128a8e")
    labels             labels             @relation(fields: [label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2bedeb8799")

    @@index([epic_board_id], map: "index_boards_epic_board_labels_on_epic_board_id")
    @@index([label_id], map: "index_boards_epic_board_labels_on_label_id")
}

model boards_epic_board_positions {
    id                 BigInt             @id @default(autoincrement())
    epic_board_id      BigInt
    epic_id            Int
    relative_position  Int?
    created_at         DateTime           @db.Timestamptz(6)
    updated_at         DateTime           @db.Timestamptz(6)
    boards_epic_boards boards_epic_boards @relation(fields: [epic_board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_cb4563dd6e")
    epics              epics              @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1ecfd9f2de")

    @@unique([epic_board_id, epic_id], map: "index_boards_epic_board_positions_on_epic_board_id_and_epic_id")
    @@index([epic_id], map: "index_boards_epic_board_positions_on_epic_id")
    @@index([epic_board_id, epic_id, relative_position], map: "index_boards_epic_board_positions_on_scoped_relative_position")
}

model boards_epic_board_recent_visits {
    id                 BigInt             @id @default(autoincrement())
    user_id            Int
    epic_board_id      BigInt
    group_id           Int
    created_at         DateTime           @db.Timestamptz(6)
    updated_at         DateTime           @db.Timestamptz(6)
    boards_epic_boards boards_epic_boards @relation(fields: [epic_board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e77911cf03")
    namespaces         namespaces         @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c4dcba4a3e")
    users              users              @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_96c2c18642")

    @@unique([user_id, group_id, epic_board_id], map: "index_epic_board_recent_visits_on_user_group_and_board")
    @@index([epic_board_id], map: "index_boards_epic_board_recent_visits_on_epic_board_id")
    @@index([group_id], map: "index_boards_epic_board_recent_visits_on_group_id")
    @@index([user_id], map: "index_boards_epic_board_recent_visits_on_user_id")
}

model boards_epic_boards {
    id                              BigInt                            @id @default(autoincrement())
    hide_backlog_list               Boolean                           @default(false)
    hide_closed_list                Boolean                           @default(false)
    group_id                        Int
    created_at                      DateTime                          @db.Timestamptz(6)
    updated_at                      DateTime                          @db.Timestamptz(6)
    name                            String                            @default("Development")
    namespaces                      namespaces                        @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_874c573878")
    boards_epic_board_labels        boards_epic_board_labels[]
    boards_epic_board_positions     boards_epic_board_positions[]
    boards_epic_board_recent_visits boards_epic_board_recent_visits[]
    boards_epic_lists               boards_epic_lists[]

    @@index([group_id], map: "index_boards_epic_boards_on_group_id")
}

model boards_epic_list_user_preferences {
    id                BigInt            @id @default(autoincrement())
    user_id           Int
    epic_list_id      BigInt
    created_at        DateTime          @db.Timestamptz(6)
    updated_at        DateTime          @db.Timestamptz(6)
    collapsed         Boolean           @default(false)
    boards_epic_lists boards_epic_lists @relation(fields: [epic_list_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_95eac55851")
    users             users             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f5f2fe5c1f")

    @@unique([user_id, epic_list_id], map: "index_epic_board_list_preferences_on_user_and_list")
    @@index([epic_list_id], map: "index_boards_epic_list_user_preferences_on_epic_list_id")
}

model boards_epic_lists {
    id                                BigInt                              @id @default(autoincrement())
    created_at                        DateTime                            @db.Timestamptz(6)
    updated_at                        DateTime                            @db.Timestamptz(6)
    epic_board_id                     BigInt
    label_id                          Int?
    position                          Int?
    list_type                         Int                                 @default(1) @db.SmallInt
    boards_epic_boards                boards_epic_boards                  @relation(fields: [epic_board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0f9c7f646f")
    labels                            labels?                             @relation(fields: [label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1fe6b54909")
    boards_epic_list_user_preferences boards_epic_list_user_preferences[]

    @@index([epic_board_id], map: "index_boards_epic_lists_on_epic_board_id")
    @@index([label_id], map: "index_boards_epic_lists_on_label_id")
}

model boards_epic_user_preferences {
    id        BigInt  @id @default(autoincrement())
    board_id  Int
    user_id   Int
    epic_id   Int
    collapsed Boolean @default(false)
    boards    boards  @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_268c57d62d")
    epics     epics   @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_76c4e9732d")
    users     users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_851fe1510a")

    @@unique([board_id, user_id, epic_id], map: "index_boards_epic_user_preferences_on_board_user_epic_unique")
    @@index([board_id], map: "index_boards_epic_user_preferences_on_board_id")
    @@index([epic_id], map: "index_boards_epic_user_preferences_on_epic_id")
    @@index([user_id], map: "index_boards_epic_user_preferences_on_user_id")
}

model broadcast_messages {
    id                      Int      @id @default(autoincrement())
    message                 String
    starts_at               DateTime @db.Timestamp(6)
    ends_at                 DateTime @db.Timestamp(6)
    created_at              DateTime @db.Timestamp(6)
    updated_at              DateTime @db.Timestamp(6)
    color                   String?  @db.VarChar
    font                    String?  @db.VarChar
    message_html            String
    cached_markdown_version Int?
    target_path             String?  @db.VarChar(255)
    broadcast_type          Int      @default(1) @db.SmallInt
    dismissable             Boolean?
    target_access_levels    Int[]

    @@index([ends_at, broadcast_type, id], map: "index_broadcast_message_on_ends_at_and_broadcast_type_and_id")
}

model bulk_import_configurations {
    id                        BigInt       @id @default(autoincrement())
    bulk_import_id            BigInt
    encrypted_url             String?
    encrypted_url_iv          String?
    encrypted_access_token    String?
    encrypted_access_token_iv String?
    created_at                DateTime     @db.Timestamptz(6)
    updated_at                DateTime     @db.Timestamptz(6)
    bulk_imports              bulk_imports @relation(fields: [bulk_import_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_536b96bff1")

    @@index([bulk_import_id], map: "index_bulk_import_configurations_on_bulk_import_id")
}

model bulk_import_entities {
    id                         BigInt                 @id @default(autoincrement())
    bulk_import_id             BigInt
    parent_id                  BigInt?
    namespace_id               Int?
    project_id                 Int?
    source_type                Int                    @db.SmallInt
    source_full_path           String
    destination_name           String
    destination_namespace      String
    status                     Int                    @db.SmallInt
    jid                        String?
    created_at                 DateTime               @db.Timestamptz(6)
    updated_at                 DateTime               @db.Timestamptz(6)
    bulk_imports               bulk_imports           @relation(fields: [bulk_import_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b69fa2b2df")
    namespaces                 namespaces?            @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_88c725229f")
    bulk_import_entities       bulk_import_entities?  @relation("bulk_import_entitiesTobulk_import_entities_parent_id", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_a44ff95be5")
    projects                   projects?              @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d06d023c30")
    other_bulk_import_entities bulk_import_entities[] @relation("bulk_import_entitiesTobulk_import_entities_parent_id")
    bulk_import_failures       bulk_import_failures[]
    bulk_import_trackers       bulk_import_trackers[]

    @@index([bulk_import_id, status], map: "index_bulk_import_entities_on_bulk_import_id_and_status")
    @@index([namespace_id], map: "index_bulk_import_entities_on_namespace_id")
    @@index([parent_id], map: "index_bulk_import_entities_on_parent_id")
    @@index([project_id], map: "index_bulk_import_entities_on_project_id")
}

model bulk_import_export_uploads {
    id                  BigInt              @id @default(autoincrement())
    export_id           BigInt
    updated_at          DateTime            @db.Timestamptz(6)
    export_file         String?
    bulk_import_exports bulk_import_exports @relation(fields: [export_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_dfbfb45eca")

    @@index([export_id], map: "index_bulk_import_export_uploads_on_export_id")
}

model bulk_import_exports {
    id                         BigInt                       @id @default(autoincrement())
    group_id                   Int?
    project_id                 Int?
    created_at                 DateTime                     @db.Timestamptz(6)
    updated_at                 DateTime                     @db.Timestamptz(6)
    status                     Int                          @default(0) @db.SmallInt
    relation                   String
    jid                        String?
    error                      String?
    namespaces                 namespaces?                  @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_8c6f33cebe")
    projects                   projects?                    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_39c726d3b5")
    bulk_import_export_uploads bulk_import_export_uploads[]
}

model bulk_import_failures {
    id                    BigInt               @id @default(autoincrement())
    bulk_import_entity_id BigInt
    created_at            DateTime             @db.Timestamptz(6)
    pipeline_class        String
    exception_class       String
    exception_message     String
    correlation_id_value  String?
    pipeline_step         String?
    bulk_import_entities  bulk_import_entities @relation(fields: [bulk_import_entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1964240b8c")

    @@index([bulk_import_entity_id], map: "index_bulk_import_failures_on_bulk_import_entity_id")
    @@index([correlation_id_value], map: "index_bulk_import_failures_on_correlation_id_value")
}

model bulk_import_trackers {
    id                    BigInt               @id @default(autoincrement())
    bulk_import_entity_id BigInt
    relation              String
    next_page             String?
    has_next_page         Boolean              @default(false)
    jid                   String?
    stage                 Int                  @default(0) @db.SmallInt
    status                Int                  @default(0) @db.SmallInt
    bulk_import_entities  bulk_import_entities @relation(fields: [bulk_import_entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_aed566d3f3")

    @@unique([bulk_import_entity_id, relation], map: "bulk_import_trackers_uniq_relation_by_entity")
}

model bulk_imports {
    id                         BigInt                       @id @default(autoincrement())
    user_id                    Int
    source_type                Int                          @db.SmallInt
    status                     Int                          @db.SmallInt
    created_at                 DateTime                     @db.Timestamptz(6)
    updated_at                 DateTime                     @db.Timestamptz(6)
    source_version             String?
    users                      users                        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_130a09357d")
    bulk_import_configurations bulk_import_configurations[]
    bulk_import_entities       bulk_import_entities[]

    @@index([user_id], map: "index_bulk_imports_on_user_id")
}

model chat_names {
    id           Int          @id @default(autoincrement())
    user_id      Int
    service_id   Int
    team_id      String       @db.VarChar
    team_domain  String?      @db.VarChar
    chat_id      String       @db.VarChar
    chat_name    String?      @db.VarChar
    last_used_at DateTime?    @db.Timestamp(6)
    created_at   DateTime     @db.Timestamp(6)
    updated_at   DateTime     @db.Timestamp(6)
    integrations integrations @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_00797a2bf9")

    @@unique([service_id, team_id, chat_id], map: "index_chat_names_on_service_id_and_team_id_and_chat_id")
    @@unique([user_id, service_id], map: "index_chat_names_on_user_id_and_service_id")
}

model chat_teams {
    id           Int        @id @default(autoincrement())
    namespace_id Int        @unique(map: "index_chat_teams_on_namespace_id")
    team_id      String?    @db.VarChar
    name         String?    @db.VarChar
    created_at   DateTime   @db.Timestamp(6)
    updated_at   DateTime   @db.Timestamp(6)
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3b543909cb")
}

model ci_build_needs {
    id        Int       @id @default(autoincrement())
    name      String
    artifacts Boolean   @default(true)
    optional  Boolean   @default(false)
    build_id  BigInt
    ci_builds ci_builds @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3cf221d4ed")

    @@unique([build_id, name], map: "index_ci_build_needs_on_build_id_and_name")
}

model ci_build_pending_states {
    id             BigInt    @id @default(autoincrement())
    created_at     DateTime  @db.Timestamptz(6)
    updated_at     DateTime  @db.Timestamptz(6)
    build_id       BigInt    @unique(map: "index_ci_build_pending_states_on_build_id")
    state          Int?      @db.SmallInt
    failure_reason Int?      @db.SmallInt
    trace_checksum Bytes?
    trace_bytesize BigInt?
    ci_builds      ci_builds @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0bbbfeaf9d")
}

model ci_build_report_results {
    build_id   BigInt    @id @default(autoincrement())
    project_id BigInt
    data       Json      @default("{}")
    ci_builds  ci_builds @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_16cb1ff064")

    @@index([project_id], map: "index_ci_build_report_results_on_project_id")
}

model ci_build_trace_chunks {
    id           BigInt    @id @default(autoincrement())
    chunk_index  Int
    data_store   Int
    raw_data     Bytes?
    checksum     Bytes?
    lock_version Int       @default(0)
    build_id     BigInt
    ci_builds    ci_builds @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1013b761f2")

    @@unique([build_id, chunk_index], map: "index_ci_build_trace_chunks_on_build_id_and_chunk_index")
}

model ci_build_trace_metadata {
    build_id                 BigInt            @id
    trace_artifact_id        BigInt?
    archival_attempts        Int               @default(0) @db.SmallInt
    checksum                 Bytes?
    remote_checksum          Bytes?
    last_archival_attempt_at DateTime?         @db.Timestamptz(6)
    archived_at              DateTime?         @db.Timestamptz(6)
    ci_builds                ci_builds         @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_aebc78111f")
    ci_job_artifacts         ci_job_artifacts? @relation(fields: [trace_artifact_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_21d25cac1a")

    @@index([trace_artifact_id], map: "index_ci_build_trace_metadata_on_trace_artifact_id")
}

model ci_builds {
    status                                                    String?                   @db.VarChar
    finished_at                                               DateTime?                 @db.Timestamp(6)
    trace                                                     String?
    created_at                                                DateTime?                 @db.Timestamp(6)
    updated_at                                                DateTime?                 @db.Timestamp(6)
    started_at                                                DateTime?                 @db.Timestamp(6)
    runner_id                                                 Int?
    coverage                                                  Float?
    commit_id                                                 Int?
    name                                                      String?                   @db.VarChar
    options                                                   String?
    allow_failure                                             Boolean                   @default(false)
    stage                                                     String?                   @db.VarChar
    trigger_request_id                                        Int?
    stage_idx                                                 Int?
    tag                                                       Boolean?
    ref                                                       String?                   @db.VarChar
    user_id                                                   Int?
    type                                                      String?                   @db.VarChar
    target_url                                                String?                   @db.VarChar
    description                                               String?                   @db.VarChar
    project_id                                                Int?
    erased_by_id                                              Int?
    erased_at                                                 DateTime?                 @db.Timestamp(6)
    artifacts_expire_at                                       DateTime?                 @db.Timestamp(6)
    environment                                               String?                   @db.VarChar
    when                                                      String?                   @db.VarChar
    yaml_variables                                            String?
    queued_at                                                 DateTime?                 @db.Timestamp(6)
    token                                                     String?                   @db.VarChar
    lock_version                                              Int?                      @default(0)
    coverage_regex                                            String?                   @db.VarChar
    auto_canceled_by_id                                       Int?
    retried                                                   Boolean?
    protected                                                 Boolean?
    failure_reason                                            Int?
    scheduled_at                                              DateTime?                 @db.Timestamptz(6)
    token_encrypted                                           String?                   @db.VarChar
    upstream_pipeline_id                                      Int?
    resource_group_id                                         BigInt?
    waiting_for_resource_at                                   DateTime?                 @db.Timestamptz(6)
    processed                                                 Boolean?
    scheduling_type                                           Int?                      @db.SmallInt
    id                                                        BigInt                    @id @default(autoincrement())
    stage_id                                                  BigInt?
    ci_pipelines_ci_builds_auto_canceled_by_idToci_pipelines  ci_pipelines?             @relation("ci_builds_auto_canceled_by_idToci_pipelines", fields: [auto_canceled_by_id], references: [id], onUpdate: NoAction, map: "fk_a2141b1522")
    ci_pipelines_ci_builds_commit_idToci_pipelines            ci_pipelines?             @relation("ci_builds_commit_idToci_pipelines", fields: [commit_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d3130c9a7f")
    ci_resource_groups                                        ci_resource_groups?       @relation(fields: [resource_group_id], references: [id], onUpdate: NoAction, map: "fk_6661f4f0e8")
    ci_stages                                                 ci_stages?                @relation(fields: [stage_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_3a9eaa254d")
    ci_pipelines_ci_builds_upstream_pipeline_idToci_pipelines ci_pipelines?             @relation("ci_builds_upstream_pipeline_idToci_pipelines", fields: [upstream_pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_87f4cefcda")
    ci_build_needs                                            ci_build_needs[]
    ci_build_pending_states                                   ci_build_pending_states?
    ci_build_report_results                                   ci_build_report_results?
    ci_build_trace_chunks                                     ci_build_trace_chunks[]
    ci_build_trace_metadata                                   ci_build_trace_metadata?
    ci_builds_metadata                                        ci_builds_metadata?
    ci_builds_runner_session                                  ci_builds_runner_session?
    ci_job_artifacts                                          ci_job_artifacts[]
    ci_job_variables                                          ci_job_variables[]
    ci_pending_builds                                         ci_pending_builds?
    ci_resources                                              ci_resources[]
    ci_running_builds                                         ci_running_builds?
    ci_sources_pipelines                                      ci_sources_pipelines[]
    ci_unit_test_failures                                     ci_unit_test_failures[]

    @@index([auto_canceled_by_id], map: "index_ci_builds_on_auto_canceled_by_id")
    @@index([commit_id, stage_idx, created_at], map: "index_ci_builds_on_commit_id_and_stage_idx_and_created_at")
    @@index([commit_id, status, type], map: "index_ci_builds_on_commit_id_and_status_and_type")
    @@index([commit_id, type, name, ref], map: "index_ci_builds_on_commit_id_and_type_and_name_and_ref")
    @@index([commit_id, type, ref], map: "index_ci_builds_on_commit_id_and_type_and_ref")
    @@index([project_id, id], map: "index_ci_builds_on_project_id_and_id")
    @@index([queued_at], map: "index_ci_builds_on_queued_at")
    @@index([runner_id, id], map: "index_ci_builds_on_runner_id_and_id_desc")
    @@index([stage_id], map: "index_ci_builds_on_stage_id")
    @@index([status, type, runner_id], map: "index_ci_builds_on_status_and_type_and_runner_id")
    @@index([updated_at], map: "index_ci_builds_on_updated_at")
    @@index([user_id], map: "index_ci_builds_on_user_id")
}

model ci_builds_metadata {
    project_id                Int
    timeout                   Int?
    timeout_source            Int       @default(1)
    interruptible             Boolean?
    config_options            Json?
    config_variables          Json?
    has_exposed_artifacts     Boolean?
    environment_auto_stop_in  String?   @db.VarChar(255)
    expanded_environment_name String?   @db.VarChar(255)
    secrets                   Json      @default("{}")
    build_id                  BigInt    @unique(map: "index_ci_builds_metadata_on_build_id")
    id                        BigInt    @id @default(autoincrement())
    runner_features           Json      @default("{}")
    runtime_runner_features   Json      @default("{}")
    ci_builds                 ci_builds @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_e20479742e")

    @@index([project_id], map: "index_ci_builds_metadata_on_project_id")
}

model ci_builds_runner_session {
    id            BigInt    @id @default(autoincrement())
    url           String    @db.VarChar
    certificate   String?   @db.VarChar
    authorization String?   @db.VarChar
    build_id      BigInt    @unique(map: "index_ci_builds_runner_session_on_build_id")
    ci_builds     ci_builds @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_70707857d3")
}

model ci_daily_build_group_report_results {
    id               BigInt       @id @default(autoincrement())
    date             DateTime     @db.Date
    project_id       BigInt
    last_pipeline_id Int
    ref_path         String
    group_name       String
    data             Json
    default_branch   Boolean      @default(false)
    group_id         BigInt?
    ci_pipelines     ci_pipelines @relation(fields: [last_pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ee072d13b3")

    @@unique([project_id, ref_path, date, group_name], map: "index_daily_build_group_report_results_unique_columns")
    @@index([group_id], map: "index_ci_daily_build_group_report_results_on_group_id")
    @@index([last_pipeline_id], map: "index_ci_daily_build_group_report_results_on_last_pipeline_id")
}

model ci_deleted_objects {
    id         BigInt   @id @default(autoincrement())
    file_store Int      @default(1) @db.SmallInt
    pick_up_at DateTime @default(now()) @db.Timestamptz(6)
    store_dir  String
    file       String

    @@index([pick_up_at], map: "index_ci_deleted_objects_on_pick_up_at")
}

model ci_freeze_periods {
    id            BigInt   @id @default(autoincrement())
    project_id    BigInt
    freeze_start  String   @db.VarChar(998)
    freeze_end    String   @db.VarChar(998)
    cron_timezone String   @db.VarChar(255)
    created_at    DateTime @db.Timestamptz(6)
    updated_at    DateTime @db.Timestamptz(6)

    @@index([project_id], map: "index_ci_freeze_periods_on_project_id")
}

model ci_group_variables {
    id                   Int      @id @default(autoincrement())
    key                  String   @db.VarChar
    value                String?
    encrypted_value      String?
    encrypted_value_salt String?  @db.VarChar
    encrypted_value_iv   String?  @db.VarChar
    group_id             Int
    protected            Boolean  @default(false)
    created_at           DateTime @db.Timestamptz(6)
    updated_at           DateTime @db.Timestamptz(6)
    masked               Boolean  @default(false)
    variable_type        Int      @default(1) @db.SmallInt
    environment_scope    String   @default("*")

    @@unique([group_id, key, environment_scope], map: "index_ci_group_variables_on_group_id_and_key_and_environment")
}

model ci_instance_variables {
    id                 BigInt   @id @default(autoincrement())
    variable_type      Int      @default(1) @db.SmallInt
    masked             Boolean? @default(false)
    protected          Boolean? @default(false)
    key                String   @unique(map: "index_ci_instance_variables_on_key")
    encrypted_value    String?
    encrypted_value_iv String?
}

model ci_job_artifact_states {
    verification_started_at  DateTime?        @db.Timestamptz(6)
    verification_retry_at    DateTime?        @db.Timestamptz(6)
    verified_at              DateTime?        @db.Timestamptz(6)
    job_artifact_id          BigInt           @id @default(autoincrement())
    verification_state       Int              @default(0) @db.SmallInt
    verification_retry_count Int?             @db.SmallInt
    verification_checksum    Bytes?
    verification_failure     String?
    ci_job_artifacts         ci_job_artifacts @relation(fields: [job_artifact_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_80a9cba3b2")

    @@index([job_artifact_id], map: "index_ci_job_artifact_states_on_job_artifact_id")
    @@index([verification_state], map: "index_job_artifact_states_on_verification_state")
}

model ci_job_artifacts {
    project_id              Int
    file_type               Int
    size                    BigInt?
    created_at              DateTime                  @db.Timestamptz(6)
    updated_at              DateTime                  @db.Timestamptz(6)
    expire_at               DateTime?                 @db.Timestamptz(6)
    file                    String?                   @db.VarChar
    file_store              Int?                      @default(1)
    file_sha256             Bytes?
    file_format             Int?                      @db.SmallInt
    file_location           Int?                      @db.SmallInt
    id                      BigInt                    @id @default(autoincrement())
    job_id                  BigInt
    locked                  Int?                      @default(2) @db.SmallInt
    original_filename       String?
    ci_builds               ci_builds                 @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c5137cb2c1")
    ci_build_trace_metadata ci_build_trace_metadata[]
    ci_job_artifact_states  ci_job_artifact_states?

    @@unique([job_id, file_type], map: "index_ci_job_artifacts_on_job_id_and_file_type")
    @@index([expire_at, job_id], map: "index_ci_job_artifacts_on_expire_at_and_job_id")
    @@index([file_store], map: "index_ci_job_artifacts_on_file_store")
    @@index([project_id, created_at, id], map: "index_ci_job_artifacts_on_id_project_id_and_created_at")
    @@index([project_id, file_type, id], map: "index_ci_job_artifacts_on_id_project_id_and_file_type")
    @@index([project_id], map: "index_ci_job_artifacts_on_project_id")
}

model ci_job_token_project_scope_links {
    id                BigInt   @id @default(autoincrement())
    source_project_id BigInt
    target_project_id BigInt
    added_by_id       BigInt?
    created_at        DateTime @db.Timestamptz(6)

    @@unique([source_project_id, target_project_id], map: "i_ci_job_token_project_scope_links_on_source_and_target_project")
    @@index([added_by_id], map: "index_ci_job_token_project_scope_links_on_added_by_id")
    @@index([target_project_id], map: "index_ci_job_token_project_scope_links_on_target_project_id")
}

model ci_job_variables {
    id                 BigInt    @id @default(autoincrement())
    key                String    @db.VarChar
    encrypted_value    String?
    encrypted_value_iv String?   @db.VarChar
    job_id             BigInt
    variable_type      Int       @default(1) @db.SmallInt
    source             Int       @default(0) @db.SmallInt
    ci_builds          ci_builds @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fbf3b34792")

    @@unique([key, job_id], map: "index_ci_job_variables_on_key_and_job_id")
    @@index([job_id], map: "index_ci_job_variables_on_job_id")
}

model ci_minutes_additional_packs {
    id                BigInt    @id @default(autoincrement())
    created_at        DateTime  @db.Timestamptz(6)
    updated_at        DateTime  @db.Timestamptz(6)
    namespace_id      BigInt
    expires_at        DateTime? @db.Date
    number_of_minutes Int
    purchase_xid      String?

    @@index([namespace_id, purchase_xid], map: "index_ci_minutes_additional_packs_on_namespace_id_purchase_xid")
}

model ci_namespace_mirrors {
    id            BigInt @id @default(autoincrement())
    namespace_id  Int    @unique(map: "index_ci_namespace_mirrors_on_namespace_id")
    traversal_ids Int[]

    @@index([traversal_ids], map: "index_gin_ci_namespace_mirrors_on_traversal_ids")
}

model ci_namespace_monthly_usages {
    id                          BigInt    @id @default(autoincrement())
    namespace_id                BigInt
    date                        DateTime  @db.Date
    additional_amount_available Int       @default(0)
    amount_used                 Decimal   @default(0.0) @db.Decimal(18, 2)
    notification_level          Int       @default(100) @db.SmallInt
    shared_runners_duration     Int       @default(0)
    created_at                  DateTime? @db.Timestamptz(6)

    @@unique([namespace_id, date], map: "index_ci_namespace_monthly_usages_on_namespace_id_and_date")
}

model ci_pending_builds {
    id                       BigInt    @id @default(autoincrement())
    build_id                 BigInt    @unique(map: "index_ci_pending_builds_on_build_id")
    project_id               BigInt
    created_at               DateTime  @default(now()) @db.Timestamptz(6)
    protected                Boolean   @default(false)
    instance_runners_enabled Boolean   @default(false)
    namespace_id             BigInt?
    minutes_exceeded         Boolean   @default(false)
    tag_ids                  Int[]
    namespace_traversal_ids  Int[]
    ci_builds                ci_builds @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_725a2644a3")

    @@index([namespace_id], map: "index_ci_pending_builds_on_namespace_id")
    @@index([project_id], map: "index_ci_pending_builds_on_project_id")
    @@index([namespace_traversal_ids], map: "index_gin_ci_pending_builds_on_namespace_traversal_ids")
}

model ci_pipeline_artifacts {
    id                       BigInt       @id @default(autoincrement())
    created_at               DateTime     @db.Timestamptz(6)
    updated_at               DateTime     @db.Timestamptz(6)
    pipeline_id              Int
    project_id               BigInt
    size                     Int
    file_store               Int          @default(1) @db.SmallInt
    file_type                Int          @db.SmallInt
    file_format              Int          @db.SmallInt
    file                     String?
    expire_at                DateTime?    @db.Timestamptz(6)
    verification_started_at  DateTime?    @db.Timestamptz(6)
    verification_retry_at    DateTime?    @db.Timestamptz(6)
    verified_at              DateTime?    @db.Timestamptz(6)
    verification_state       Int          @default(0) @db.SmallInt
    verification_retry_count Int?         @db.SmallInt
    verification_checksum    Bytes?
    verification_failure     String?
    ci_pipelines             ci_pipelines @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a9e811a466")

    @@unique([pipeline_id, file_type], map: "index_ci_pipeline_artifacts_on_pipeline_id_and_file_type")
    @@index([expire_at], map: "index_ci_pipeline_artifacts_on_expire_at")
    @@index([pipeline_id], map: "index_ci_pipeline_artifacts_on_pipeline_id")
    @@index([project_id], map: "index_ci_pipeline_artifacts_on_project_id")
    @@index([verification_state], map: "index_ci_pipeline_artifacts_verification_state")
}

model ci_pipeline_chat_data {
    id           BigInt       @id @default(autoincrement())
    pipeline_id  Int          @unique(map: "index_ci_pipeline_chat_data_on_pipeline_id")
    chat_name_id Int
    response_url String
    ci_pipelines ci_pipelines @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_64ebfab6b3")

    @@index([chat_name_id], map: "index_ci_pipeline_chat_data_on_chat_name_id")
}

model ci_pipeline_messages {
    id           BigInt       @id @default(autoincrement())
    severity     Int          @default(0) @db.SmallInt
    pipeline_id  Int
    content      String
    ci_pipelines ci_pipelines @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8d3b04e3e1")

    @@index([pipeline_id], map: "index_ci_pipeline_messages_on_pipeline_id")
}

model ci_pipeline_schedule_variables {
    id                    Int                   @id @default(autoincrement())
    key                   String                @db.VarChar
    value                 String?
    encrypted_value       String?
    encrypted_value_salt  String?               @db.VarChar
    encrypted_value_iv    String?               @db.VarChar
    pipeline_schedule_id  Int
    created_at            DateTime?             @db.Timestamptz(6)
    updated_at            DateTime?             @db.Timestamptz(6)
    variable_type         Int                   @default(1) @db.SmallInt
    ci_pipeline_schedules ci_pipeline_schedules @relation(fields: [pipeline_schedule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_41c35fda51")

    @@unique([pipeline_schedule_id, key], map: "index_ci_pipeline_schedule_variables_on_schedule_id_and_key")
}

model ci_pipeline_schedules {
    id                             Int                              @id @default(autoincrement())
    description                    String?                          @db.VarChar
    ref                            String?                          @db.VarChar
    cron                           String?                          @db.VarChar
    cron_timezone                  String?                          @db.VarChar
    next_run_at                    DateTime?                        @db.Timestamp(6)
    project_id                     Int?
    owner_id                       Int?
    active                         Boolean?                         @default(true)
    created_at                     DateTime?                        @db.Timestamp(6)
    updated_at                     DateTime?                        @db.Timestamp(6)
    ci_pipeline_schedule_variables ci_pipeline_schedule_variables[]
    ci_pipelines                   ci_pipelines[]

    @@index([next_run_at, active], map: "index_ci_pipeline_schedules_on_next_run_at_and_active")
    @@index([owner_id], map: "index_ci_pipeline_schedules_on_owner_id")
    @@index([project_id], map: "index_ci_pipeline_schedules_on_project_id")
}

model ci_pipeline_variables {
    id                   Int          @id @default(autoincrement())
    key                  String       @db.VarChar
    value                String?
    encrypted_value      String?
    encrypted_value_salt String?      @db.VarChar
    encrypted_value_iv   String?      @db.VarChar
    pipeline_id          Int
    variable_type        Int          @default(1) @db.SmallInt
    ci_pipelines         ci_pipelines @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f29c5f4380")

    @@unique([pipeline_id, key], map: "index_ci_pipeline_variables_on_pipeline_id_and_key")
}

model ci_pipelines {
    id                                                                         Int                                   @id @default(autoincrement())
    ref                                                                        String?                               @db.VarChar
    sha                                                                        String?                               @db.VarChar
    before_sha                                                                 String?                               @db.VarChar
    created_at                                                                 DateTime?                             @db.Timestamp(6)
    updated_at                                                                 DateTime?                             @db.Timestamp(6)
    tag                                                                        Boolean?                              @default(false)
    yaml_errors                                                                String?
    committed_at                                                               DateTime?                             @db.Timestamp(6)
    project_id                                                                 Int?
    status                                                                     String?                               @db.VarChar
    started_at                                                                 DateTime?                             @db.Timestamp(6)
    finished_at                                                                DateTime?                             @db.Timestamp(6)
    duration                                                                   Int?
    user_id                                                                    Int?
    lock_version                                                               Int?                                  @default(0)
    auto_canceled_by_id                                                        Int?
    pipeline_schedule_id                                                       Int?
    source                                                                     Int?
    config_source                                                              Int?
    protected                                                                  Boolean?
    failure_reason                                                             Int?
    iid                                                                        Int?
    merge_request_id                                                           Int?
    source_sha                                                                 Bytes?
    target_sha                                                                 Bytes?
    external_pull_request_id                                                   BigInt?
    ci_ref_id                                                                  BigInt?
    locked                                                                     Int                                   @default(1) @db.SmallInt
    ci_pipelines                                                               ci_pipelines?                         @relation("ci_pipelinesToci_pipelines_auto_canceled_by_id", fields: [auto_canceled_by_id], references: [id], onUpdate: NoAction, map: "fk_262d4c2d19")
    ci_refs                                                                    ci_refs?                              @relation(fields: [ci_ref_id], references: [id], onUpdate: NoAction, map: "fk_d80e161c54")
    external_pull_requests                                                     external_pull_requests?               @relation(fields: [external_pull_request_id], references: [id], onUpdate: NoAction, map: "fk_190998ef09")
    ci_pipeline_schedules                                                      ci_pipeline_schedules?                @relation(fields: [pipeline_schedule_id], references: [id], onUpdate: NoAction, map: "fk_3d34ab2e06")
    ci_builds_ci_builds_auto_canceled_by_idToci_pipelines                      ci_builds[]                           @relation("ci_builds_auto_canceled_by_idToci_pipelines")
    ci_builds_ci_builds_commit_idToci_pipelines                                ci_builds[]                           @relation("ci_builds_commit_idToci_pipelines")
    ci_builds_ci_builds_upstream_pipeline_idToci_pipelines                     ci_builds[]                           @relation("ci_builds_upstream_pipeline_idToci_pipelines")
    ci_daily_build_group_report_results                                        ci_daily_build_group_report_results[]
    ci_pipeline_artifacts                                                      ci_pipeline_artifacts[]
    ci_pipeline_chat_data                                                      ci_pipeline_chat_data?
    ci_pipeline_messages                                                       ci_pipeline_messages[]
    ci_pipeline_variables                                                      ci_pipeline_variables[]
    other_ci_pipelines                                                         ci_pipelines[]                        @relation("ci_pipelinesToci_pipelines_auto_canceled_by_id")
    ci_pipelines_config                                                        ci_pipelines_config?
    ci_sources_pipelines_ci_pipelinesToci_sources_pipelines_pipeline_id        ci_sources_pipelines[]                @relation("ci_pipelinesToci_sources_pipelines_pipeline_id")
    ci_sources_pipelines_ci_pipelinesToci_sources_pipelines_source_pipeline_id ci_sources_pipelines[]                @relation("ci_pipelinesToci_sources_pipelines_source_pipeline_id")
    ci_sources_projects                                                        ci_sources_projects[]
    ci_stages                                                                  ci_stages[]

    @@index([auto_canceled_by_id], map: "index_ci_pipelines_on_auto_canceled_by_id")
    @@index([pipeline_schedule_id, id], map: "index_ci_pipelines_on_pipeline_schedule_id_and_id")
    @@index([project_id, id], map: "index_ci_pipelines_on_project_id_and_id_desc")
    @@index([project_id, ref, status, id], map: "index_ci_pipelines_on_project_id_and_ref_and_status_and_id")
    @@index([project_id, sha], map: "index_ci_pipelines_on_project_id_and_sha")
    @@index([project_id, source], map: "index_ci_pipelines_on_project_id_and_source")
    @@index([project_id, status, config_source], map: "index_ci_pipelines_on_project_id_and_status_and_config_source")
    @@index([project_id, status, created_at], map: "index_ci_pipelines_on_project_id_and_status_and_created_at")
    @@index([project_id, status, updated_at], map: "index_ci_pipelines_on_project_id_and_status_and_updated_at")
    @@index([project_id, ref, id], map: "index_ci_pipelines_on_project_idandrefandiddesc")
    @@index([status, id], map: "index_ci_pipelines_on_status_and_id")
    @@index([user_id, created_at, config_source], map: "index_ci_pipelines_on_user_id_and_created_at_and_config_source")
    @@index([user_id, created_at, source], map: "index_ci_pipelines_on_user_id_and_created_at_and_source")
}

model ci_pipelines_config {
    pipeline_id  Int          @id @default(autoincrement())
    content      String
    ci_pipelines ci_pipelines @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_906c9a2533")

    @@index([pipeline_id], map: "index_ci_pipelines_config_on_pipeline_id")
}

model ci_platform_metrics {
    id              BigInt   @id @default(autoincrement())
    recorded_at     DateTime @db.Timestamptz(6)
    platform_target String
    count           Int
}

model ci_project_mirrors {
    id           BigInt @id @default(autoincrement())
    project_id   Int    @unique(map: "index_ci_project_mirrors_on_project_id")
    namespace_id Int

    @@index([namespace_id], map: "index_ci_project_mirrors_on_namespace_id")
}

model ci_project_monthly_usages {
    id                      BigInt    @id @default(autoincrement())
    project_id              BigInt
    date                    DateTime  @db.Date
    amount_used             Decimal   @default(0.0) @db.Decimal(18, 2)
    shared_runners_duration Int       @default(0)
    created_at              DateTime? @db.Timestamptz(6)

    @@unique([project_id, date], map: "index_ci_project_monthly_usages_on_project_id_and_date")
}

model ci_refs {
    id           BigInt         @id @default(autoincrement())
    project_id   BigInt
    lock_version Int            @default(0)
    status       Int            @default(0) @db.SmallInt
    ref_path     String
    ci_pipelines ci_pipelines[]

    @@unique([project_id, ref_path], map: "index_ci_refs_on_project_id_and_ref_path")
}

model ci_resource_groups {
    id           BigInt         @id @default(autoincrement())
    created_at   DateTime       @db.Timestamptz(6)
    updated_at   DateTime       @db.Timestamptz(6)
    project_id   BigInt
    key          String         @db.VarChar(255)
    process_mode Int            @default(0) @db.SmallInt
    ci_builds    ci_builds[]
    ci_resources ci_resources[]

    @@unique([project_id, key], map: "index_ci_resource_groups_on_project_id_and_key")
}

model ci_resources {
    id                 BigInt             @id @default(autoincrement())
    created_at         DateTime           @db.Timestamptz(6)
    updated_at         DateTime           @db.Timestamptz(6)
    resource_group_id  BigInt
    build_id           BigInt?
    ci_builds          ci_builds?         @relation(fields: [build_id], references: [id], onUpdate: NoAction, map: "fk_e169a8e3d5")
    ci_resource_groups ci_resource_groups @relation(fields: [resource_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_430336af2d")

    @@unique([resource_group_id, build_id], map: "index_ci_resources_on_resource_group_id_and_build_id")
    @@index([build_id], map: "index_ci_resources_on_build_id")
}

model ci_runner_namespaces {
    id           Int         @id @default(autoincrement())
    runner_id    Int?
    namespace_id Int?
    ci_runners   ci_runners? @relation(fields: [runner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8767676b7a")

    @@unique([runner_id, namespace_id], map: "index_ci_runner_namespaces_on_runner_id_and_namespace_id")
    @@index([namespace_id], map: "index_ci_runner_namespaces_on_namespace_id")
}

model ci_runner_projects {
    id         Int       @id @default(autoincrement())
    runner_id  Int
    created_at DateTime? @db.Timestamp(6)
    updated_at DateTime? @db.Timestamp(6)
    project_id Int?

    @@unique([runner_id, project_id], map: "index_unique_ci_runner_projects_on_runner_id_and_project_id")
    @@index([project_id], map: "index_ci_runner_projects_on_project_id")
}

model ci_runners {
    id                                   Int                    @id @default(autoincrement())
    token                                String?                @db.VarChar
    created_at                           DateTime?              @db.Timestamp(6)
    updated_at                           DateTime?              @db.Timestamp(6)
    description                          String?                @db.VarChar
    contacted_at                         DateTime?              @db.Timestamp(6)
    active                               Boolean                @default(true)
    name                                 String?                @db.VarChar
    version                              String?                @db.VarChar
    revision                             String?                @db.VarChar
    platform                             String?                @db.VarChar
    architecture                         String?                @db.VarChar
    run_untagged                         Boolean                @default(true)
    locked                               Boolean                @default(false)
    access_level                         Int                    @default(0)
    ip_address                           String?                @db.VarChar
    maximum_timeout                      Int?
    runner_type                          Int                    @db.SmallInt
    token_encrypted                      String?                @db.VarChar
    public_projects_minutes_cost_factor  Float                  @default(0.0)
    private_projects_minutes_cost_factor Float                  @default(1.0)
    config                               Json                   @default("{}")
    executor_type                        Int?                   @db.SmallInt
    maintainer_note                      String?
    token_expires_at                     DateTime?              @db.Timestamptz(6)
    ci_runner_namespaces                 ci_runner_namespaces[]
    ci_running_builds                    ci_running_builds[]

    @@index([active, id], map: "index_ci_runners_on_active")
    @@index([contacted_at, id], map: "index_ci_runners_on_contacted_at_and_id_desc")
    @@index([contacted_at, id], map: "index_ci_runners_on_contacted_at_desc_and_id_desc")
    @@index([created_at, id], map: "index_ci_runners_on_created_at_and_id_desc")
    @@index([created_at, id], map: "index_ci_runners_on_created_at_desc_and_id_desc")
    @@index([description], map: "index_ci_runners_on_description_trigram")
    @@index([locked], map: "index_ci_runners_on_locked")
    @@index([runner_type], map: "index_ci_runners_on_runner_type")
    @@index([token], map: "index_ci_runners_on_token")
    @@index([token_encrypted], map: "index_ci_runners_on_token_encrypted")
    @@index([token_expires_at, id], map: "index_ci_runners_on_token_expires_at_and_id_desc")
    @@index([token_expires_at, id], map: "index_ci_runners_on_token_expires_at_desc_and_id_desc")
}

model ci_running_builds {
    id          BigInt     @id @default(autoincrement())
    build_id    BigInt     @unique(map: "index_ci_running_builds_on_build_id")
    project_id  BigInt
    runner_id   Int
    created_at  DateTime   @default(now()) @db.Timestamptz(6)
    runner_type Int        @db.SmallInt
    ci_builds   ci_builds  @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_da45cfa165")
    ci_runners  ci_runners @relation(fields: [runner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5ca491d360")

    @@index([project_id], map: "index_ci_running_builds_on_project_id")
    @@index([runner_id], map: "index_ci_running_builds_on_runner_id")
}

model ci_secure_files {
    id          BigInt   @id @default(autoincrement())
    project_id  BigInt
    created_at  DateTime @db.Timestamptz(6)
    updated_at  DateTime @db.Timestamptz(6)
    file_store  Int      @default(1) @db.SmallInt
    permissions Int      @default(0) @db.SmallInt
    name        String
    file        String
    checksum    Bytes

    @@index([project_id], map: "index_ci_secure_files_on_project_id")
}

model ci_sources_pipelines {
    id                                                                 Int           @id @default(autoincrement())
    project_id                                                         Int?
    pipeline_id                                                        Int?
    source_project_id                                                  Int?
    source_pipeline_id                                                 Int?
    source_job_id                                                      BigInt?
    ci_pipelines_ci_pipelinesToci_sources_pipelines_pipeline_id        ci_pipelines? @relation("ci_pipelinesToci_sources_pipelines_pipeline_id", fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_e1bad85861")
    ci_builds                                                          ci_builds?    @relation(fields: [source_job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_be5624bf37")
    ci_pipelines_ci_pipelinesToci_sources_pipelines_source_pipeline_id ci_pipelines? @relation("ci_pipelinesToci_sources_pipelines_source_pipeline_id", fields: [source_pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d4e29af7d7")

    @@index([pipeline_id], map: "index_ci_sources_pipelines_on_pipeline_id")
    @@index([project_id], map: "index_ci_sources_pipelines_on_project_id")
    @@index([source_job_id], map: "index_ci_sources_pipelines_on_source_job_id")
    @@index([source_pipeline_id], map: "index_ci_sources_pipelines_on_source_pipeline_id")
    @@index([source_project_id], map: "index_ci_sources_pipelines_on_source_project_id")
}

model ci_sources_projects {
    id                BigInt       @id @default(autoincrement())
    pipeline_id       Int
    source_project_id BigInt
    ci_pipelines      ci_pipelines @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_10a1eb379a")

    @@unique([source_project_id, pipeline_id], map: "index_ci_sources_projects_on_source_project_id_and_pipeline_id")
    @@index([pipeline_id], map: "index_ci_sources_projects_on_pipeline_id")
}

model ci_stages {
    project_id   Int?
    pipeline_id  Int?
    created_at   DateTime?     @db.Timestamp(6)
    updated_at   DateTime?     @db.Timestamp(6)
    name         String?       @db.VarChar
    status       Int?
    lock_version Int?          @default(0)
    position     Int?
    id           BigInt        @id @default(autoincrement())
    ci_pipelines ci_pipelines? @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_fb57e6cc56")
    ci_builds    ci_builds[]

    @@unique([pipeline_id, name], map: "index_ci_stages_on_pipeline_id_and_name")
    @@index([pipeline_id], map: "index_ci_stages_on_pipeline_id")
    @@index([pipeline_id, position], map: "index_ci_stages_on_pipeline_id_and_position")
    @@index([project_id], map: "index_ci_stages_on_project_id")
}

model ci_subscriptions_projects {
    id                    BigInt @id @default(autoincrement())
    downstream_project_id BigInt
    upstream_project_id   BigInt

    @@unique([downstream_project_id, upstream_project_id], map: "index_ci_subscriptions_projects_unique_subscription")
    @@index([upstream_project_id], map: "index_ci_subscriptions_projects_on_upstream_project_id")
}

model ci_trigger_requests {
    id          Int         @id @default(autoincrement())
    trigger_id  Int
    variables   String?
    created_at  DateTime?   @db.Timestamp(6)
    updated_at  DateTime?   @db.Timestamp(6)
    commit_id   Int?
    ci_triggers ci_triggers @relation(fields: [trigger_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b8ec8b7245")

    @@index([commit_id], map: "index_ci_trigger_requests_on_commit_id")
    @@index([trigger_id, id], map: "index_ci_trigger_requests_on_trigger_id_and_id")
}

model ci_triggers {
    id                  Int                   @id @default(autoincrement())
    token               String?               @db.VarChar
    created_at          DateTime?             @db.Timestamp(6)
    updated_at          DateTime?             @db.Timestamp(6)
    project_id          Int?
    owner_id            Int
    description         String?               @db.VarChar
    ref                 String?               @db.VarChar
    ci_trigger_requests ci_trigger_requests[]

    @@index([owner_id], map: "index_ci_triggers_on_owner_id")
    @@index([project_id], map: "index_ci_triggers_on_project_id")
}

model ci_unit_test_failures {
    id            BigInt        @id @default(autoincrement())
    failed_at     DateTime      @db.Timestamptz(6)
    unit_test_id  BigInt
    build_id      BigInt
    ci_builds     ci_builds     @relation(fields: [build_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0f09856e1f")
    ci_unit_tests ci_unit_tests @relation(fields: [unit_test_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_259da3e79c")

    @@unique([unit_test_id, failed_at, build_id], map: "index_unit_test_failures_unique_columns")
    @@index([build_id], map: "index_ci_unit_test_failures_on_build_id")
    @@index([failed_at], map: "index_unit_test_failures_failed_at")
}

model ci_unit_tests {
    id                    BigInt                  @id @default(autoincrement())
    project_id            BigInt
    key_hash              String
    name                  String
    suite_name            String
    ci_unit_test_failures ci_unit_test_failures[]

    @@unique([project_id, key_hash], map: "index_ci_unit_tests_on_project_id_and_key_hash")
}

model ci_variables {
    id                   Int     @id @default(autoincrement())
    key                  String  @db.VarChar
    value                String?
    encrypted_value      String?
    encrypted_value_salt String? @db.VarChar
    encrypted_value_iv   String? @db.VarChar
    project_id           Int
    protected            Boolean @default(false)
    environment_scope    String  @default("*") @db.VarChar
    masked               Boolean @default(false)
    variable_type        Int     @default(1) @db.SmallInt

    @@unique([project_id, key, environment_scope], map: "index_ci_variables_on_project_id_and_key_and_environment_scope")
    @@index([key], map: "index_ci_variables_on_key")
}

model cluster_agent_tokens {
    id                    BigInt                  @id @default(autoincrement())
    created_at            DateTime                @db.Timestamptz(6)
    updated_at            DateTime                @db.Timestamptz(6)
    agent_id              BigInt
    token_encrypted       String                  @unique(map: "index_cluster_agent_tokens_on_token_encrypted")
    created_by_user_id    Int?
    description           String?
    name                  String?
    last_used_at          DateTime?               @db.Timestamptz(6)
    status                Int                     @default(0) @db.SmallInt
    cluster_agents        cluster_agents          @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d1d26abc25")
    users                 users?                  @relation(fields: [created_by_user_id], references: [id], onUpdate: NoAction, map: "fk_75008f3553")
    agent_activity_events agent_activity_events[]

    @@index([agent_id, status, last_used_at], map: "index_cluster_agent_tokens_on_agent_id_status_last_used_at")
    @@index([created_by_user_id], map: "index_cluster_agent_tokens_on_created_by_user_id")
}

model cluster_agents {
    id                           BigInt                         @id @default(autoincrement())
    created_at                   DateTime                       @db.Timestamptz(6)
    updated_at                   DateTime                       @db.Timestamptz(6)
    project_id                   Int
    name                         String
    created_by_user_id           Int?
    users                        users?                         @relation(fields: [created_by_user_id], references: [id], onUpdate: NoAction, map: "fk_f7d43dee13")
    projects                     projects                       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_25e9fc2d5d")
    agent_activity_events        agent_activity_events[]
    agent_group_authorizations   agent_group_authorizations[]
    agent_project_authorizations agent_project_authorizations[]
    cluster_agent_tokens         cluster_agent_tokens[]

    @@unique([project_id, name], map: "index_cluster_agents_on_project_id_and_name")
    @@index([created_by_user_id], map: "index_cluster_agents_on_created_by_user_id")
}

model cluster_groups {
    id         Int        @id @default(autoincrement())
    cluster_id Int
    group_id   Int
    clusters   clusters   @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fdb8648a96")
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3d28377556")

    @@unique([cluster_id, group_id], map: "index_cluster_groups_on_cluster_id_and_group_id")
    @@index([group_id], map: "index_cluster_groups_on_group_id")
}

model cluster_platforms_kubernetes {
    id                    Int      @id @default(autoincrement())
    cluster_id            Int      @unique(map: "index_cluster_platforms_kubernetes_on_cluster_id")
    created_at            DateTime @db.Timestamp(6)
    updated_at            DateTime @db.Timestamp(6)
    api_url               String?
    ca_cert               String?
    namespace             String?  @db.VarChar
    username              String?  @db.VarChar
    encrypted_password    String?
    encrypted_password_iv String?  @db.VarChar
    encrypted_token       String?
    encrypted_token_iv    String?  @db.VarChar
    authorization_type    Int?     @db.SmallInt
    clusters              clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e1e2cf841a")
}

model cluster_projects {
    id                             Int                              @id @default(autoincrement())
    project_id                     Int
    cluster_id                     Int
    created_at                     DateTime                         @db.Timestamp(6)
    updated_at                     DateTime                         @db.Timestamp(6)
    clusters                       clusters                         @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a5a958bca1")
    projects                       projects                         @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8b8c5caf07")
    clusters_kubernetes_namespaces clusters_kubernetes_namespaces[]

    @@index([cluster_id], map: "index_cluster_projects_on_cluster_id")
    @@index([project_id], map: "index_cluster_projects_on_project_id")
}

model cluster_providers_aws {
    id                             BigInt   @id @default(autoincrement())
    cluster_id                     Int      @unique(map: "index_cluster_providers_aws_on_cluster_id")
    num_nodes                      Int
    status                         Int
    created_at                     DateTime @db.Timestamptz(6)
    updated_at                     DateTime @db.Timestamptz(6)
    key_name                       String   @db.VarChar(255)
    role_arn                       String   @db.VarChar(2048)
    region                         String   @db.VarChar(255)
    vpc_id                         String   @db.VarChar(255)
    subnet_ids                     String[] @db.VarChar(255)
    security_group_id              String   @db.VarChar(255)
    instance_type                  String   @db.VarChar(255)
    access_key_id                  String?  @db.VarChar(255)
    encrypted_secret_access_key_iv String?  @db.VarChar(255)
    encrypted_secret_access_key    String?
    session_token                  String?
    status_reason                  String?
    kubernetes_version             String   @default("1.14")
    clusters                       clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_18983d9ea4")

    @@index([cluster_id, status], map: "index_cluster_providers_aws_on_cluster_id_and_status")
}

model cluster_providers_gcp {
    id                        Int      @id @default(autoincrement())
    cluster_id                Int      @unique(map: "index_cluster_providers_gcp_on_cluster_id")
    status                    Int?
    num_nodes                 Int
    created_at                DateTime @db.Timestamp(6)
    updated_at                DateTime @db.Timestamp(6)
    status_reason             String?
    gcp_project_id            String   @db.VarChar
    zone                      String   @db.VarChar
    machine_type              String?  @db.VarChar
    operation_id              String?  @db.VarChar
    endpoint                  String?  @db.VarChar
    encrypted_access_token    String?
    encrypted_access_token_iv String?  @db.VarChar
    legacy_abac               Boolean  @default(false)
    cloud_run                 Boolean  @default(false)
    clusters                  clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5c2c3bc814")

    @@index([cloud_run], map: "index_cluster_providers_gcp_on_cloud_run")
}

model clusters {
    id                                   Int                                   @id @default(autoincrement())
    user_id                              Int?
    provider_type                        Int?
    platform_type                        Int?
    created_at                           DateTime                              @db.Timestamp(6)
    updated_at                           DateTime                              @db.Timestamp(6)
    enabled                              Boolean?                              @default(true)
    name                                 String                                @db.VarChar
    environment_scope                    String                                @default("*") @db.VarChar
    cluster_type                         Int                                   @default(3) @db.SmallInt
    domain                               String?                               @db.VarChar
    managed                              Boolean                               @default(true)
    namespace_per_environment            Boolean                               @default(true)
    management_project_id                Int?
    cleanup_status                       Int                                   @default(1) @db.SmallInt
    cleanup_status_reason                String?
    helm_major_version                   Int                                   @default(3)
    projects                             projects?                             @relation(fields: [management_project_id], references: [id], onUpdate: NoAction, map: "fk_f05c5e5a42")
    users                                users?                                @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_rails_ac3a663d79")
    cluster_groups                       cluster_groups[]
    cluster_platforms_kubernetes         cluster_platforms_kubernetes?
    cluster_projects                     cluster_projects[]
    cluster_providers_aws                cluster_providers_aws?
    cluster_providers_gcp                cluster_providers_gcp?
    clusters_applications_cert_managers  clusters_applications_cert_managers?
    clusters_applications_cilium         clusters_applications_cilium?
    clusters_applications_crossplane     clusters_applications_crossplane?
    clusters_applications_elastic_stacks clusters_applications_elastic_stacks?
    clusters_applications_helm           clusters_applications_helm?
    clusters_applications_ingress        clusters_applications_ingress?
    clusters_applications_jupyter        clusters_applications_jupyter?
    clusters_applications_knative        clusters_applications_knative?
    clusters_applications_prometheus     clusters_applications_prometheus?
    clusters_applications_runners        clusters_applications_runners?
    clusters_integration_elasticstack    clusters_integration_elasticstack?
    clusters_integration_prometheus      clusters_integration_prometheus?
    clusters_kubernetes_namespaces       clusters_kubernetes_namespaces[]
    deployment_clusters                  deployment_clusters[]
    deployments                          deployments[]
    metrics_dashboard_annotations        metrics_dashboard_annotations[]

    @@index([enabled, provider_type, id], map: "index_clusters_on_enabled_and_provider_type_and_id")
    @@index([enabled, cluster_type, id, created_at], map: "index_clusters_on_enabled_cluster_type_id_and_created_at")
    @@index([user_id], map: "index_clusters_on_user_id")
}

model clusters_applications_cert_managers {
    id            Int      @id @default(autoincrement())
    cluster_id    Int      @unique(map: "index_clusters_applications_cert_managers_on_cluster_id")
    status        Int
    version       String   @db.VarChar
    email         String   @db.VarChar
    created_at    DateTime @db.Timestamptz(6)
    updated_at    DateTime @db.Timestamptz(6)
    status_reason String?
    clusters      clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9e4f2cb4b2")
}

model clusters_applications_cilium {
    id            BigInt   @id @default(autoincrement())
    cluster_id    Int      @unique(map: "index_clusters_applications_cilium_on_cluster_id")
    created_at    DateTime @db.Timestamptz(6)
    updated_at    DateTime @db.Timestamptz(6)
    status        Int
    status_reason String?
    clusters      clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_59dc12eea6")
}

model clusters_applications_crossplane {
    id            Int      @id @default(autoincrement())
    created_at    DateTime @db.Timestamptz(6)
    updated_at    DateTime @db.Timestamptz(6)
    cluster_id    Int      @unique(map: "index_clusters_applications_crossplane_on_cluster_id")
    status        Int
    version       String   @db.VarChar(255)
    stack         String   @db.VarChar(255)
    status_reason String?
    clusters      clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_87186702df")
}

model clusters_applications_elastic_stacks {
    id            BigInt   @id @default(autoincrement())
    created_at    DateTime @db.Timestamptz(6)
    updated_at    DateTime @db.Timestamptz(6)
    cluster_id    Int      @unique(map: "index_clusters_applications_elastic_stacks_on_cluster_id")
    status        Int
    version       String   @db.VarChar(255)
    status_reason String?
    clusters      clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_026f219f46")
}

model clusters_applications_helm {
    id                  Int      @id @default(autoincrement())
    cluster_id          Int      @unique(map: "index_clusters_applications_helm_on_cluster_id")
    created_at          DateTime @db.Timestamp(6)
    updated_at          DateTime @db.Timestamp(6)
    status              Int
    version             String   @db.VarChar
    status_reason       String?
    encrypted_ca_key    String?
    encrypted_ca_key_iv String?
    ca_cert             String?
    clusters            clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3e2b1c06bc")
}

model clusters_applications_ingress {
    id                Int      @id @default(autoincrement())
    cluster_id        Int      @unique(map: "index_clusters_applications_ingress_on_cluster_id")
    created_at        DateTime @db.Timestamp(6)
    updated_at        DateTime @db.Timestamp(6)
    status            Int
    ingress_type      Int
    version           String   @db.VarChar
    cluster_ip        String?  @db.VarChar
    status_reason     String?
    external_ip       String?  @db.VarChar
    external_hostname String?  @db.VarChar
    clusters          clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_753a7b41c1")
}

model clusters_applications_jupyter {
    id                   Int                 @id @default(autoincrement())
    cluster_id           Int                 @unique(map: "index_clusters_applications_jupyter_on_cluster_id")
    oauth_application_id Int?
    status               Int
    version              String              @db.VarChar
    hostname             String?             @db.VarChar
    created_at           DateTime            @db.Timestamptz(6)
    updated_at           DateTime            @db.Timestamptz(6)
    status_reason        String?
    clusters             clusters            @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_17df21c98c")
    oauth_applications   oauth_applications? @relation(fields: [oauth_application_id], references: [id], onUpdate: NoAction, map: "fk_rails_331f0aff78")

    @@index([oauth_application_id], map: "index_clusters_applications_jupyter_on_oauth_application_id")
}

model clusters_applications_knative {
    id                        Int                        @id @default(autoincrement())
    cluster_id                Int                        @unique(map: "index_clusters_applications_knative_on_cluster_id")
    created_at                DateTime                   @db.Timestamptz(6)
    updated_at                DateTime                   @db.Timestamptz(6)
    status                    Int
    version                   String                     @db.VarChar
    hostname                  String?                    @db.VarChar
    status_reason             String?
    external_ip               String?                    @db.VarChar
    external_hostname         String?                    @db.VarChar
    clusters                  clusters                   @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_54fc91e0a0")
    serverless_domain_cluster serverless_domain_cluster?
}

model clusters_applications_prometheus {
    id                               Int       @id @default(autoincrement())
    cluster_id                       Int       @unique(map: "index_clusters_applications_prometheus_on_cluster_id")
    status                           Int
    version                          String    @db.VarChar
    status_reason                    String?
    created_at                       DateTime  @db.Timestamptz(6)
    updated_at                       DateTime  @db.Timestamptz(6)
    last_update_started_at           DateTime? @db.Timestamptz(6)
    encrypted_alert_manager_token    String?   @db.VarChar
    encrypted_alert_manager_token_iv String?   @db.VarChar
    healthy                          Boolean?
    clusters                         clusters  @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_557e773639")
}

model clusters_applications_runners {
    id            Int      @id @default(autoincrement())
    cluster_id    Int      @unique(map: "index_clusters_applications_runners_on_cluster_id")
    runner_id     Int?
    status        Int
    created_at    DateTime @db.Timestamptz(6)
    updated_at    DateTime @db.Timestamptz(6)
    version       String   @db.VarChar
    status_reason String?
    privileged    Boolean  @default(true)
    clusters      clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_22388594e9")

    @@index([runner_id], map: "index_clusters_applications_runners_on_runner_id")
}

model clusters_integration_elasticstack {
    created_at    DateTime @db.Timestamptz(6)
    updated_at    DateTime @db.Timestamptz(6)
    cluster_id    Int      @id
    enabled       Boolean  @default(false)
    chart_version String?
    clusters      clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_cc5ba8f658")

    @@index([enabled, created_at, cluster_id], map: "index_clusters_integration_elasticstack_enabled")
}

model clusters_integration_prometheus {
    created_at                       DateTime @db.Timestamptz(6)
    updated_at                       DateTime @db.Timestamptz(6)
    cluster_id                       Int      @id
    enabled                          Boolean  @default(false)
    encrypted_alert_manager_token    String?
    encrypted_alert_manager_token_iv String?
    health_status                    Int      @default(0) @db.SmallInt
    clusters                         clusters @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e44472034c")

    @@index([enabled, created_at, cluster_id], map: "index_clusters_integration_prometheus_enabled")
}

model clusters_kubernetes_namespaces {
    id                                 BigInt            @id @default(autoincrement())
    cluster_id                         Int
    project_id                         Int?
    cluster_project_id                 Int?
    created_at                         DateTime          @db.Timestamptz(6)
    updated_at                         DateTime          @db.Timestamptz(6)
    encrypted_service_account_token    String?
    encrypted_service_account_token_iv String?           @db.VarChar
    namespace                          String            @db.VarChar
    service_account_name               String?           @db.VarChar
    environment_id                     Int?
    clusters                           clusters          @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_7e7688ecaf")
    cluster_projects                   cluster_projects? @relation(fields: [cluster_project_id], references: [id], onUpdate: NoAction, map: "fk_rails_40cc7ccbc3")
    environments                       environments?     @relation(fields: [environment_id], references: [id], onUpdate: NoAction, map: "fk_rails_8df789f3ab")
    projects                           projects?         @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "fk_rails_98fe21e486")

    @@unique([cluster_id, project_id, environment_id], map: "index_kubernetes_namespaces_on_cluster_project_environment_id")
    @@unique([cluster_id, namespace], map: "kubernetes_namespaces_cluster_and_namespace")
    @@index([cluster_project_id], map: "index_clusters_kubernetes_namespaces_on_cluster_project_id")
    @@index([environment_id], map: "index_clusters_kubernetes_namespaces_on_environment_id")
    @@index([project_id], map: "index_clusters_kubernetes_namespaces_on_project_id")
}

model commit_user_mentions {
    id                     BigInt @id @default(autoincrement())
    note_id                Int    @unique(map: "index_commit_user_mentions_on_note_id")
    mentioned_users_ids    Int[]
    mentioned_projects_ids Int[]
    mentioned_groups_ids   Int[]
    commit_id              String @db.VarChar
    notes                  notes  @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a6760813e0")

    @@unique([commit_id, note_id], map: "commit_user_mentions_on_commit_id_and_note_id_unique_index")
}

model compliance_management_frameworks {
    id                                    BigInt                                  @id @default(autoincrement())
    name                                  String
    description                           String
    color                                 String
    namespace_id                          Int
    regulated                             Boolean                                 @default(true)
    pipeline_configuration_full_path      String?
    namespaces                            namespaces                              @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b74c45b71f")
    project_compliance_framework_settings project_compliance_framework_settings[]

    @@unique([namespace_id, name], map: "idx_on_compliance_management_frameworks_namespace_id_name")
}

model container_expiration_policies {
    project_id      Int       @id
    created_at      DateTime  @db.Timestamptz(6)
    updated_at      DateTime  @db.Timestamptz(6)
    next_run_at     DateTime? @db.Timestamptz(6)
    name_regex      String?   @default(".*") @db.VarChar(255)
    cadence         String    @default("1d") @db.VarChar(12)
    older_than      String?   @default("90d") @db.VarChar(12)
    keep_n          Int?      @default(10)
    enabled         Boolean   @default(false)
    name_regex_keep String?
    projects        projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c7360f09ad")

    @@index([project_id, next_run_at, enabled], map: "idx_container_exp_policies_on_project_id_next_run_at_enabled")
    @@index([next_run_at, enabled], map: "index_container_expiration_policies_on_next_run_at_and_enabled")
}

model container_repositories {
    id                                      Int                                       @id @default(autoincrement())
    project_id                              Int
    name                                    String                                    @db.VarChar
    created_at                              DateTime                                  @db.Timestamp(6)
    updated_at                              DateTime                                  @db.Timestamp(6)
    status                                  Int?                                      @db.SmallInt
    expiration_policy_started_at            DateTime?                                 @db.Timestamptz(6)
    expiration_policy_cleanup_status        Int                                       @default(0) @db.SmallInt
    expiration_policy_completed_at          DateTime?                                 @db.Timestamptz(6)
    migration_pre_import_started_at         DateTime?                                 @db.Timestamptz(6)
    migration_pre_import_done_at            DateTime?                                 @db.Timestamptz(6)
    migration_import_started_at             DateTime?                                 @db.Timestamptz(6)
    migration_import_done_at                DateTime?                                 @db.Timestamptz(6)
    migration_aborted_at                    DateTime?                                 @db.Timestamptz(6)
    migration_skipped_at                    DateTime?                                 @db.Timestamptz(6)
    migration_retries_count                 Int                                       @default(0)
    migration_skipped_reason                Int?                                      @db.SmallInt
    migration_state                         String                                    @default("default")
    migration_aborted_in_state              String?
    migration_plan                          String?
    projects                                projects                                  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_32f7bf5aad")
    geo_container_repository_updated_events geo_container_repository_updated_events[]

    @@unique([project_id, name], map: "index_container_repositories_on_project_id_and_name")
    @@index([expiration_policy_cleanup_status, project_id, expiration_policy_started_at], map: "idx_container_repos_on_exp_cleanup_status_project_id_start_date")
    @@index([migration_state, migration_plan, created_at], map: "idx_container_repos_on_migration_state_migration_plan_created")
    @@index([migration_state, migration_import_done_at], map: "index_container_repositories_on_migration_state_import_done_at")
    @@index([project_id], map: "index_container_repositories_on_project_id")
    @@index([project_id, id], map: "index_container_repositories_on_project_id_and_id")
    @@index([name], map: "index_container_repository_on_name_trigram")
    @@index([id, migration_state], map: "tmp_index_container_repositories_on_id_migration_state")
}

model content_blocked_states {
    id                   BigInt   @id @default(autoincrement())
    created_at           DateTime @db.Timestamptz(6)
    updated_at           DateTime @db.Timestamptz(6)
    commit_sha           Bytes
    blob_sha             Bytes
    path                 String
    container_identifier String

    @@unique([container_identifier, commit_sha, path], map: "index_content_blocked_states_on_container_id_commit_sha_path")
}

model conversational_development_index_metrics {
    id                                    Int      @id @default(autoincrement())
    leader_issues                         Float
    instance_issues                       Float
    leader_notes                          Float
    instance_notes                        Float
    leader_milestones                     Float
    instance_milestones                   Float
    leader_boards                         Float
    instance_boards                       Float
    leader_merge_requests                 Float
    instance_merge_requests               Float
    leader_ci_pipelines                   Float
    instance_ci_pipelines                 Float
    leader_environments                   Float
    instance_environments                 Float
    leader_deployments                    Float
    instance_deployments                  Float
    leader_projects_prometheus_active     Float
    instance_projects_prometheus_active   Float
    leader_service_desk_issues            Float
    instance_service_desk_issues          Float
    created_at                            DateTime @db.Timestamp(6)
    updated_at                            DateTime @db.Timestamp(6)
    percentage_boards                     Float    @default(0.0)
    percentage_ci_pipelines               Float    @default(0.0)
    percentage_deployments                Float    @default(0.0)
    percentage_environments               Float    @default(0.0)
    percentage_issues                     Float    @default(0.0)
    percentage_merge_requests             Float    @default(0.0)
    percentage_milestones                 Float    @default(0.0)
    percentage_notes                      Float    @default(0.0)
    percentage_projects_prometheus_active Float    @default(0.0)
    percentage_service_desk_issues        Float    @default(0.0)
}

model coverage_fuzzing_corpuses {
    id                BigInt            @id @default(autoincrement())
    project_id        Int
    user_id           Int?
    package_id        BigInt            @unique(map: "index_coverage_fuzzing_corpuses_on_package_id")
    file_updated_at   DateTime          @default(now()) @db.Timestamptz(6)
    created_at        DateTime          @db.Timestamptz(6)
    updated_at        DateTime          @db.Timestamptz(6)
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ef5ebf339f")
    projects          projects          @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_204d40056a")
    users             users?            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_29f6f15f82")

    @@index([project_id], map: "index_coverage_fuzzing_corpuses_on_project_id")
    @@index([user_id], map: "index_coverage_fuzzing_corpuses_on_user_id")
}

model csv_issue_imports {
    id         BigInt   @id @default(autoincrement())
    project_id Int
    user_id    Int
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_e71c0ae362")
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_5e1572387c")

    @@index([project_id], map: "index_csv_issue_imports_on_project_id")
    @@index([user_id], map: "index_csv_issue_imports_on_user_id")
}

model custom_emoji {
    id           BigInt     @id @default(autoincrement())
    namespace_id Int
    created_at   DateTime   @db.Timestamptz(6)
    updated_at   DateTime   @db.Timestamptz(6)
    name         String
    file         String
    external     Boolean    @default(true)
    creator_id   Int
    users        users      @relation(fields: [creator_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_custom_emoji_creator_id")
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_745925b412")

    @@unique([namespace_id, name], map: "index_custom_emoji_on_namespace_id_and_name")
    @@index([creator_id], map: "index_custom_emoji_on_creator_id")
}

model customer_relations_contacts {
    id                                BigInt                              @id @default(autoincrement())
    group_id                          Int
    organization_id                   BigInt?
    created_at                        DateTime                            @db.Timestamptz(6)
    updated_at                        DateTime                            @db.Timestamptz(6)
    state                             Int                                 @default(1) @db.SmallInt
    phone                             String?
    first_name                        String
    last_name                         String
    email                             String?
    description                       String?
    namespaces                        namespaces                          @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b91ddd9345")
    customer_relations_organizations  customer_relations_organizations?   @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fd3f2e7572")
    issue_customer_relations_contacts issue_customer_relations_contacts[]

    @@unique([group_id, id], map: "index_customer_relations_contacts_on_unique_email_per_group")
    @@index([group_id], map: "index_customer_relations_contacts_on_group_id")
    @@index([organization_id], map: "index_customer_relations_contacts_on_organization_id")
}

model customer_relations_organizations {
    id                          BigInt                        @id @default(autoincrement())
    group_id                    Int
    created_at                  DateTime                      @db.Timestamptz(6)
    updated_at                  DateTime                      @db.Timestamptz(6)
    state                       Int                           @default(1) @db.SmallInt
    default_rate                Decimal?                      @db.Decimal(18, 2)
    name                        String
    description                 String?
    namespaces                  namespaces                    @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a48597902f")
    customer_relations_contacts customer_relations_contacts[]

    @@unique([group_id, id], map: "index_organizations_on_unique_name_per_group")
}

model dast_profile_schedules {
    id              BigInt        @id @default(autoincrement())
    project_id      Int
    dast_profile_id BigInt        @unique(map: "index_dast_profile_schedules_on_dast_profile_id")
    user_id         Int?
    next_run_at     DateTime      @db.Timestamptz(6)
    created_at      DateTime      @db.Timestamptz(6)
    updated_at      DateTime      @db.Timestamptz(6)
    active          Boolean       @default(true)
    cron            String
    cadence         Json          @default("{}")
    timezone        String
    starts_at       DateTime      @default(now()) @db.Timestamptz(6)
    dast_profiles   dast_profiles @relation(fields: [dast_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_61d52aa0e7")
    projects        projects      @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_6cca0d8800")
    users           users?        @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_aef03d62e5")

    @@index([active, next_run_at], map: "index_dast_profile_schedules_active_next_run_at")
    @@index([project_id], map: "index_dast_profile_schedules_on_project_id")
    @@index([user_id], map: "index_dast_profile_schedules_on_user_id")
}

model dast_profiles {
    id                      BigInt                    @id @default(autoincrement())
    project_id              Int
    dast_site_profile_id    BigInt
    dast_scanner_profile_id BigInt
    created_at              DateTime                  @db.Timestamptz(6)
    updated_at              DateTime                  @db.Timestamptz(6)
    name                    String
    description             String
    branch_name             String?
    dast_scanner_profiles   dast_scanner_profiles     @relation(fields: [dast_scanner_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_23cae5abe1")
    dast_site_profiles      dast_site_profiles        @relation(fields: [dast_site_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ed1e66fbbf")
    projects                projects                  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_aa76ef30e9")
    dast_profile_schedules  dast_profile_schedules?
    dast_profiles_pipelines dast_profiles_pipelines[]

    @@unique([project_id, name], map: "index_dast_profiles_on_project_id_and_name")
    @@index([dast_scanner_profile_id], map: "index_dast_profiles_on_dast_scanner_profile_id")
    @@index([dast_site_profile_id], map: "index_dast_profiles_on_dast_site_profile_id")
}

model dast_profiles_pipelines {
    dast_profile_id BigInt
    ci_pipeline_id  BigInt        @unique(map: "index_dast_profiles_pipelines_on_ci_pipeline_id")
    dast_profiles   dast_profiles @relation(fields: [dast_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cc206a8c13")

    @@id([dast_profile_id, ci_pipeline_id])
}

model dast_scanner_profiles {
    id                           BigInt                         @id @default(autoincrement())
    created_at                   DateTime                       @db.Timestamptz(6)
    updated_at                   DateTime                       @db.Timestamptz(6)
    project_id                   Int
    spider_timeout               Int?                           @db.SmallInt
    target_timeout               Int?                           @db.SmallInt
    name                         String
    scan_type                    Int                            @default(1) @db.SmallInt
    use_ajax_spider              Boolean                        @default(false)
    show_debug_messages          Boolean                        @default(false)
    projects                     projects                       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_72a8ba7141")
    dast_profiles                dast_profiles[]
    dast_scanner_profiles_builds dast_scanner_profiles_builds[]

    @@unique([project_id, name], map: "index_dast_scanner_profiles_on_project_id_and_name")
}

model dast_scanner_profiles_builds {
    dast_scanner_profile_id BigInt
    ci_build_id             BigInt                @unique(map: "dast_scanner_profiles_builds_on_ci_build_id")
    dast_scanner_profiles   dast_scanner_profiles @relation(fields: [dast_scanner_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_5d46286ad3")

    @@id([dast_scanner_profile_id, ci_build_id])
}

model dast_site_profile_secret_variables {
    id                   BigInt             @id @default(autoincrement())
    dast_site_profile_id BigInt
    created_at           DateTime           @db.Timestamptz(6)
    updated_at           DateTime           @db.Timestamptz(6)
    variable_type        Int                @default(1) @db.SmallInt
    key                  String
    encrypted_value      Bytes
    encrypted_value_iv   Bytes
    dast_site_profiles   dast_site_profiles @relation(fields: [dast_site_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_43e2897950")

    @@unique([dast_site_profile_id, key], map: "index_site_profile_secret_variables_on_site_profile_id_and_key")
}

model dast_site_profiles {
    id                                 BigInt                               @id @default(autoincrement())
    project_id                         Int
    dast_site_id                       BigInt
    created_at                         DateTime                             @db.Timestamptz(6)
    updated_at                         DateTime                             @db.Timestamptz(6)
    name                               String
    excluded_urls                      String[]
    auth_enabled                       Boolean                              @default(false)
    auth_url                           String?
    auth_username_field                String?
    auth_password_field                String?
    auth_username                      String?
    target_type                        Int                                  @default(0) @db.SmallInt
    scan_method                        Int                                  @default(0) @db.SmallInt
    dast_sites                         dast_sites                           @relation(fields: [dast_site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_747dc64abc")
    projects                           projects                             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_83e309d69e")
    dast_profiles                      dast_profiles[]
    dast_site_profile_secret_variables dast_site_profile_secret_variables[]
    dast_site_profiles_builds          dast_site_profiles_builds[]
    dast_site_profiles_pipelines       dast_site_profiles_pipelines[]

    @@unique([project_id, name], map: "index_dast_site_profiles_on_project_id_and_name")
    @@index([dast_site_id], map: "index_dast_site_profiles_on_dast_site_id")
}

model dast_site_profiles_builds {
    dast_site_profile_id BigInt
    ci_build_id          BigInt             @unique(map: "dast_site_profiles_builds_on_ci_build_id")
    dast_site_profiles   dast_site_profiles @relation(fields: [dast_site_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_94e80df60e")

    @@id([dast_site_profile_id, ci_build_id])
}

model dast_site_profiles_pipelines {
    dast_site_profile_id BigInt
    ci_pipeline_id       BigInt             @unique(map: "index_dast_site_profiles_pipelines_on_ci_pipeline_id")
    dast_site_profiles   dast_site_profiles @relation(fields: [dast_site_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cf05cf8fe1")

    @@id([dast_site_profile_id, ci_pipeline_id])
}

model dast_site_tokens {
    id                    BigInt                  @id @default(autoincrement())
    project_id            Int
    created_at            DateTime                @db.Timestamptz(6)
    updated_at            DateTime                @db.Timestamptz(6)
    expired_at            DateTime?               @db.Timestamptz(6)
    token                 String                  @unique(map: "index_dast_site_token_on_token")
    url                   String
    projects              projects                @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e84f721a8e")
    dast_site_validations dast_site_validations[]

    @@unique([project_id, url], map: "index_dast_site_token_on_project_id_and_url")
    @@index([project_id], map: "index_dast_site_tokens_on_project_id")
}

model dast_site_validations {
    id                         BigInt           @id @default(autoincrement())
    dast_site_token_id         BigInt
    created_at                 DateTime         @db.Timestamptz(6)
    updated_at                 DateTime         @db.Timestamptz(6)
    validation_started_at      DateTime?        @db.Timestamptz(6)
    validation_passed_at       DateTime?        @db.Timestamptz(6)
    validation_failed_at       DateTime?        @db.Timestamptz(6)
    validation_last_retried_at DateTime?        @db.Timestamptz(6)
    validation_strategy        Int              @db.SmallInt
    url_base                   String
    url_path                   String
    state                      String           @default("pending")
    dast_site_tokens           dast_site_tokens @relation(fields: [dast_site_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_285c617324")
    dast_sites                 dast_sites[]

    @@index([dast_site_token_id], map: "index_dast_site_validations_on_dast_site_token_id")
    @@index([url_base, state], map: "index_dast_site_validations_on_url_base_and_state")
}

model dast_sites {
    id                      BigInt                 @id @default(autoincrement())
    project_id              Int
    created_at              DateTime               @db.Timestamptz(6)
    updated_at              DateTime               @db.Timestamptz(6)
    url                     String
    dast_site_validation_id BigInt?
    dast_site_validations   dast_site_validations? @relation(fields: [dast_site_validation_id], references: [id], onUpdate: NoAction, map: "fk_0a57f2271b")
    projects                projects               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6febb6ea9c")
    dast_site_profiles      dast_site_profiles[]

    @@unique([project_id, url], map: "index_dast_sites_on_project_id_and_url")
    @@index([dast_site_validation_id], map: "index_dast_sites_on_dast_site_validation_id")
}

model dependency_proxy_blobs {
    id         Int        @id @default(autoincrement())
    group_id   Int
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    size       BigInt?
    file_store Int?
    file_name  String     @db.VarChar
    file       String
    status     Int        @default(0) @db.SmallInt
    read_at    DateTime   @default(now()) @db.Timestamptz(6)
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_db58bbc5d7")

    @@index([group_id, file_name], map: "index_dependency_proxy_blobs_on_group_id_and_file_name")
    @@index([group_id, status, read_at, id], map: "index_dependency_proxy_blobs_on_group_id_status_read_at_id")
    @@index([status], map: "index_dependency_proxy_blobs_on_status")
}

model dependency_proxy_group_settings {
    id         Int        @id @default(autoincrement())
    group_id   Int
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    enabled    Boolean    @default(false)
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_616ddd680a")

    @@index([group_id], map: "index_dependency_proxy_group_settings_on_group_id")
}

model dependency_proxy_image_ttl_group_policies {
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    group_id   Int        @id
    ttl        Int?       @default(90)
    enabled    Boolean    @default(false)
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2b1896d021")
}

model dependency_proxy_manifests {
    id           BigInt     @id @default(autoincrement())
    created_at   DateTime   @db.Timestamptz(6)
    updated_at   DateTime   @db.Timestamptz(6)
    group_id     Int
    size         BigInt?
    file_store   Int?       @db.SmallInt
    file_name    String
    file         String
    digest       String
    content_type String?
    status       Int        @default(0) @db.SmallInt
    read_at      DateTime   @default(now()) @db.Timestamptz(6)
    namespaces   namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a758021fb0")

    @@unique([group_id, file_name, status], map: "index_dep_prox_manifests_on_group_id_file_name_and_status")
    @@index([group_id, status, read_at, id], map: "index_dependency_proxy_manifests_on_group_id_status_read_at_id")
    @@index([status], map: "index_dependency_proxy_manifests_on_status")
}

model deploy_keys_projects {
    id            Int       @id @default(autoincrement())
    deploy_key_id Int
    project_id    Int
    created_at    DateTime? @db.Timestamp(6)
    updated_at    DateTime? @db.Timestamp(6)
    can_push      Boolean   @default(false)
    projects      projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_58a901ca7e")

    @@index([deploy_key_id], map: "index_deploy_keys_projects_on_deploy_key_id")
    @@index([project_id], map: "index_deploy_keys_projects_on_project_id")
}

model deploy_tokens {
    id                     Int                     @id @default(autoincrement())
    revoked                Boolean?                @default(false)
    read_repository        Boolean                 @default(false)
    read_registry          Boolean                 @default(false)
    expires_at             DateTime                @db.Timestamptz(6)
    created_at             DateTime                @db.Timestamptz(6)
    name                   String                  @db.VarChar
    token                  String?                 @unique(map: "index_deploy_tokens_on_token") @db.VarChar
    username               String?                 @db.VarChar
    token_encrypted        String?                 @unique(map: "index_deploy_tokens_on_token_encrypted") @db.VarChar(255)
    deploy_token_type      Int                     @default(2) @db.SmallInt
    write_registry         Boolean                 @default(false)
    read_package_registry  Boolean                 @default(false)
    write_package_registry Boolean                 @default(false)
    creator_id             Int?
    users                  users?                  @relation(fields: [creator_id], references: [id], onUpdate: NoAction, map: "fk_7082f8a288")
    group_deploy_tokens    group_deploy_tokens[]
    project_deploy_tokens  project_deploy_tokens[]

    @@index([creator_id], map: "index_deploy_tokens_on_creator_id")
}

model deployment_approvals {
    id                                   BigInt                                @id @default(autoincrement())
    deployment_id                        Int
    user_id                              Int
    created_at                           DateTime                              @db.Timestamptz(6)
    updated_at                           DateTime                              @db.Timestamptz(6)
    status                               Int                                   @db.SmallInt
    comment                              String?
    approval_rule_id                     BigInt?
    protected_environment_approval_rules protected_environment_approval_rules? @relation(fields: [approval_rule_id], references: [id], onUpdate: NoAction, map: "fk_61cdbdc5b9")
    deployments                          deployments                           @relation(fields: [deployment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_2d060dfc73")
    users                                users                                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0f58311058")

    @@unique([deployment_id, user_id], map: "index_deployment_approvals_on_deployment_id_and_user_id")
    @@index([approval_rule_id], map: "index_deployment_approvals_on_approval_rule_id")
    @@index([user_id], map: "index_deployment_approvals_on_user_id")
}

model deployment_clusters {
    deployment_id        Int         @id
    cluster_id           Int
    kubernetes_namespace String?     @db.VarChar(255)
    clusters             clusters    @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4e6243e120")
    deployments          deployments @relation(fields: [deployment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6359a164df")

    @@unique([cluster_id, deployment_id], map: "index_deployment_clusters_on_cluster_id_and_deployment_id")
    @@index([cluster_id, kubernetes_namespace], map: "idx_deployment_clusters_on_cluster_id_and_kubernetes_namespace")
}

model deployment_merge_requests {
    deployment_id    Int
    merge_request_id Int
    environment_id   Int?
    deployments      deployments    @relation(fields: [deployment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_dcbce9f4df")
    environments     environments?  @relation(fields: [environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_a064ff4453")
    merge_requests   merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_86a6d8bf12")

    @@id([deployment_id, merge_request_id])
    @@unique([environment_id, merge_request_id], map: "idx_environment_merge_requests_unique_index")
    @@index([merge_request_id], map: "index_deployment_merge_requests_on_merge_request_id")
}

model deployments {
    id                        Int                         @id @default(autoincrement())
    iid                       Int
    project_id                Int
    environment_id            Int
    ref                       String                      @db.VarChar
    tag                       Boolean
    sha                       String                      @db.VarChar
    user_id                   Int?
    deployable_type           String?                     @db.VarChar
    created_at                DateTime?                   @db.Timestamp(6)
    updated_at                DateTime?                   @db.Timestamp(6)
    on_stop                   String?                     @db.VarChar
    status                    Int                         @db.SmallInt
    finished_at               DateTime?                   @db.Timestamptz(6)
    cluster_id                Int?
    deployable_id             BigInt?
    archived                  Boolean                     @default(false)
    clusters                  clusters?                   @relation(fields: [cluster_id], references: [id], onUpdate: NoAction, map: "fk_289bba3222")
    environments              environments                @relation(fields: [environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_009fd21147")
    projects                  projects                    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b9a3851b82")
    deployment_approvals      deployment_approvals[]
    deployment_clusters       deployment_clusters?
    deployment_merge_requests deployment_merge_requests[]

    @@unique([project_id, iid], map: "index_deployments_on_project_id_and_iid")
    @@index([archived, project_id, iid], map: "index_deployments_on_archived_project_id_iid")
    @@index([cluster_id, status], map: "index_deployments_on_cluster_id_and_status")
    @@index([created_at], map: "index_deployments_on_created_at")
    @@index([deployable_type, deployable_id], map: "index_deployments_on_deployable_type_and_deployable_id")
    @@index([environment_id, id], map: "index_deployments_on_environment_id_and_id")
    @@index([environment_id, iid, project_id], map: "index_deployments_on_environment_id_and_iid_and_project_id")
    @@index([environment_id, ref], map: "index_deployments_on_environment_id_and_ref")
    @@index([environment_id, status, finished_at], map: "index_deployments_on_environment_id_status_and_finished_at")
    @@index([environment_id, status, id], map: "index_deployments_on_environment_id_status_and_id")
    @@index([environment_id, status, sha], map: "index_deployments_on_environment_status_sha")
    @@index([id, status, created_at], map: "index_deployments_on_id_and_status_and_created_at")
    @@index([project_id, environment_id, updated_at, id], map: "index_deployments_on_project_and_environment_and_updated_at_id")
    @@index([project_id, id], map: "index_deployments_on_project_id_and_id")
    @@index([project_id, ref], map: "index_deployments_on_project_id_and_ref")
    @@index([project_id, status], map: "index_deployments_on_project_id_and_status")
    @@index([project_id, status, created_at], map: "index_deployments_on_project_id_and_status_and_created_at")
    @@index([project_id, updated_at, id], map: "index_deployments_on_project_id_and_updated_at_and_id")
    @@index([project_id, sha], map: "index_deployments_on_project_id_sha")
    @@index([user_id, status, created_at], map: "index_deployments_on_user_id_and_status_and_created_at")
}

model description_versions {
    id                   BigInt                 @id @default(autoincrement())
    created_at           DateTime               @db.Timestamptz(6)
    updated_at           DateTime               @db.Timestamptz(6)
    issue_id             Int?
    merge_request_id     Int?
    epic_id              Int?
    description          String?
    deleted_at           DateTime?              @db.Timestamptz(6)
    epics                epics?                 @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e8f4caf9c7")
    issues               issues?                @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3ff658220b")
    merge_requests       merge_requests?        @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_12b144011c")
    system_note_metadata system_note_metadata[]
}

model design_management_designs {
    id                                 BigInt                               @id @default(autoincrement())
    project_id                         Int
    issue_id                           Int?
    filename                           String                               @db.VarChar
    relative_position                  Int?
    iid                                Int?
    issues                             issues?                              @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bfe283ec3c")
    projects                           projects                             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4bb1073360")
    design_management_designs_versions design_management_designs_versions[]
    design_user_mentions               design_user_mentions[]

    @@unique([project_id, iid], map: "index_design_management_designs_on_iid_and_project_id")
    @@unique([issue_id, filename], map: "index_design_management_designs_on_issue_id_and_filename")
    @@index([issue_id, relative_position, id], map: "index_design_management_designs_issue_id_relative_position_id")
    @@index([project_id], map: "index_design_management_designs_on_project_id")
}

model design_management_designs_versions {
    id                         BigInt                     @id @default(autoincrement())
    design_id                  BigInt
    version_id                 BigInt
    event                      Int                        @default(0) @db.SmallInt
    image_v432x230             String?                    @db.VarChar(255)
    design_management_designs  design_management_designs  @relation(fields: [design_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_03c671965c")
    design_management_versions design_management_versions @relation(fields: [version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f4d25ba00c")

    @@unique([design_id, version_id], map: "design_management_designs_versions_uniqueness")
    @@index([design_id], map: "index_design_management_designs_versions_on_design_id")
    @@index([event], map: "index_design_management_designs_versions_on_event")
    @@index([version_id], map: "index_design_management_designs_versions_on_version_id")
}

model design_management_versions {
    id                                 BigInt                               @id @default(autoincrement())
    sha                                Bytes
    issue_id                           Int?
    created_at                         DateTime                             @db.Timestamptz(6)
    author_id                          Int?
    users                              users?                               @relation(fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_c1440b4896")
    issues                             issues?                              @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6574200d99")
    design_management_designs_versions design_management_designs_versions[]

    @@unique([sha, issue_id], map: "index_design_management_versions_on_sha_and_issue_id")
    @@index([issue_id], map: "index_design_management_versions_on_issue_id")
}

model design_user_mentions {
    id                        BigInt                    @id @default(autoincrement())
    design_id                 BigInt
    note_id                   Int                       @unique(map: "index_design_user_mentions_on_note_id")
    mentioned_users_ids       Int[]
    mentioned_projects_ids    Int[]
    mentioned_groups_ids      Int[]
    design_management_designs design_management_designs @relation(fields: [design_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f7075a53c1")
    notes                     notes                     @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8de8c6d632")

    @@unique([design_id, note_id], map: "design_user_mentions_on_design_id_and_note_id_unique_index")
}

model detached_partitions {
    id         BigInt   @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    drop_after DateTime @db.Timestamptz(6)
    table_name String
}

model diff_note_positions {
    id                BigInt @id @default(autoincrement())
    note_id           Int
    old_line          Int?
    new_line          Int?
    diff_content_type Int    @db.SmallInt
    diff_type         Int    @db.SmallInt
    line_code         String @db.VarChar(255)
    base_sha          Bytes
    start_sha         Bytes
    head_sha          Bytes
    old_path          String
    new_path          String
    notes             notes  @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_13c7212859")

    @@unique([note_id, diff_type], map: "index_diff_note_positions_on_note_id_and_diff_type")
}

model dora_daily_metrics {
    id                                 BigInt       @id @default(autoincrement())
    environment_id                     Int
    date                               DateTime     @db.Date
    deployment_frequency               Int?
    lead_time_for_changes_in_seconds   Int?
    time_to_restore_service_in_seconds Int?
    environments                       environments @relation(fields: [environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1fd07aff6f")

    @@unique([environment_id, date], map: "index_dora_daily_metrics_on_environment_id_and_date")
}

model draft_notes {
    id                 BigInt         @id @default(autoincrement())
    merge_request_id   Int
    author_id          Int
    resolve_discussion Boolean        @default(false)
    discussion_id      String?        @db.VarChar
    note               String
    position           String?
    original_position  String?
    change_position    String?
    commit_id          Bytes?
    line_code          String?
    users              users          @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2a8dac9901")
    merge_requests     merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e753681674")

    @@index([author_id], map: "index_draft_notes_on_author_id")
    @@index([discussion_id], map: "index_draft_notes_on_discussion_id")
    @@index([merge_request_id], map: "index_draft_notes_on_merge_request_id")
}

model elastic_index_settings {
    id                 BigInt   @id @default(autoincrement())
    created_at         DateTime @db.Timestamptz(6)
    updated_at         DateTime @db.Timestamptz(6)
    number_of_replicas Int      @default(1) @db.SmallInt
    number_of_shards   Int      @default(5) @db.SmallInt
    alias_name         String   @unique(map: "index_elastic_index_settings_on_alias_name")
}

model elastic_reindexing_slices {
    id                            BigInt                      @id @default(autoincrement())
    created_at                    DateTime                    @db.Timestamptz(6)
    updated_at                    DateTime                    @db.Timestamptz(6)
    elastic_reindexing_subtask_id BigInt
    elastic_slice                 Int                         @default(0) @db.SmallInt
    elastic_max_slice             Int                         @default(0) @db.SmallInt
    retry_attempt                 Int                         @default(0) @db.SmallInt
    elastic_task                  String?
    elastic_reindexing_subtasks   elastic_reindexing_subtasks @relation(fields: [elastic_reindexing_subtask_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a17d86aeb9")

    @@index([elastic_reindexing_subtask_id], map: "idx_elastic_reindexing_slices_on_elastic_reindexing_subtask_id")
}

model elastic_reindexing_subtasks {
    id                         BigInt                      @id @default(autoincrement())
    elastic_reindexing_task_id BigInt
    alias_name                 String
    index_name_from            String
    index_name_to              String
    elastic_task               String?
    documents_count_target     Int?
    documents_count            Int?
    created_at                 DateTime                    @db.Timestamptz(6)
    updated_at                 DateTime                    @db.Timestamptz(6)
    elastic_reindexing_tasks   elastic_reindexing_tasks    @relation(fields: [elastic_reindexing_task_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f2cc190164")
    elastic_reindexing_slices  elastic_reindexing_slices[]

    @@index([elastic_reindexing_task_id], map: "index_elastic_reindexing_subtasks_on_elastic_reindexing_task_id")
}

model elastic_reindexing_tasks {
    id                          BigInt                        @id @default(autoincrement())
    created_at                  DateTime                      @db.Timestamptz(6)
    updated_at                  DateTime                      @db.Timestamptz(6)
    state                       Int                           @default(0) @db.SmallInt
    in_progress                 Boolean                       @default(true)
    error_message               String?
    delete_original_index_at    DateTime?                     @db.Timestamptz(6)
    max_slices_running          Int                           @default(60) @db.SmallInt
    slice_multiplier            Int                           @default(2) @db.SmallInt
    elastic_reindexing_subtasks elastic_reindexing_subtasks[]

    @@index([state], map: "index_elastic_reindexing_tasks_on_state")
}

model elasticsearch_indexed_namespaces {
    created_at   DateTime   @db.Timestamptz(6)
    updated_at   DateTime   @db.Timestamptz(6)
    namespace_id Int        @id
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bdcf044f37")

    @@index([created_at], map: "index_elasticsearch_indexed_namespaces_on_created_at")
}

model elasticsearch_indexed_projects {
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    project_id Int      @id
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bd13bbdc3d")
}

model emails {
    id                   Int       @id @default(autoincrement())
    user_id              Int
    email                String    @unique(map: "index_emails_on_email") @db.VarChar
    created_at           DateTime? @db.Timestamp(6)
    updated_at           DateTime? @db.Timestamp(6)
    confirmation_token   String?   @unique(map: "index_emails_on_confirmation_token") @db.VarChar
    confirmed_at         DateTime? @db.Timestamp(6)
    confirmation_sent_at DateTime? @db.Timestamp(6)
    users                users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_emails_user_id")

    @@index([user_id], map: "index_emails_on_user_id")
}

model environments {
    id                                   Int                                    @id @default(autoincrement())
    project_id                           Int
    name                                 String                                 @db.VarChar
    created_at                           DateTime?                              @db.Timestamp(6)
    updated_at                           DateTime?                              @db.Timestamp(6)
    external_url                         String?                                @db.VarChar
    environment_type                     String?                                @db.VarChar
    state                                String                                 @default("available") @db.VarChar
    slug                                 String                                 @db.VarChar
    auto_stop_at                         DateTime?                              @db.Timestamptz(6)
    auto_delete_at                       DateTime?                              @db.Timestamptz(6)
    tier                                 Int?                                   @db.SmallInt
    projects                             projects                               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d1c8c1da6a")
    alert_management_alerts              alert_management_alerts[]
    clusters_kubernetes_namespaces       clusters_kubernetes_namespaces[]
    deployment_merge_requests            deployment_merge_requests[]
    deployments                          deployments[]
    dora_daily_metrics                   dora_daily_metrics[]
    metrics_dashboard_annotations        metrics_dashboard_annotations[]
    prometheus_alerts                    prometheus_alerts[]
    self_managed_prometheus_alert_events self_managed_prometheus_alert_events[]

    @@unique([project_id, name], map: "index_environments_on_project_id_and_name")
    @@unique([project_id, slug], map: "index_environments_on_project_id_and_slug")
    @@index([name], map: "index_environments_on_name_varchar_pattern_ops")
    @@index([project_id, state, environment_type], map: "index_environments_on_project_id_state_environment_type")
}

model epic_issues {
    id                Int    @id @default(autoincrement())
    epic_id           Int
    issue_id          Int    @unique(map: "index_epic_issues_on_issue_id")
    relative_position Int?
    epics             epics  @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5d942936b4")
    issues            issues @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4209981af6")

    @@index([epic_id, issue_id], map: "index_epic_issues_on_epic_id_and_issue_id")
}

model epic_metrics {
    id         Int      @id @default(autoincrement())
    epic_id    Int
    created_at DateTime @db.Timestamp(6)
    updated_at DateTime @db.Timestamp(6)
    epics      epics    @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d071904753")

    @@index([epic_id], map: "index_epic_metrics")
}

model epic_user_mentions {
    id                     BigInt @id @default(autoincrement())
    epic_id                Int
    note_id                Int?
    mentioned_users_ids    Int[]
    mentioned_projects_ids Int[]
    mentioned_groups_ids   Int[]
    epics                  epics  @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3eaf4d88cc")
    notes                  notes? @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1c65976a49")

    @@unique([epic_id, note_id], map: "epic_user_mentions_on_epic_id_and_note_id_index")
}

model epics {
    id                                                            Int                            @id @default(autoincrement())
    group_id                                                      Int
    author_id                                                     Int
    assignee_id                                                   Int?
    iid                                                           Int
    cached_markdown_version                                       Int?
    updated_by_id                                                 Int?
    last_edited_by_id                                             Int?
    lock_version                                                  Int?                           @default(0)
    start_date                                                    DateTime?                      @db.Date
    end_date                                                      DateTime?                      @db.Date
    last_edited_at                                                DateTime?                      @db.Timestamp(6)
    created_at                                                    DateTime                       @db.Timestamp(6)
    updated_at                                                    DateTime                       @db.Timestamp(6)
    title                                                         String                         @db.VarChar
    title_html                                                    String                         @db.VarChar
    description                                                   String?
    description_html                                              String?
    start_date_sourcing_milestone_id                              Int?
    due_date_sourcing_milestone_id                                Int?
    start_date_fixed                                              DateTime?                      @db.Date
    due_date_fixed                                                DateTime?                      @db.Date
    start_date_is_fixed                                           Boolean?
    due_date_is_fixed                                             Boolean?
    closed_by_id                                                  Int?
    closed_at                                                     DateTime?                      @db.Timestamp(6)
    parent_id                                                     Int?
    relative_position                                             Int?
    state_id                                                      Int                            @default(1) @db.SmallInt
    start_date_sourcing_epic_id                                   Int?
    due_date_sourcing_epic_id                                     Int?
    confidential                                                  Boolean                        @default(false)
    external_key                                                  String?                        @db.VarChar(255)
    color                                                         String?                        @default("#1068bf")
    users_epics_assignee_idTousers                                users?                         @relation("epics_assignee_idTousers", fields: [assignee_id], references: [id], onUpdate: NoAction, map: "fk_dccd3f98fc")
    users_epics_author_idTousers                                  users                          @relation("epics_author_idTousers", fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_3654b61b03")
    users_epics_closed_by_idTousers                               users?                         @relation("epics_closed_by_idTousers", fields: [closed_by_id], references: [id], onUpdate: NoAction, map: "fk_aa5798e761")
    epics_epicsToepics_due_date_sourcing_epic_id                  epics?                         @relation("epicsToepics_due_date_sourcing_epic_id", fields: [due_date_sourcing_epic_id], references: [id], onUpdate: NoAction, map: "fk_013c9f36ca")
    milestones_epics_due_date_sourcing_milestone_idTomilestones   milestones?                    @relation("epics_due_date_sourcing_milestone_idTomilestones", fields: [due_date_sourcing_milestone_id], references: [id], onUpdate: NoAction, map: "fk_3c1fd1cccc")
    namespaces                                                    namespaces                     @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f081aa4489")
    epics_epicsToepics_parent_id                                  epics?                         @relation("epicsToepics_parent_id", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_25b99c1be3")
    epics_epicsToepics_start_date_sourcing_epic_id                epics?                         @relation("epicsToepics_start_date_sourcing_epic_id", fields: [start_date_sourcing_epic_id], references: [id], onUpdate: NoAction, map: "fk_9d480c64b2")
    milestones_epics_start_date_sourcing_milestone_idTomilestones milestones?                    @relation("epics_start_date_sourcing_milestone_idTomilestones", fields: [start_date_sourcing_milestone_id], references: [id], onUpdate: NoAction, map: "fk_1fbed67632")
    boards_epic_board_positions                                   boards_epic_board_positions[]
    boards_epic_user_preferences                                  boards_epic_user_preferences[]
    description_versions                                          description_versions[]
    epic_issues                                                   epic_issues[]
    epic_metrics                                                  epic_metrics[]
    epic_user_mentions                                            epic_user_mentions[]
    other_epics_epicsToepics_due_date_sourcing_epic_id            epics[]                        @relation("epicsToepics_due_date_sourcing_epic_id")
    other_epics_epicsToepics_parent_id                            epics[]                        @relation("epicsToepics_parent_id")
    other_epics_epicsToepics_start_date_sourcing_epic_id          epics[]                        @relation("epicsToepics_start_date_sourcing_epic_id")
    issues                                                        issues[]
    related_epic_links_epicsTorelated_epic_links_source_id        related_epic_links[]           @relation("epicsTorelated_epic_links_source_id")
    related_epic_links_epicsTorelated_epic_links_target_id        related_epic_links[]           @relation("epicsTorelated_epic_links_target_id")
    resource_label_events                                         resource_label_events[]
    resource_state_events                                         resource_state_events[]
    vulnerabilities                                               vulnerabilities[]

    @@unique([group_id, iid], map: "index_epics_on_group_id_and_iid")
    @@index([assignee_id], map: "index_epics_on_assignee_id")
    @@index([author_id], map: "index_epics_on_author_id")
    @@index([closed_by_id], map: "index_epics_on_closed_by_id")
    @@index([confidential], map: "index_epics_on_confidential")
    @@index([due_date_sourcing_milestone_id], map: "index_epics_on_due_date_sourcing_milestone_id")
    @@index([end_date], map: "index_epics_on_end_date")
    @@index([group_id], map: "index_epics_on_group_id_and_iid_varchar_pattern")
    @@index([iid], map: "index_epics_on_iid")
    @@index([last_edited_by_id], map: "index_epics_on_last_edited_by_id")
    @@index([parent_id], map: "index_epics_on_parent_id")
    @@index([start_date], map: "index_epics_on_start_date")
    @@index([start_date_sourcing_milestone_id], map: "index_epics_on_start_date_sourcing_milestone_id")
}

model error_tracking_client_keys {
    id         BigInt   @id @default(autoincrement())
    project_id Int
    active     Boolean  @default(true)
    public_key String
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_99342d1d54")

    @@index([project_id], map: "index_error_tracking_client_keys_on_project_id")
}

model error_tracking_error_events {
    id                    BigInt                @id @default(autoincrement())
    error_id              BigInt
    description           String
    environment           String?
    level                 String?
    occurred_at           DateTime              @db.Timestamptz(6)
    payload               Json                  @default("{}")
    created_at            DateTime              @db.Timestamptz(6)
    updated_at            DateTime              @db.Timestamptz(6)
    error_tracking_errors error_tracking_errors @relation(fields: [error_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2c096c0076")

    @@index([error_id], map: "index_error_tracking_error_events_on_error_id")
}

model error_tracking_errors {
    id                          BigInt                        @id @default(autoincrement())
    project_id                  Int
    name                        String
    description                 String
    actor                       String
    first_seen_at               DateTime                      @default(now()) @db.Timestamptz(6)
    last_seen_at                DateTime                      @default(now()) @db.Timestamptz(6)
    platform                    String?
    created_at                  DateTime                      @db.Timestamptz(6)
    updated_at                  DateTime                      @db.Timestamptz(6)
    events_count                BigInt                        @default(0)
    status                      Int                           @default(0) @db.SmallInt
    projects                    projects                      @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6b41f837ba")
    error_tracking_error_events error_tracking_error_events[]

    @@index([project_id], map: "index_error_tracking_errors_on_project_id")
    @@index([project_id, status, id], map: "index_et_errors_on_project_id_and_status_and_id")
    @@index([project_id, status, events_count, id], map: "index_et_errors_on_project_id_and_status_events_count_id_desc")
    @@index([project_id, status, first_seen_at, id], map: "index_et_errors_on_project_id_and_status_first_seen_at_id_desc")
    @@index([project_id, status, last_seen_at, id], map: "index_et_errors_on_project_id_and_status_last_seen_at_id_desc")
}

model events {
    project_id          Int?
    author_id           Int
    target_id           Int?
    created_at          DateTime             @db.Timestamptz(6)
    updated_at          DateTime             @db.Timestamptz(6)
    action              Int                  @db.SmallInt
    target_type         String?              @db.VarChar
    group_id            Int?
    fingerprint         Bytes?
    id                  BigInt               @id @default(autoincrement())
    users               users                @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_edfd187b6f")
    namespaces          namespaces?          @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_61fbf6ca48")
    projects            projects?            @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0434b48643")
    push_event_payloads push_event_payloads?

    @@unique([target_type, target_id, fingerprint], map: "index_events_on_target_type_and_target_id_and_fingerprint")
    @@index([created_at, author_id], map: "analytics_index_events_on_created_at_and_author_id")
    @@index([author_id, project_id, action, target_type, created_at], map: "index_events_author_id_project_id_action_target_type_created_at")
    @@index([action], map: "index_events_on_action")
    @@index([author_id, created_at], map: "index_events_on_author_id_and_created_at")
    @@index([author_id, id], map: "index_events_on_author_id_and_id")
    @@index([project_id, created_at], map: "index_events_on_project_id_and_created_at")
    @@index([project_id, id], map: "index_events_on_project_id_and_id")
}

model evidences {
    id          BigInt   @id @default(autoincrement())
    release_id  Int
    created_at  DateTime @db.Timestamptz(6)
    updated_at  DateTime @db.Timestamptz(6)
    summary_sha Bytes?
    summary     Json     @default("{}")
    releases    releases @relation(fields: [release_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6388b435a6")

    @@index([release_id], map: "index_evidences_on_release_id")
}

model experiment_subjects {
    id            BigInt      @id @default(autoincrement())
    experiment_id BigInt
    user_id       Int?
    project_id    Int?
    variant       Int         @default(0) @db.SmallInt
    created_at    DateTime    @db.Timestamptz(6)
    updated_at    DateTime    @db.Timestamptz(6)
    converted_at  DateTime?   @db.Timestamptz(6)
    context       Json        @default("{}")
    namespace_id  Int?
    experiments   experiments @relation(fields: [experiment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ede5754774")
    namespaces    namespaces? @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_842649f2f5")
    projects      projects?   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ccc28f8ceb")
    users         users?      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dfc3e211d4")

    @@index([experiment_id], map: "index_experiment_subjects_on_experiment_id")
    @@index([namespace_id], map: "index_experiment_subjects_on_namespace_id")
    @@index([project_id], map: "index_experiment_subjects_on_project_id")
    @@index([user_id], map: "index_experiment_subjects_on_user_id")
}

model experiment_users {
    id            BigInt      @id @default(autoincrement())
    experiment_id BigInt
    user_id       Int
    group_type    Int         @default(0) @db.SmallInt
    created_at    DateTime    @db.Timestamptz(6)
    updated_at    DateTime    @db.Timestamptz(6)
    converted_at  DateTime?   @db.Timestamptz(6)
    context       Json        @default("{}")
    experiments   experiments @relation(fields: [experiment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_56d4708b4a")
    users         users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fd805f771a")

    @@index([experiment_id], map: "index_experiment_users_on_experiment_id")
    @@index([user_id], map: "index_experiment_users_on_user_id")
}

model experiments {
    id                  BigInt                @id @default(autoincrement())
    name                String                @unique(map: "index_experiments_on_name")
    experiment_subjects experiment_subjects[]
    experiment_users    experiment_users[]
}

model external_approval_rules {
    id                                         BigInt                                       @id @default(autoincrement())
    project_id                                 Int
    created_at                                 DateTime                                     @db.Timestamptz(6)
    updated_at                                 DateTime                                     @db.Timestamptz(6)
    external_url                               String
    name                                       String
    projects                                   projects                                     @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fd4f9ac573")
    external_approval_rules_protected_branches external_approval_rules_protected_branches[]

    @@unique([project_id, external_url], map: "idx_on_external_approval_rules_project_id_external_url")
    @@unique([project_id, name], map: "idx_on_external_approval_rules_project_id_name")
}

model external_approval_rules_protected_branches {
    id                        BigInt                  @id @default(autoincrement())
    external_approval_rule_id BigInt
    protected_branch_id       Int
    external_approval_rules   external_approval_rules @relation(fields: [external_approval_rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c9a037a926")
    protected_branches        protected_branches      @relation(fields: [protected_branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ca2ffb55e6")

    @@unique([protected_branch_id, external_approval_rule_id], map: "idx_protected_branch_id_external_approval_rule_id")
    @@index([external_approval_rule_id], map: "idx_eaprpb_external_approval_rule_id")
}

model external_pull_requests {
    id                BigInt         @id @default(autoincrement())
    created_at        DateTime       @db.Timestamptz(6)
    updated_at        DateTime       @db.Timestamptz(6)
    project_id        BigInt
    pull_request_iid  Int
    status            Int            @db.SmallInt
    source_branch     String         @db.VarChar(255)
    target_branch     String         @db.VarChar(255)
    source_repository String         @db.VarChar(255)
    target_repository String         @db.VarChar(255)
    source_sha        Bytes
    target_sha        Bytes
    ci_pipelines      ci_pipelines[]

    @@unique([project_id, source_branch, target_branch], map: "index_external_pull_requests_on_project_and_branches")
}

model external_status_checks {
    id                                        BigInt                                      @id @default(autoincrement())
    project_id                                Int
    created_at                                DateTime                                    @db.Timestamptz(6)
    updated_at                                DateTime                                    @db.Timestamptz(6)
    external_url                              String
    name                                      String
    projects                                  projects                                    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1f5a8aa809")
    external_status_checks_protected_branches external_status_checks_protected_branches[]
    status_check_responses                    status_check_responses[]

    @@unique([project_id, external_url], map: "idx_on_external_status_checks_project_id_external_url")
    @@unique([project_id, name], map: "idx_on_external_status_checks_project_id_name")
}

model external_status_checks_protected_branches {
    id                       BigInt                 @id @default(autoincrement())
    external_status_check_id BigInt
    protected_branch_id      Int
    external_status_checks   external_status_checks @relation(fields: [external_status_check_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cc0dcc36d1")
    protected_branches       protected_branches     @relation(fields: [protected_branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b7d788e813")

    @@index([external_status_check_id], map: "index_esc_protected_branches_on_external_status_check_id")
    @@index([protected_branch_id], map: "index_esc_protected_branches_on_protected_branch_id")
}

model feature_gates {
    id          Int      @id @default(autoincrement())
    feature_key String   @db.VarChar
    key         String   @db.VarChar
    value       String?  @db.VarChar
    created_at  DateTime @db.Timestamp(6)
    updated_at  DateTime @db.Timestamp(6)

    @@unique([feature_key, key, value], map: "index_feature_gates_on_feature_key_and_key_and_value")
}

model features {
    id         Int      @id @default(autoincrement())
    key        String   @unique(map: "index_features_on_key") @db.VarChar
    created_at DateTime @db.Timestamp(6)
    updated_at DateTime @db.Timestamp(6)
}

model fork_network_members {
    id                                                             Int           @id @default(autoincrement())
    fork_network_id                                                Int
    project_id                                                     Int           @unique(map: "index_fork_network_members_on_project_id")
    forked_from_project_id                                         Int?
    fork_networks                                                  fork_networks @relation(fields: [fork_network_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a40860a1ca")
    projects_fork_network_members_forked_from_project_idToprojects projects?     @relation("fork_network_members_forked_from_project_idToprojects", fields: [forked_from_project_id], references: [id], onUpdate: NoAction, map: "fk_b01280dae4")
    projects_fork_network_members_project_idToprojects             projects      @relation("fork_network_members_project_idToprojects", fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_efccadc4ec")

    @@index([fork_network_id], map: "index_fork_network_members_on_fork_network_id")
    @@index([forked_from_project_id], map: "index_fork_network_members_on_forked_from_project_id")
}

model fork_networks {
    id                        Int                    @id @default(autoincrement())
    root_project_id           Int?                   @unique(map: "index_fork_networks_on_root_project_id")
    deleted_root_project_name String?                @db.VarChar
    projects                  projects?              @relation(fields: [root_project_id], references: [id], onUpdate: NoAction, map: "fk_e7b436b2b5")
    fork_network_members      fork_network_members[]
}

model geo_cache_invalidation_events {
    id            BigInt          @id @default(autoincrement())
    key           String          @db.VarChar
    geo_event_log geo_event_log[]
}

model geo_container_repository_updated_events {
    id                      BigInt                 @id @default(autoincrement())
    container_repository_id Int
    container_repositories  container_repositories @relation(fields: [container_repository_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_212c89c706")
    geo_event_log           geo_event_log[]

    @@index([container_repository_id], map: "idx_geo_con_rep_updated_events_on_container_repository_id")
}

model geo_event_log {
    id                                      BigInt                                   @id @default(autoincrement())
    created_at                              DateTime                                 @db.Timestamp(6)
    repository_updated_event_id             BigInt?
    repository_deleted_event_id             BigInt?
    repository_renamed_event_id             BigInt?
    repositories_changed_event_id           BigInt?
    repository_created_event_id             BigInt?
    hashed_storage_migrated_event_id        BigInt?
    lfs_object_deleted_event_id             BigInt?
    hashed_storage_attachments_event_id     BigInt?
    job_artifact_deleted_event_id           BigInt?
    reset_checksum_event_id                 BigInt?
    cache_invalidation_event_id             BigInt?
    container_repository_updated_event_id   BigInt?
    geo_event_id                            BigInt?
    geo_cache_invalidation_events           geo_cache_invalidation_events?           @relation(fields: [cache_invalidation_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_42c3b54bed")
    geo_container_repository_updated_events geo_container_repository_updated_events? @relation(fields: [container_repository_updated_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_6ada82d42a")
    geo_events                              geo_events?                              @relation(fields: [geo_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_geo_event_log_on_geo_event_id")
    geo_hashed_storage_migrated_events      geo_hashed_storage_migrated_events?      @relation(fields: [hashed_storage_migrated_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_27548c6db3")
    geo_job_artifact_deleted_events         geo_job_artifact_deleted_events?         @relation(fields: [job_artifact_deleted_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_176d3fbb5d")
    geo_lfs_object_deleted_events           geo_lfs_object_deleted_events?           @relation(fields: [lfs_object_deleted_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d5af95fcd9")
    geo_repositories_changed_events         geo_repositories_changed_events?         @relation(fields: [repositories_changed_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_4a99ebfd60")
    geo_repository_created_events           geo_repository_created_events?           @relation(fields: [repository_created_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_9b9afb1916")
    geo_repository_deleted_events           geo_repository_deleted_events?           @relation(fields: [repository_deleted_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c4b1c1f66e")
    geo_repository_renamed_events           geo_repository_renamed_events?           @relation(fields: [repository_renamed_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_86c84214ec")
    geo_repository_updated_events           geo_repository_updated_events?           @relation(fields: [repository_updated_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_78a6492f68")
    geo_reset_checksum_events               geo_reset_checksum_events?               @relation(fields: [reset_checksum_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cff7185ad2")

    @@index([container_repository_updated_event_id], map: "index_geo_event_log_on_container_repository_updated_event_id")
}

model geo_events {
    id              BigInt          @id @default(autoincrement())
    replicable_name String          @db.VarChar(255)
    event_name      String          @db.VarChar(255)
    payload         Json            @default("{}")
    created_at      DateTime        @db.Timestamptz(6)
    geo_event_log   geo_event_log[]
}

model geo_hashed_storage_attachments_events {
    id                   BigInt   @id @default(autoincrement())
    project_id           Int
    old_attachments_path String
    new_attachments_path String
    projects             projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d496b088e9")

    @@index([project_id], map: "index_geo_hashed_storage_attachments_events_on_project_id")
}

model geo_hashed_storage_migrated_events {
    id                      BigInt          @id @default(autoincrement())
    project_id              Int
    repository_storage_name String
    old_disk_path           String
    new_disk_path           String
    old_wiki_disk_path      String
    new_wiki_disk_path      String
    old_storage_version     Int?            @db.SmallInt
    new_storage_version     Int             @db.SmallInt
    old_design_disk_path    String?
    new_design_disk_path    String?
    projects                projects        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_687ed7d7c5")
    geo_event_log           geo_event_log[]

    @@index([project_id], map: "index_geo_hashed_storage_migrated_events_on_project_id")
}

model geo_job_artifact_deleted_events {
    id              BigInt          @id @default(autoincrement())
    file_path       String          @db.VarChar
    job_artifact_id BigInt
    geo_event_log   geo_event_log[]

    @@index([job_artifact_id], map: "index_geo_job_artifact_deleted_events_on_job_artifact_id")
}

model geo_lfs_object_deleted_events {
    id            BigInt          @id @default(autoincrement())
    lfs_object_id Int
    oid           String          @db.VarChar
    file_path     String          @db.VarChar
    geo_event_log geo_event_log[]

    @@index([lfs_object_id], map: "index_geo_lfs_object_deleted_events_on_lfs_object_id")
}

model geo_node_namespace_links {
    id           Int        @id @default(autoincrement())
    geo_node_id  Int
    namespace_id Int
    created_at   DateTime   @db.Timestamp(6)
    updated_at   DateTime   @db.Timestamp(6)
    geo_nodes    geo_nodes  @relation(fields: [geo_node_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_546bf08d3e")
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_41ff5fb854")

    @@unique([geo_node_id, namespace_id], map: "index_geo_node_namespace_links_on_geo_node_id_and_namespace_id")
    @@index([geo_node_id], map: "index_geo_node_namespace_links_on_geo_node_id")
    @@index([namespace_id], map: "index_geo_node_namespace_links_on_namespace_id")
}

model geo_node_statuses {
    id                                            Int       @id @default(autoincrement())
    geo_node_id                                   Int       @unique(map: "index_geo_node_statuses_on_geo_node_id")
    db_replication_lag_seconds                    Int?
    repositories_synced_count                     Int?
    repositories_failed_count                     Int?
    lfs_objects_count                             Int?
    lfs_objects_synced_count                      Int?
    lfs_objects_failed_count                      Int?
    last_event_id                                 Int?
    last_event_date                               DateTime? @db.Timestamp(6)
    cursor_last_event_id                          Int?
    cursor_last_event_date                        DateTime? @db.Timestamp(6)
    created_at                                    DateTime  @db.Timestamp(6)
    updated_at                                    DateTime  @db.Timestamp(6)
    last_successful_status_check_at               DateTime? @db.Timestamp(6)
    status_message                                String?   @db.VarChar
    replication_slots_count                       Int?
    replication_slots_used_count                  Int?
    replication_slots_max_retained_wal_bytes      BigInt?
    wikis_synced_count                            Int?
    wikis_failed_count                            Int?
    job_artifacts_count                           Int?
    job_artifacts_synced_count                    Int?
    job_artifacts_failed_count                    Int?
    version                                       String?   @db.VarChar
    revision                                      String?   @db.VarChar
    repositories_verified_count                   Int?
    repositories_verification_failed_count        Int?
    wikis_verified_count                          Int?
    wikis_verification_failed_count               Int?
    lfs_objects_synced_missing_on_primary_count   Int?
    job_artifacts_synced_missing_on_primary_count Int?
    repositories_checksummed_count                Int?
    repositories_checksum_failed_count            Int?
    repositories_checksum_mismatch_count          Int?
    wikis_checksummed_count                       Int?
    wikis_checksum_failed_count                   Int?
    wikis_checksum_mismatch_count                 Int?
    storage_configuration_digest                  Bytes?
    repositories_retrying_verification_count      Int?
    wikis_retrying_verification_count             Int?
    projects_count                                Int?
    container_repositories_count                  Int?
    container_repositories_synced_count           Int?
    container_repositories_failed_count           Int?
    container_repositories_registry_count         Int?
    design_repositories_count                     Int?
    design_repositories_synced_count              Int?
    design_repositories_failed_count              Int?
    design_repositories_registry_count            Int?
    status                                        Json      @default("{}")
    geo_nodes                                     geo_nodes @relation(fields: [geo_node_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0ecc699c2a")
}

model geo_nodes {
    id                                  Int                               @id @default(autoincrement())
    primary                             Boolean                           @default(false)
    oauth_application_id                Int?
    enabled                             Boolean                           @default(true)
    access_key                          String?                           @db.VarChar
    encrypted_secret_access_key         String?                           @db.VarChar
    encrypted_secret_access_key_iv      String?                           @db.VarChar
    clone_url_prefix                    String?                           @db.VarChar
    files_max_capacity                  Int                               @default(10)
    repos_max_capacity                  Int                               @default(25)
    url                                 String                            @db.VarChar
    selective_sync_type                 String?                           @db.VarChar
    selective_sync_shards               String?
    verification_max_capacity           Int                               @default(100)
    minimum_reverification_interval     Int                               @default(7)
    internal_url                        String?                           @db.VarChar
    name                                String                            @unique(map: "index_geo_nodes_on_name") @db.VarChar
    container_repositories_max_capacity Int                               @default(10)
    created_at                          DateTime?                         @db.Timestamptz(6)
    updated_at                          DateTime?                         @db.Timestamptz(6)
    sync_object_storage                 Boolean                           @default(false)
    geo_node_namespace_links            geo_node_namespace_links[]
    geo_node_statuses                   geo_node_statuses?
    geo_repositories_changed_events     geo_repositories_changed_events[]

    @@index([access_key], map: "index_geo_nodes_on_access_key")
    @@index([primary], map: "index_geo_nodes_on_primary")
}

model geo_repositories_changed_events {
    id            BigInt          @id @default(autoincrement())
    geo_node_id   Int
    geo_nodes     geo_nodes       @relation(fields: [geo_node_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_75ec0fefcc")
    geo_event_log geo_event_log[]

    @@index([geo_node_id], map: "index_geo_repositories_changed_events_on_geo_node_id")
}

model geo_repository_created_events {
    id                      BigInt          @id @default(autoincrement())
    project_id              Int
    repository_storage_name String
    repo_path               String
    wiki_path               String?
    project_name            String
    projects                projects        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1f49e46a61")
    geo_event_log           geo_event_log[]

    @@index([project_id], map: "index_geo_repository_created_events_on_project_id")
}

model geo_repository_deleted_events {
    id                      BigInt          @id @default(autoincrement())
    project_id              Int
    repository_storage_name String
    deleted_path            String
    deleted_wiki_path       String?
    deleted_project_name    String
    geo_event_log           geo_event_log[]

    @@index([project_id], map: "index_geo_repository_deleted_events_on_project_id")
}

model geo_repository_renamed_events {
    id                           BigInt          @id @default(autoincrement())
    project_id                   Int
    repository_storage_name      String
    old_path_with_namespace      String
    new_path_with_namespace      String
    old_wiki_path_with_namespace String
    new_wiki_path_with_namespace String
    old_path                     String
    new_path                     String
    projects                     projects        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4e6524febb")
    geo_event_log                geo_event_log[]

    @@index([project_id], map: "index_geo_repository_renamed_events_on_project_id")
}

model geo_repository_updated_events {
    id                BigInt          @id @default(autoincrement())
    branches_affected Int
    tags_affected     Int
    project_id        Int
    source            Int             @db.SmallInt
    new_branch        Boolean         @default(false)
    remove_branch     Boolean         @default(false)
    ref               String?
    projects          projects        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2b70854c08")
    geo_event_log     geo_event_log[]

    @@index([project_id], map: "index_geo_repository_updated_events_on_project_id")
    @@index([source], map: "index_geo_repository_updated_events_on_source")
}

model geo_reset_checksum_events {
    id            BigInt          @id @default(autoincrement())
    project_id    Int
    projects      projects        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_910a06f12b")
    geo_event_log geo_event_log[]

    @@index([project_id], map: "index_geo_reset_checksum_events_on_project_id")
}

model gitlab_subscription_histories {
    id                             BigInt    @id @default(autoincrement())
    gitlab_subscription_created_at DateTime? @db.Timestamptz(6)
    gitlab_subscription_updated_at DateTime? @db.Timestamptz(6)
    start_date                     DateTime? @db.Date
    end_date                       DateTime? @db.Date
    trial_ends_on                  DateTime? @db.Date
    namespace_id                   Int?
    hosted_plan_id                 Int?
    max_seats_used                 Int?
    seats                          Int?
    trial                          Boolean?
    change_type                    Int?      @db.SmallInt
    gitlab_subscription_id         BigInt
    created_at                     DateTime? @db.Timestamptz(6)
    trial_starts_on                DateTime? @db.Date
    auto_renew                     Boolean?
    trial_extension_type           Int?      @db.SmallInt

    @@index([gitlab_subscription_id], map: "index_gitlab_subscription_histories_on_gitlab_subscription_id")
}

model gitlab_subscriptions {
    id                   BigInt      @id @default(autoincrement())
    created_at           DateTime    @db.Timestamptz(6)
    updated_at           DateTime    @db.Timestamptz(6)
    start_date           DateTime?   @db.Date
    end_date             DateTime?   @db.Date
    trial_ends_on        DateTime?   @db.Date
    namespace_id         Int?        @unique(map: "index_gitlab_subscriptions_on_namespace_id")
    hosted_plan_id       Int?
    max_seats_used       Int?        @default(0)
    seats                Int?        @default(0)
    trial                Boolean?    @default(false)
    trial_starts_on      DateTime?   @db.Date
    auto_renew           Boolean?
    seats_in_use         Int         @default(0)
    seats_owed           Int         @default(0)
    trial_extension_type Int?        @db.SmallInt
    plans                plans?      @relation(fields: [hosted_plan_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_bd0c4019c3")
    namespaces           namespaces? @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_e2595d00a1")

    @@index([end_date, namespace_id], map: "index_gitlab_subscriptions_on_end_date_and_namespace_id")
    @@index([hosted_plan_id], map: "index_gitlab_subscriptions_on_hosted_plan_id")
}

model gpg_key_subkeys {
    id             Int              @id @default(autoincrement())
    gpg_key_id     Int
    keyid          Bytes?           @unique(map: "index_gpg_key_subkeys_on_keyid")
    fingerprint    Bytes?           @unique(map: "index_gpg_key_subkeys_on_fingerprint")
    gpg_keys       gpg_keys         @relation(fields: [gpg_key_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8b2c90b046")
    gpg_signatures gpg_signatures[]

    @@index([gpg_key_id], map: "index_gpg_key_subkeys_on_gpg_key_id")
}

model gpg_keys {
    id              Int               @id @default(autoincrement())
    created_at      DateTime          @db.Timestamptz(6)
    updated_at      DateTime          @db.Timestamptz(6)
    user_id         Int?
    primary_keyid   Bytes?            @unique(map: "index_gpg_keys_on_primary_keyid")
    fingerprint     Bytes?            @unique(map: "index_gpg_keys_on_fingerprint")
    key             String?
    users           users?            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9d1f5d8719")
    gpg_key_subkeys gpg_key_subkeys[]
    gpg_signatures  gpg_signatures[]

    @@index([user_id], map: "index_gpg_keys_on_user_id")
}

model gpg_signatures {
    id                    Int              @id @default(autoincrement())
    created_at            DateTime         @db.Timestamptz(6)
    updated_at            DateTime         @db.Timestamptz(6)
    project_id            Int?
    gpg_key_id            Int?
    commit_sha            Bytes?           @unique(map: "index_gpg_signatures_on_commit_sha")
    gpg_key_primary_keyid Bytes?
    gpg_key_user_name     String?
    gpg_key_user_email    String?
    verification_status   Int              @default(0) @db.SmallInt
    gpg_key_subkey_id     Int?
    gpg_keys              gpg_keys?        @relation(fields: [gpg_key_id], references: [id], onUpdate: NoAction, map: "fk_rails_c97176f5f7")
    gpg_key_subkeys       gpg_key_subkeys? @relation(fields: [gpg_key_subkey_id], references: [id], onUpdate: NoAction, map: "fk_rails_19d4f1c6f9")
    projects              projects?        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_11ae8cb9a7")

    @@index([gpg_key_id], map: "index_gpg_signatures_on_gpg_key_id")
    @@index([gpg_key_primary_keyid], map: "index_gpg_signatures_on_gpg_key_primary_keyid")
    @@index([gpg_key_subkey_id], map: "index_gpg_signatures_on_gpg_key_subkey_id")
    @@index([project_id], map: "index_gpg_signatures_on_project_id")
}

model grafana_integrations {
    id                 BigInt   @id @default(autoincrement())
    project_id         Int
    created_at         DateTime @db.Timestamptz(6)
    updated_at         DateTime @db.Timestamptz(6)
    encrypted_token    String   @db.VarChar(255)
    encrypted_token_iv String   @db.VarChar(255)
    grafana_url        String   @db.VarChar(1024)
    enabled            Boolean  @default(false)
    projects           projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_18d0e2b564")

    @@index([project_id], map: "index_grafana_integrations_on_project_id")
}

model group_crm_settings {
    group_id   Int        @id @default(autoincrement())
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    enabled    Boolean    @default(false)
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_74fdf2f13d")

    @@index([group_id], map: "index_group_crm_settings_on_group_id")
}

model group_custom_attributes {
    id         Int        @id @default(autoincrement())
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    group_id   Int
    key        String     @db.VarChar
    value      String     @db.VarChar
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_246e0db83a")

    @@unique([group_id, key], map: "index_group_custom_attributes_on_group_id_and_key")
    @@index([key, value], map: "index_group_custom_attributes_on_key_and_value")
}

model group_deletion_schedules {
    group_id               Int        @id
    user_id                Int
    marked_for_deletion_on DateTime   @db.Date
    namespaces             namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4b8c694a6c")
    users                  users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_11e3ebfcdd")

    @@index([marked_for_deletion_on], map: "index_group_deletion_schedules_on_marked_for_deletion_on")
    @@index([user_id], map: "index_group_deletion_schedules_on_user_id")
}

model group_deploy_keys {
    id                       BigInt                     @id @default(autoincrement())
    user_id                  Int?
    created_at               DateTime                   @db.Timestamptz(6)
    updated_at               DateTime                   @db.Timestamptz(6)
    last_used_at             DateTime?                  @db.Timestamptz(6)
    expires_at               DateTime?                  @db.Timestamptz(6)
    key                      String
    title                    String?
    fingerprint              String                     @unique(map: "index_group_deploy_keys_on_fingerprint")
    fingerprint_sha256       Bytes?
    users                    users?                     @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "fk_rails_5682fc07f8")
    group_deploy_keys_groups group_deploy_keys_groups[]

    @@index([fingerprint_sha256], map: "index_group_deploy_keys_on_fingerprint_sha256")
    @@index([user_id], map: "index_group_deploy_keys_on_user_id")
}

model group_deploy_keys_groups {
    id                  BigInt            @id @default(autoincrement())
    created_at          DateTime          @db.Timestamptz(6)
    updated_at          DateTime          @db.Timestamptz(6)
    group_id            Int
    group_deploy_key_id BigInt
    can_push            Boolean           @default(false)
    group_deploy_keys   group_deploy_keys @relation(fields: [group_deploy_key_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c3854f19f5")
    namespaces          namespaces        @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e87145115d")

    @@unique([group_id, group_deploy_key_id], map: "index_group_deploy_keys_group_on_group_deploy_key_and_group_ids")
    @@index([group_deploy_key_id], map: "index_group_deploy_keys_groups_on_group_deploy_key_id")
}

model group_deploy_tokens {
    id              BigInt        @id @default(autoincrement())
    created_at      DateTime      @db.Timestamptz(6)
    updated_at      DateTime      @db.Timestamptz(6)
    group_id        Int
    deploy_token_id Int
    deploy_tokens   deploy_tokens @relation(fields: [deploy_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6477b01f6b")
    namespaces      namespaces    @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_61a572b41a")

    @@unique([group_id, deploy_token_id], map: "index_group_deploy_tokens_on_group_and_deploy_token_ids")
    @@index([deploy_token_id], map: "index_group_deploy_tokens_on_deploy_token_id")
}

model group_group_links {
    id                                                            BigInt     @id @default(autoincrement())
    created_at                                                    DateTime   @db.Timestamptz(6)
    updated_at                                                    DateTime   @db.Timestamptz(6)
    shared_group_id                                               Int
    shared_with_group_id                                          Int
    expires_at                                                    DateTime?  @db.Date
    group_access                                                  Int        @default(30) @db.SmallInt
    namespaces_group_group_links_shared_group_idTonamespaces      namespaces @relation("group_group_links_shared_group_idTonamespaces", fields: [shared_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d3a0488427")
    namespaces_group_group_links_shared_with_group_idTonamespaces namespaces @relation("group_group_links_shared_with_group_idTonamespaces", fields: [shared_with_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2b2353ca49")

    @@unique([shared_group_id, shared_with_group_id], map: "index_group_group_links_on_shared_group_and_shared_with_group")
    @@index([shared_with_group_id], map: "index_group_group_links_on_shared_with_group_id")
}

model group_import_states {
    group_id   Int        @id @default(autoincrement())
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    status     Int        @default(0) @db.SmallInt
    jid        String?
    last_error String?
    user_id    Int?
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_31c3e0503a")
    users      users?     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_8053b3ebd6")

    @@index([group_id], map: "index_group_import_states_on_group_id")
}

model group_merge_request_approval_settings {
    created_at                                         DateTime   @db.Timestamptz(6)
    updated_at                                         DateTime   @db.Timestamptz(6)
    group_id                                           Int        @id
    allow_author_approval                              Boolean    @default(false)
    allow_committer_approval                           Boolean    @default(false)
    allow_overrides_to_approver_list_per_merge_request Boolean    @default(false)
    retain_approvals_on_push                           Boolean    @default(false)
    require_password_to_approve                        Boolean    @default(false)
    namespaces                                         namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_37b6b4cdba")
}

model group_repository_storage_moves {
    id                       BigInt     @id @default(autoincrement())
    created_at               DateTime   @db.Timestamptz(6)
    updated_at               DateTime   @db.Timestamptz(6)
    group_id                 Int
    state                    Int        @default(1) @db.SmallInt
    source_storage_name      String
    destination_storage_name String
    namespaces               namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_982bb5daf1")

    @@index([group_id], map: "index_group_repository_storage_moves_on_group_id")
}

model group_wiki_repositories {
    shard_id   Int
    group_id   Int        @id
    disk_path  String     @unique(map: "index_group_wiki_repositories_on_disk_path")
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_26f867598c")
    shards     shards     @relation(fields: [shard_id], references: [id], onUpdate: NoAction, map: "fk_rails_19755e374b")

    @@index([shard_id], map: "index_group_wiki_repositories_on_shard_id")
}

model historical_data {
    id                Int       @id @default(autoincrement())
    date              DateTime? @db.Date
    active_user_count Int?
    created_at        DateTime? @db.Timestamp(6)
    updated_at        DateTime? @db.Timestamp(6)
    recorded_at       DateTime? @db.Timestamptz(6)

    @@index([recorded_at], map: "index_historical_data_on_recorded_at")
}

model identities {
    id                   Int             @id @default(autoincrement())
    extern_uid           String?         @db.VarChar
    provider             String?         @db.VarChar
    user_id              Int?
    created_at           DateTime?       @db.Timestamp(6)
    updated_at           DateTime?       @db.Timestamp(6)
    secondary_extern_uid String?         @db.VarChar
    saml_provider_id     Int?
    saml_providers       saml_providers? @relation(fields: [saml_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_aade90f0fc")

    @@index([user_id], map: "index_identities_on_user_id")
    @@index([provider], map: "index_on_identities_lower_extern_uid_and_provider")
}

model import_export_uploads {
    id                Int         @id @default(autoincrement())
    updated_at        DateTime    @db.Timestamptz(6)
    project_id        Int?
    import_file       String?
    export_file       String?
    group_id          Int?
    remote_import_url String?
    namespaces        namespaces? @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_83319d9721")
    projects          projects?   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f129140f9e")

    @@index([project_id], map: "index_import_export_uploads_on_project_id")
    @@index([updated_at], map: "index_import_export_uploads_on_updated_at")
}

model import_failures {
    id                   BigInt      @id @default(autoincrement())
    relation_index       Int?
    project_id           BigInt?
    created_at           DateTime    @db.Timestamptz(6)
    relation_key         String?     @db.VarChar(64)
    exception_class      String?     @db.VarChar(128)
    correlation_id_value String?     @db.VarChar(128)
    exception_message    String?     @db.VarChar(255)
    retry_count          Int?
    group_id             Int?
    source               String?     @db.VarChar(128)
    namespaces           namespaces? @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_24b824da43")

    @@index([correlation_id_value], map: "index_import_failures_on_correlation_id_value")
}

model in_product_marketing_emails {
    id             BigInt    @id @default(autoincrement())
    user_id        Int
    cta_clicked_at DateTime? @db.Timestamptz(6)
    track          Int       @db.SmallInt
    series         Int       @db.SmallInt
    created_at     DateTime  @db.Timestamptz(6)
    updated_at     DateTime  @db.Timestamptz(6)
    users          users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_35c9101b63")

    @@unique([user_id, track, series], map: "index_in_product_marketing_emails_on_user_track_series")
    @@index([user_id], map: "index_in_product_marketing_emails_on_user_id")
}

model incident_management_escalation_policies {
    id                                               BigInt                                             @id @default(autoincrement())
    project_id                                       Int
    name                                             String
    description                                      String?
    projects                                         projects                                           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e5b513daa7")
    incident_management_escalation_rules             incident_management_escalation_rules[]
    incident_management_issuable_escalation_statuses incident_management_issuable_escalation_statuses[]

    @@unique([project_id, name], map: "index_on_project_id_escalation_policy_name_unique")
}

model incident_management_escalation_rules {
    id                                            BigInt                                          @id @default(autoincrement())
    policy_id                                     BigInt
    oncall_schedule_id                            BigInt?
    status                                        Int                                             @db.SmallInt
    elapsed_time_seconds                          Int
    is_removed                                    Boolean                                         @default(false)
    user_id                                       Int?
    incident_management_oncall_schedules          incident_management_oncall_schedules?           @relation(fields: [oncall_schedule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b3c9c17bd4")
    incident_management_escalation_policies       incident_management_escalation_policies         @relation(fields: [policy_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_17dbea07a6")
    users                                         users?                                          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0314ee86eb")
    incident_management_pending_alert_escalations incident_management_pending_alert_escalations[] @ignore
    incident_management_pending_issue_escalations incident_management_pending_issue_escalations[] @ignore

    @@unique([policy_id, oncall_schedule_id, status, elapsed_time_seconds, user_id], map: "index_escalation_rules_on_all_attributes")
    @@index([user_id], map: "index_escalation_rules_on_user")
    @@index([oncall_schedule_id], map: "index_on_oncall_schedule_escalation_rule")
}

model incident_management_issuable_escalation_statuses {
    id                                      BigInt                                   @id @default(autoincrement())
    created_at                              DateTime                                 @db.Timestamptz(6)
    updated_at                              DateTime                                 @db.Timestamptz(6)
    issue_id                                Int                                      @unique(map: "index_uniq_im_issuable_escalation_statuses_on_issue_id")
    policy_id                               BigInt?
    escalations_started_at                  DateTime?                                @db.Timestamptz(6)
    resolved_at                             DateTime?                                @db.Timestamptz(6)
    status                                  Int                                      @default(0) @db.SmallInt
    issues                                  issues                                   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f4c811fd28")
    incident_management_escalation_policies incident_management_escalation_policies? @relation(fields: [policy_id], references: [id], onUpdate: NoAction, map: "fk_rails_29abffe3b9")

    @@index([policy_id], map: "index_im_issuable_escalation_statuses_on_policy_id")
}

model incident_management_oncall_participants {
    id                                   BigInt                               @id @default(autoincrement())
    oncall_rotation_id                   BigInt
    user_id                              Int
    color_palette                        Int                                  @db.SmallInt
    color_weight                         Int                                  @db.SmallInt
    is_removed                           Boolean                              @default(false)
    incident_management_oncall_rotations incident_management_oncall_rotations @relation(fields: [oncall_rotation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_032b12996a")
    users                                users                                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5fe86ea341")
    incident_management_oncall_shifts    incident_management_oncall_shifts[]

    @@unique([user_id, oncall_rotation_id], map: "index_inc_mgmnt_oncall_participants_on_user_id_and_rotation_id")
    @@index([user_id], map: "index_inc_mgmnt_oncall_participants_on_oncall_user_id")
    @@index([oncall_rotation_id, is_removed], map: "index_inc_mgmnt_oncall_pcpnt_on_oncall_rotation_id_is_removed")
}

model incident_management_oncall_rotations {
    id                                      BigInt                                    @id @default(autoincrement())
    created_at                              DateTime                                  @db.Timestamptz(6)
    updated_at                              DateTime                                  @db.Timestamptz(6)
    oncall_schedule_id                      BigInt
    length                                  Int
    length_unit                             Int                                       @db.SmallInt
    starts_at                               DateTime                                  @db.Timestamptz(6)
    name                                    String
    ends_at                                 DateTime?                                 @db.Timestamptz(6)
    active_period_start                     DateTime?                                 @db.Time(6)
    active_period_end                       DateTime?                                 @db.Time(6)
    incident_management_oncall_schedules    incident_management_oncall_schedules      @relation(fields: [oncall_schedule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_256e0bc604")
    incident_management_oncall_participants incident_management_oncall_participants[]
    incident_management_oncall_shifts       incident_management_oncall_shifts[]

    @@unique([oncall_schedule_id, id], map: "index_inc_mgmnt_oncall_rotations_on_oncall_schedule_id_and_id")
    @@unique([oncall_schedule_id, name], map: "index_inc_mgmnt_oncall_rotations_on_oncall_schedule_id_and_name")
}

model incident_management_oncall_schedules {
    id                                   BigInt                                 @id @default(autoincrement())
    created_at                           DateTime                               @db.Timestamptz(6)
    updated_at                           DateTime                               @db.Timestamptz(6)
    project_id                           Int
    iid                                  Int
    name                                 String
    description                          String?
    timezone                             String?
    projects                             projects                               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_19e83fdd65")
    incident_management_escalation_rules incident_management_escalation_rules[]
    incident_management_oncall_rotations incident_management_oncall_rotations[]

    @@unique([project_id, iid], map: "index_im_oncall_schedules_on_project_id_and_iid")
    @@index([project_id], map: "index_incident_management_oncall_schedules_on_project_id")
}

model incident_management_oncall_shifts {
    id                                      BigInt                                  @id @default(autoincrement())
    rotation_id                             BigInt
    participant_id                          BigInt
    starts_at                               DateTime                                @db.Timestamptz(6)
    ends_at                                 DateTime                                @db.Timestamptz(6)
    incident_management_oncall_participants incident_management_oncall_participants @relation(fields: [participant_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f6eef06841")
    incident_management_oncall_rotations    incident_management_oncall_rotations    @relation(fields: [rotation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_df4feb286a")

    @@index([rotation_id], map: "inc_mgmnt_no_overlapping_oncall_shifts")
    @@index([participant_id], map: "index_incident_management_oncall_shifts_on_participant_id")
    @@index([rotation_id, starts_at, ends_at], map: "index_oncall_shifts_on_rotation_id_and_starts_at_and_ends_at")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model incident_management_pending_alert_escalations {
    id                                   BigInt                               @default(autoincrement())
    rule_id                              BigInt
    alert_id                             BigInt
    process_at                           DateTime                             @db.Timestamptz(6)
    created_at                           DateTime                             @db.Timestamptz(6)
    updated_at                           DateTime                             @db.Timestamptz(6)
    alert_management_alerts              alert_management_alerts              @relation(fields: [alert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8d8de95da9")
    incident_management_escalation_rules incident_management_escalation_rules @relation(fields: [rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f3d17bc8af")

    @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model incident_management_pending_issue_escalations {
    id                                   BigInt                               @default(autoincrement())
    rule_id                              BigInt
    issue_id                             Int
    process_at                           DateTime                             @db.Timestamptz(6)
    created_at                           DateTime                             @db.Timestamptz(6)
    updated_at                           DateTime                             @db.Timestamptz(6)
    issues                               issues                               @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_636678b3bd")
    incident_management_escalation_rules incident_management_escalation_rules @relation(fields: [rule_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0470889ee5")

    @@ignore
}

model incident_management_timeline_events {
    id                                                                  BigInt   @id @default(autoincrement())
    created_at                                                          DateTime @db.Timestamptz(6)
    updated_at                                                          DateTime @db.Timestamptz(6)
    occurred_at                                                         DateTime @db.Timestamptz(6)
    project_id                                                          Int
    author_id                                                           Int?
    issue_id                                                            Int
    updated_by_user_id                                                  Int?
    promoted_from_note_id                                               Int?
    cached_markdown_version                                             Int?
    editable                                                            Boolean  @default(false)
    note                                                                String
    note_html                                                           String
    action                                                              String
    users_incident_management_timeline_events_author_idTousers          users?   @relation("incident_management_timeline_events_author_idTousers", fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_1800597ef9")
    issues                                                              issues   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_17a5fafbd4")
    projects                                                            projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_4432fc4d78")
    notes                                                               notes?   @relation(fields: [promoted_from_note_id], references: [id], onUpdate: NoAction, map: "fk_d606a2a890")
    users_incident_management_timeline_events_updated_by_user_idTousers users?   @relation("incident_management_timeline_events_updated_by_user_idTousers", fields: [updated_by_user_id], references: [id], onUpdate: NoAction, map: "fk_38a74279df")

    @@index([author_id], map: "index_im_timeline_events_author_id")
    @@index([issue_id], map: "index_im_timeline_events_issue_id")
    @@index([project_id], map: "index_im_timeline_events_project_id")
    @@index([promoted_from_note_id], map: "index_im_timeline_events_promoted_from_note_id")
    @@index([updated_by_user_id], map: "index_im_timeline_events_updated_by_user_id")
}

model index_statuses {
    id               Int       @id @default(autoincrement())
    project_id       Int       @unique(map: "index_index_statuses_on_project_id")
    indexed_at       DateTime? @db.Timestamp(6)
    note             String?
    last_commit      String?   @db.VarChar
    created_at       DateTime  @db.Timestamp(6)
    updated_at       DateTime  @db.Timestamp(6)
    last_wiki_commit Bytes?
    wiki_indexed_at  DateTime? @db.Timestamptz(6)
    projects         projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_74b2492545")
}

model insights {
    id           Int        @id @default(autoincrement())
    namespace_id Int
    project_id   Int
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5c4391f60a")
    projects     projects   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f36fda3932")

    @@index([namespace_id], map: "index_insights_on_namespace_id")
    @@index([project_id], map: "index_insights_on_project_id")
}

model integrations {
    id                         Int                   @id @default(autoincrement())
    type                       String?               @db.VarChar
    project_id                 Int?
    created_at                 DateTime?             @db.Timestamp(6)
    updated_at                 DateTime?             @db.Timestamp(6)
    active                     Boolean               @default(false)
    properties                 String?
    push_events                Boolean?              @default(true)
    issues_events              Boolean?              @default(true)
    merge_requests_events      Boolean?              @default(true)
    tag_push_events            Boolean?              @default(true)
    note_events                Boolean               @default(true)
    category                   String                @default("common") @db.VarChar
    wiki_page_events           Boolean?              @default(true)
    pipeline_events            Boolean               @default(false)
    confidential_issues_events Boolean               @default(true)
    commit_events              Boolean               @default(true)
    job_events                 Boolean               @default(false)
    confidential_note_events   Boolean?              @default(true)
    deployment_events          Boolean               @default(false)
    comment_on_event_enabled   Boolean               @default(true)
    template                   Boolean?              @default(false)
    instance                   Boolean               @default(false)
    comment_detail             Int?                  @db.SmallInt
    inherit_from_id            Int?
    alert_events               Boolean?
    group_id                   Int?
    type_new                   String?
    vulnerability_events       Boolean               @default(false)
    archive_trace_events       Boolean               @default(false)
    encrypted_properties       Bytes?
    encrypted_properties_iv    Bytes?
    namespaces                 namespaces?           @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_e8fe908a34")
    integrations               integrations?         @relation("integrationsTointegrations_inherit_from_id", fields: [inherit_from_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_services_inherit_from_id")
    projects                   projects?             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_71cce407f9")
    chat_names                 chat_names[]
    other_integrations         integrations[]        @relation("integrationsTointegrations_inherit_from_id")
    issue_tracker_data         issue_tracker_data[]
    jira_tracker_data          jira_tracker_data[]
    slack_integrations         slack_integrations[]
    web_hooks                  web_hooks[]
    zentao_tracker_data        zentao_tracker_data[]

    @@unique([project_id, type_new], map: "index_integrations_on_project_id_and_type_new_unique")
    @@unique([project_id, type], map: "index_integrations_on_project_id_and_type_unique")
    @@unique([group_id, type], map: "index_integrations_on_unique_group_id_and_type")
    @@index([inherit_from_id], map: "index_integrations_on_inherit_from_id")
    @@index([template], map: "index_integrations_on_template")
    @@index([type], map: "index_integrations_on_type")
    @@index([type_new], map: "index_integrations_on_type_new")
    @@index([group_id, type_new], map: "index_integrations_on_unique_group_id_and_type_new")
}

model internal_ids {
    id           BigInt      @id @default(autoincrement())
    project_id   Int?
    usage        Int
    last_value   Int
    namespace_id Int?
    namespaces   namespaces? @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_162941d509")
    projects     projects?   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f7d46b66c6")

    @@index([namespace_id], map: "index_internal_ids_on_namespace_id")
    @@index([project_id], map: "index_internal_ids_on_project_id")
}

model ip_restrictions {
    id         BigInt     @id @default(autoincrement())
    group_id   Int
    range      String     @db.VarChar
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_04a93778d5")

    @@index([group_id], map: "index_ip_restrictions_on_group_id")
}

model issuable_metric_images {
    id         BigInt   @id @default(autoincrement())
    issue_id   Int
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    file_store Int?     @db.SmallInt
    file       String
    url        String?
    url_text   String?
    issues     issues   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_56417a5a7f")

    @@index([issue_id], map: "index_issuable_metric_images_on_issue_id")
}

model issuable_severities {
    id       BigInt @id @default(autoincrement())
    issue_id Int    @unique(map: "index_issuable_severities_on_issue_id")
    severity Int    @default(0) @db.SmallInt
    issues   issues @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2fbb74ad6d")
}

model issuable_slas {
    id              BigInt   @id @default(autoincrement())
    issue_id        Int      @unique(map: "index_issuable_slas_on_issue_id")
    due_at          DateTime @db.Timestamptz(6)
    label_applied   Boolean  @default(false)
    issuable_closed Boolean  @default(false)
    issues          issues   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1b8768cd63")
}

model issue_assignees {
    user_id  Int
    issue_id Int
    issues   issues @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b7d881734a")
    users    users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_5e0c8d9154")

    @@id([issue_id, user_id])
    @@index([user_id], map: "index_issue_assignees_on_user_id")
}

model issue_customer_relations_contacts {
    id                          BigInt                      @id @default(autoincrement())
    issue_id                    Int
    contact_id                  BigInt
    created_at                  DateTime                    @db.Timestamptz(6)
    updated_at                  DateTime                    @db.Timestamptz(6)
    customer_relations_contacts customer_relations_contacts @relation(fields: [contact_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_7b92f835bb")
    issues                      issues                      @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0c0037f723")

    @@unique([issue_id, contact_id], map: "index_issue_crm_contacts_on_issue_id_and_contact_id")
    @@index([contact_id], map: "index_issue_customer_relations_contacts_on_contact_id")
}

model issue_email_participants {
    id         BigInt   @id @default(autoincrement())
    issue_id   Int      @unique(map: "index_issue_email_participants_on_issue_id_and_lower_email")
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    email      String
    issues     issues   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0fdfd8b811")
}

model issue_emails {
    id               BigInt @id @default(autoincrement())
    issue_id         Int
    email_message_id String
    issues           issues @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e2ee00a8f7")

    @@index([email_message_id], map: "index_issue_emails_on_email_message_id")
    @@index([issue_id], map: "index_issue_emails_on_issue_id")
}

model issue_links {
    id                                   Int       @id @default(autoincrement())
    source_id                            Int
    target_id                            Int
    created_at                           DateTime? @db.Timestamp(6)
    updated_at                           DateTime? @db.Timestamp(6)
    link_type                            Int       @default(0) @db.SmallInt
    issues_issue_links_source_idToissues issues    @relation("issue_links_source_idToissues", fields: [source_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c900194ff2")
    issues_issue_links_target_idToissues issues    @relation("issue_links_target_idToissues", fields: [target_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_e71bb44f1f")

    @@unique([source_id, target_id], map: "index_issue_links_on_source_id_and_target_id")
    @@index([source_id], map: "index_issue_links_on_source_id")
    @@index([target_id], map: "index_issue_links_on_target_id")
}

model issue_metrics {
    id                                 Int       @id @default(autoincrement())
    issue_id                           Int       @unique(map: "index_unique_issue_metrics_issue_id")
    first_mentioned_in_commit_at       DateTime? @db.Timestamp(6)
    first_associated_with_milestone_at DateTime? @db.Timestamp(6)
    first_added_to_board_at            DateTime? @db.Timestamp(6)
    created_at                         DateTime  @db.Timestamp(6)
    updated_at                         DateTime  @db.Timestamp(6)
    issues                             issues    @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4bb543d85d")

    @@index([issue_id, first_mentioned_in_commit_at, first_associated_with_milestone_at, first_added_to_board_at], map: "index_issue_metrics_on_issue_id_and_timestamps")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model issue_search_data {
    project_id    Int
    issue_id      Int
    created_at    DateTime                 @default(now()) @db.Timestamptz(6)
    updated_at    DateTime                 @default(now()) @db.Timestamptz(6)
    search_vector Unsupported("tsvector")?
    issues        issues                   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
    projects      projects                 @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@ignore
}

model issue_tracker_data {
    id                         BigInt       @id @default(autoincrement())
    service_id                 Int
    created_at                 DateTime     @db.Timestamptz(6)
    updated_at                 DateTime     @db.Timestamptz(6)
    encrypted_project_url      String?      @db.VarChar
    encrypted_project_url_iv   String?      @db.VarChar
    encrypted_issues_url       String?      @db.VarChar
    encrypted_issues_url_iv    String?      @db.VarChar
    encrypted_new_issue_url    String?      @db.VarChar
    encrypted_new_issue_url_iv String?      @db.VarChar
    integrations               integrations @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ccc0840427")

    @@index([service_id], map: "index_issue_tracker_data_on_service_id")
}

model issue_user_mentions {
    id                     BigInt @id @default(autoincrement())
    issue_id               Int
    note_id                Int?
    mentioned_users_ids    Int[]
    mentioned_projects_ids Int[]
    mentioned_groups_ids   Int[]
    issues                 issues @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_57581fda73")
    notes                  notes? @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3861d9fefa")

    @@unique([issue_id, note_id], map: "issue_user_mentions_on_issue_id_and_note_id_index")
}

model issues {
    id                                               Int                                               @id @default(autoincrement())
    title                                            String?                                           @db.VarChar
    author_id                                        Int?
    project_id                                       Int?
    created_at                                       DateTime?                                         @db.Timestamp(6)
    updated_at                                       DateTime?                                         @db.Timestamp(6)
    description                                      String?
    milestone_id                                     Int?
    iid                                              Int?
    updated_by_id                                    Int?
    weight                                           Int?
    confidential                                     Boolean                                           @default(false)
    due_date                                         DateTime?                                         @db.Date
    moved_to_id                                      Int?
    lock_version                                     Int?                                              @default(0)
    title_html                                       String?
    description_html                                 String?
    time_estimate                                    Int?
    relative_position                                Int?
    service_desk_reply_to                            String?                                           @db.VarChar
    cached_markdown_version                          Int?
    last_edited_at                                   DateTime?                                         @db.Timestamp(6)
    last_edited_by_id                                Int?
    discussion_locked                                Boolean?
    closed_at                                        DateTime?                                         @db.Timestamptz(6)
    closed_by_id                                     Int?
    state_id                                         Int                                               @default(1) @db.SmallInt
    duplicated_to_id                                 Int?
    promoted_to_epic_id                              Int?
    health_status                                    Int?                                              @db.SmallInt
    external_key                                     String?                                           @db.VarChar(255)
    sprint_id                                        BigInt?
    issue_type                                       Int                                               @default(0) @db.SmallInt
    blocking_issues_count                            Int                                               @default(0)
    upvotes_count                                    Int                                               @default(0)
    work_item_type_id                                BigInt?
    users_issues_author_idTousers                    users?                                            @relation("issues_author_idTousers", fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_05f1e72feb")
    users_issues_closed_by_idTousers                 users?                                            @relation("issues_closed_by_idTousers", fields: [closed_by_id], references: [id], onUpdate: NoAction, map: "fk_c63cbf6c25")
    issues_issuesToissues_duplicated_to_id           issues?                                           @relation("issuesToissues_duplicated_to_id", fields: [duplicated_to_id], references: [id], onUpdate: NoAction, map: "fk_9c4516d665")
    milestones                                       milestones?                                       @relation(fields: [milestone_id], references: [id], onUpdate: NoAction, map: "fk_96b1dd429c")
    issues_issuesToissues_moved_to_id                issues?                                           @relation("issuesToissues_moved_to_id", fields: [moved_to_id], references: [id], onUpdate: NoAction, map: "fk_a194299be1")
    projects                                         projects?                                         @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_899c8f3231")
    epics                                            epics?                                            @relation(fields: [promoted_to_epic_id], references: [id], onUpdate: NoAction, map: "fk_df75a7c8b8")
    sprints                                          sprints?                                          @relation(fields: [sprint_id], references: [id], onUpdate: NoAction, map: "fk_3b8c72ea56")
    users_issues_updated_by_idTousers                users?                                            @relation("issues_updated_by_idTousers", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "fk_ffed080f01")
    work_item_types                                  work_item_types?                                  @relation(fields: [work_item_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_b37be69be6")
    alert_management_alerts                          alert_management_alerts[]
    description_versions                             description_versions[]
    design_management_designs                        design_management_designs[]
    design_management_versions                       design_management_versions[]
    epic_issues                                      epic_issues?
    incident_management_issuable_escalation_statuses incident_management_issuable_escalation_statuses?
    incident_management_pending_issue_escalations    incident_management_pending_issue_escalations[]   @ignore
    incident_management_timeline_events              incident_management_timeline_events[]
    issuable_metric_images                           issuable_metric_images[]
    issuable_severities                              issuable_severities?
    issuable_slas                                    issuable_slas?
    issue_assignees                                  issue_assignees[]
    issue_customer_relations_contacts                issue_customer_relations_contacts[]
    issue_email_participants                         issue_email_participants?
    issue_emails                                     issue_emails[]
    issue_links_issue_links_source_idToissues        issue_links[]                                     @relation("issue_links_source_idToissues")
    issue_links_issue_links_target_idToissues        issue_links[]                                     @relation("issue_links_target_idToissues")
    issue_metrics                                    issue_metrics?
    issue_search_data                                issue_search_data[]                               @ignore
    issue_user_mentions                              issue_user_mentions[]
    other_issues_issuesToissues_duplicated_to_id     issues[]                                          @relation("issuesToissues_duplicated_to_id")
    other_issues_issuesToissues_moved_to_id          issues[]                                          @relation("issuesToissues_moved_to_id")
    issues_prometheus_alert_events                   issues_prometheus_alert_events[]
    issues_self_managed_prometheus_alert_events      issues_self_managed_prometheus_alert_events[]
    merge_requests_closing_issues                    merge_requests_closing_issues[]
    operations_feature_flags_issues                  operations_feature_flags_issues[]
    requirements                                     requirements?
    requirements_management_test_reports             requirements_management_test_reports[]
    resource_iteration_events                        resource_iteration_events[]
    resource_label_events                            resource_label_events[]
    resource_milestone_events                        resource_milestone_events[]
    resource_state_events                            resource_state_events[]
    resource_weight_events                           resource_weight_events[]
    sentry_issues                                    sentry_issues?
    status_page_published_incidents                  status_page_published_incidents?
    timelogs                                         timelogs[]
    vulnerability_feedback                           vulnerability_feedback[]
    vulnerability_issue_links                        vulnerability_issue_links[]
    zoom_meetings                                    zoom_meetings[]

    @@unique([project_id, iid], map: "index_issues_on_project_id_and_iid")
    @@index([project_id, created_at, id, state_id], map: "idx_issues_on_project_id_and_created_at_and_id_and_state_id")
    @@index([project_id, relative_position, id, state_id], map: "idx_issues_on_project_id_and_rel_position_and_id_and_state_id")
    @@index([project_id, updated_at, id, state_id], map: "idx_issues_on_project_id_and_updated_at_and_id_and_state_id")
    @@index([state_id], map: "idx_issues_on_state_id")
    @@index([project_id, state_id, blocking_issues_count], map: "index_issue_on_project_id_state_id_and_blocking_issues_count")
    @@index([author_id], map: "index_issues_on_author_id")
    @@index([author_id, id, created_at], map: "index_issues_on_author_id_and_id_and_created_at")
    @@index([closed_by_id], map: "index_issues_on_closed_by_id")
    @@index([confidential], map: "index_issues_on_confidential")
    @@index([description], map: "index_issues_on_description_trigram")
    @@index([id, weight], map: "index_issues_on_id_and_weight")
    @@index([last_edited_by_id], map: "index_issues_on_last_edited_by_id")
    @@index([milestone_id], map: "index_issues_on_milestone_id")
    @@index([project_id, closed_at], map: "index_issues_on_project_id_and_closed_at")
    @@index([project_id, state_id, created_at, id], map: "index_issues_on_project_id_and_state_id_and_created_at_and_id")
    @@index([project_id, upvotes_count], map: "index_issues_on_project_id_and_upvotes_count")
    @@index([sprint_id], map: "index_issues_on_sprint_id")
    @@index([title], map: "index_issues_on_title_trigram")
    @@index([updated_at], map: "index_issues_on_updated_at")
    @@index([issue_type, id], map: "tmp_index_issues_on_issue_type_and_id")
}

model issues_prometheus_alert_events {
    issue_id                  Int
    prometheus_alert_event_id BigInt
    created_at                DateTime                @db.Timestamptz(6)
    updated_at                DateTime                @db.Timestamptz(6)
    issues                    issues                  @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_db5b756534")
    prometheus_alert_events   prometheus_alert_events @relation(fields: [prometheus_alert_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b32edb790f")

    @@id([issue_id, prometheus_alert_event_id])
    @@index([prometheus_alert_event_id], map: "issue_id_issues_prometheus_alert_events_index")
}

model issues_self_managed_prometheus_alert_events {
    issue_id                               Int
    self_managed_prometheus_alert_event_id BigInt
    created_at                             DateTime                             @db.Timestamptz(6)
    updated_at                             DateTime                             @db.Timestamptz(6)
    issues                                 issues                               @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_cc5d88bbb0")
    self_managed_prometheus_alert_events   self_managed_prometheus_alert_events @relation(fields: [self_managed_prometheus_alert_event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f7db2d72eb")

    @@id([issue_id, self_managed_prometheus_alert_event_id])
    @@index([self_managed_prometheus_alert_event_id], map: "issue_id_issues_self_managed_rometheus_alert_events_index")
}

model iterations_cadences {
    id                    BigInt     @id @default(autoincrement())
    group_id              Int
    created_at            DateTime   @db.Timestamptz(6)
    updated_at            DateTime   @db.Timestamptz(6)
    start_date            DateTime?  @db.Date
    last_run_date         DateTime?  @db.Date
    duration_in_weeks     Int?
    iterations_in_advance Int?
    active                Boolean    @default(true)
    automatic             Boolean    @default(true)
    title                 String
    roll_over             Boolean    @default(false)
    description           String?
    namespaces            namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ece400c55a")
    boards                boards[]
    sprints               sprints[]

    @@index([group_id], map: "index_iterations_cadences_on_group_id")
}

model jira_connect_installations {
    id                         BigInt                       @id @default(autoincrement())
    client_key                 String?                      @unique(map: "index_jira_connect_installations_on_client_key") @db.VarChar
    encrypted_shared_secret    String?                      @db.VarChar
    encrypted_shared_secret_iv String?                      @db.VarChar
    base_url                   String?                      @db.VarChar
    instance_url               String?
    jira_connect_subscriptions jira_connect_subscriptions[]
}

model jira_connect_subscriptions {
    id                           BigInt                     @id @default(autoincrement())
    jira_connect_installation_id BigInt
    namespace_id                 Int
    created_at                   DateTime                   @db.Timestamptz(6)
    updated_at                   DateTime                   @db.Timestamptz(6)
    jira_connect_installations   jira_connect_installations @relation(fields: [jira_connect_installation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f1d617343f")
    namespaces                   namespaces                 @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a3c10bcf7d")

    @@unique([jira_connect_installation_id, namespace_id], map: "idx_jira_connect_subscriptions_on_installation_id_namespace_id")
    @@index([jira_connect_installation_id], map: "idx_jira_connect_subscriptions_on_installation_id")
    @@index([namespace_id], map: "index_jira_connect_subscriptions_on_namespace_id")
}

model jira_imports {
    id                     BigInt    @id @default(autoincrement())
    project_id             Int
    user_id                Int?
    label_id               Int?
    created_at             DateTime  @db.Timestamptz(6)
    updated_at             DateTime  @db.Timestamptz(6)
    finished_at            DateTime? @db.Timestamptz(6)
    jira_project_xid       BigInt
    total_issue_count      Int       @default(0)
    imported_issues_count  Int       @default(0)
    failed_to_import_count Int       @default(0)
    status                 Int       @default(0) @db.SmallInt
    jid                    String?   @db.VarChar(255)
    jira_project_key       String    @db.VarChar(255)
    jira_project_name      String    @db.VarChar(255)
    scheduled_at           DateTime? @db.Timestamptz(6)
    error_message          String?
    labels                 labels?   @relation(fields: [label_id], references: [id], onUpdate: NoAction, map: "fk_rails_675d38c03b")
    projects               projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_63cbe52ada")
    users                  users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_rails_da617096ce")

    @@index([label_id], map: "index_jira_imports_on_label_id")
    @@index([project_id, jira_project_key], map: "index_jira_imports_on_project_id_and_jira_project_key")
    @@index([user_id], map: "index_jira_imports_on_user_id")
}

model jira_tracker_data {
    id                              BigInt       @id @default(autoincrement())
    service_id                      Int
    created_at                      DateTime     @db.Timestamptz(6)
    updated_at                      DateTime     @db.Timestamptz(6)
    encrypted_url                   String?      @db.VarChar
    encrypted_url_iv                String?      @db.VarChar
    encrypted_api_url               String?      @db.VarChar
    encrypted_api_url_iv            String?      @db.VarChar
    encrypted_username              String?      @db.VarChar
    encrypted_username_iv           String?      @db.VarChar
    encrypted_password              String?      @db.VarChar
    encrypted_password_iv           String?      @db.VarChar
    jira_issue_transition_id        String?      @db.VarChar
    project_key                     String?
    issues_enabled                  Boolean      @default(false)
    deployment_type                 Int          @default(0) @db.SmallInt
    vulnerabilities_issuetype       String?
    vulnerabilities_enabled         Boolean      @default(false)
    jira_issue_transition_automatic Boolean      @default(false)
    integrations                    integrations @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a299066916")

    @@index([service_id], map: "index_jira_tracker_data_on_service_id")
}

model keys {
    id                                      Int                                   @id @default(autoincrement())
    user_id                                 Int?
    created_at                              DateTime?                             @db.Timestamp(6)
    updated_at                              DateTime?                             @db.Timestamp(6)
    key                                     String?
    title                                   String?                               @db.VarChar
    type                                    String?                               @db.VarChar
    fingerprint                             String?                               @unique(map: "index_keys_on_fingerprint") @db.VarChar
    public                                  Boolean                               @default(false)
    last_used_at                            DateTime?                             @db.Timestamp(6)
    fingerprint_sha256                      Bytes?
    expires_at                              DateTime?                             @db.Timestamptz(6)
    expiry_notification_delivered_at        DateTime?                             @db.Timestamptz(6)
    before_expiry_notification_delivered_at DateTime?                             @db.Timestamptz(6)
    protected_branch_push_access_levels     protected_branch_push_access_levels[]

    @@index([fingerprint_sha256], map: "index_keys_on_fingerprint_sha256")
    @@index([last_used_at], map: "index_keys_on_last_used_at")
    @@index([user_id], map: "index_keys_on_user_id")
}

model label_links {
    id          Int       @id @default(autoincrement())
    label_id    Int?
    target_id   Int?
    target_type String?   @db.VarChar
    created_at  DateTime? @db.Timestamp(6)
    updated_at  DateTime? @db.Timestamp(6)
    labels      labels?   @relation(fields: [label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d97dd08678")

    @@index([label_id, target_type], map: "index_label_links_on_label_id_and_target_type")
    @@index([target_id, target_type], map: "index_label_links_on_target_id_and_target_type")
    @@index([target_id, label_id, target_type], map: "index_on_label_links_all_columns")
}

model label_priorities {
    id         Int      @id @default(autoincrement())
    project_id Int
    label_id   Int
    priority   Int
    created_at DateTime @db.Timestamp(6)
    updated_at DateTime @db.Timestamp(6)
    labels     labels   @relation(fields: [label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e161058b0f")
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ef916d14fa")

    @@unique([project_id, label_id], map: "index_label_priorities_on_project_id_and_label_id")
    @@index([label_id], map: "index_label_priorities_on_label_id")
    @@index([priority], map: "index_label_priorities_on_priority")
}

model labels {
    id                                                                                                             Int                                        @id @default(autoincrement())
    title                                                                                                          String?                                    @db.VarChar
    color                                                                                                          String?                                    @db.VarChar
    project_id                                                                                                     Int?
    created_at                                                                                                     DateTime?                                  @db.Timestamp(6)
    updated_at                                                                                                     DateTime?                                  @db.Timestamp(6)
    template                                                                                                       Boolean?                                   @default(false)
    description                                                                                                    String?                                    @db.VarChar
    description_html                                                                                               String?
    type                                                                                                           String?                                    @db.VarChar
    group_id                                                                                                       Int?
    cached_markdown_version                                                                                        Int?
    namespaces                                                                                                     namespaces?                                @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c1ac5161d8")
    projects                                                                                                       projects?                                  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_7de4989a69")
    analytics_cycle_analytics_group_stages_analytics_cycle_analytics_group_stages_end_event_label_idTolabels       analytics_cycle_analytics_group_stages[]   @relation("analytics_cycle_analytics_group_stages_end_event_label_idTolabels")
    analytics_cycle_analytics_group_stages_analytics_cycle_analytics_group_stages_start_event_label_idTolabels     analytics_cycle_analytics_group_stages[]   @relation("analytics_cycle_analytics_group_stages_start_event_label_idTolabels")
    analytics_cycle_analytics_project_stages_analytics_cycle_analytics_project_stages_end_event_label_idTolabels   analytics_cycle_analytics_project_stages[] @relation("analytics_cycle_analytics_project_stages_end_event_label_idTolabels")
    analytics_cycle_analytics_project_stages_analytics_cycle_analytics_project_stages_start_event_label_idTolabels analytics_cycle_analytics_project_stages[] @relation("analytics_cycle_analytics_project_stages_start_event_label_idTolabels")
    board_labels                                                                                                   board_labels[]
    boards_epic_board_labels                                                                                       boards_epic_board_labels[]
    boards_epic_lists                                                                                              boards_epic_lists[]
    jira_imports                                                                                                   jira_imports[]
    label_links                                                                                                    label_links[]
    label_priorities                                                                                               label_priorities[]
    lists                                                                                                          lists[]
    resource_label_events                                                                                          resource_label_events[]

    @@index([group_id], map: "index_labels_on_group_id")
    @@index([project_id], map: "index_labels_on_project_id")
    @@index([title], map: "index_labels_on_title_varchar")
    @@index([type, project_id], map: "index_labels_on_type_and_project_id")
}

model ldap_group_links {
    id           Int       @id @default(autoincrement())
    cn           String?   @db.VarChar
    group_access Int
    group_id     Int
    created_at   DateTime? @db.Timestamp(6)
    updated_at   DateTime? @db.Timestamp(6)
    provider     String?   @db.VarChar
    filter       String?   @db.VarChar
}

model lfs_file_locks {
    id         Int      @id @default(autoincrement())
    project_id Int
    user_id    Int
    created_at DateTime @db.Timestamp(6)
    path       String?  @db.VarChar(511)
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_43df7a0412")
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_27a1d98fa8")

    @@unique([project_id, path], map: "index_lfs_file_locks_on_project_id_and_path")
    @@index([user_id], map: "index_lfs_file_locks_on_user_id")
}

model lfs_object_states {
    verification_started_at  DateTime?   @db.Timestamptz(6)
    verification_retry_at    DateTime?   @db.Timestamptz(6)
    verified_at              DateTime?   @db.Timestamptz(6)
    lfs_object_id            Int         @id @default(autoincrement())
    verification_state       Int         @default(0) @db.SmallInt
    verification_retry_count Int?        @db.SmallInt
    verification_checksum    Bytes?
    verification_failure     String?
    lfs_objects              lfs_objects @relation(fields: [lfs_object_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4188448cd5")

    @@index([lfs_object_id], map: "index_lfs_object_states_on_lfs_object_id")
    @@index([verification_state], map: "index_lfs_object_states_on_verification_state")
}

model lfs_objects {
    id                   Int                    @id @default(autoincrement())
    oid                  String                 @unique(map: "index_lfs_objects_on_oid") @db.VarChar
    size                 BigInt
    created_at           DateTime?              @db.Timestamp(6)
    updated_at           DateTime?              @db.Timestamp(6)
    file                 String?                @db.VarChar
    file_store           Int?                   @default(1)
    lfs_object_states    lfs_object_states?
    lfs_objects_projects lfs_objects_projects[]

    @@index([file_store], map: "index_lfs_objects_on_file_store")
}

model lfs_objects_projects {
    id              Int         @id @default(autoincrement())
    lfs_object_id   Int
    project_id      Int
    created_at      DateTime?   @db.Timestamp(6)
    updated_at      DateTime?   @db.Timestamp(6)
    repository_type Int?        @db.SmallInt
    lfs_objects     lfs_objects @relation(fields: [lfs_object_id], references: [id], onUpdate: NoAction, map: "fk_a56e02279c")
    projects        projects    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_2eb33f7a78")

    @@index([lfs_object_id], map: "index_lfs_objects_projects_on_lfs_object_id")
    @@index([project_id, lfs_object_id], map: "index_lfs_objects_projects_on_project_id_and_lfs_object_id")
}

model licenses {
    id             Int       @id @default(autoincrement())
    data           String
    created_at     DateTime? @db.Timestamp(6)
    updated_at     DateTime? @db.Timestamp(6)
    cloud          Boolean?  @default(false)
    last_synced_at DateTime? @db.Timestamptz(6)
}

model list_user_preferences {
    id         BigInt   @id @default(autoincrement())
    user_id    Int
    list_id    Int
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    collapsed  Boolean?
    lists      lists    @relation(fields: [list_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_70b2ef5ce2")
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_916d72cafd")

    @@unique([user_id, list_id], map: "index_list_user_preferences_on_user_id_and_list_id")
    @@index([list_id], map: "index_list_user_preferences_on_list_id")
    @@index([user_id], map: "index_list_user_preferences_on_user_id")
}

model lists {
    id                    Int                     @id @default(autoincrement())
    board_id              Int
    label_id              Int?
    list_type             Int                     @default(1)
    position              Int?
    created_at            DateTime                @db.Timestamp(6)
    updated_at            DateTime                @db.Timestamp(6)
    user_id               Int?
    milestone_id          Int?
    max_issue_count       Int                     @default(0)
    max_issue_weight      Int                     @default(0)
    limit_metric          String?                 @db.VarChar(20)
    iteration_id          BigInt?
    boards                boards                  @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0d3f677137")
    sprints               sprints?                @relation(fields: [iteration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_30f2a831f4")
    labels                labels?                 @relation(fields: [label_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_7a5553d60f")
    milestones            milestones?             @relation(fields: [milestone_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_baed5f39b7")
    users                 users?                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d6cf4279f7")
    list_user_preferences list_user_preferences[]

    @@unique([board_id, label_id], map: "index_lists_on_board_id_and_label_id")
    @@index([iteration_id], map: "index_lists_on_iteration_id")
    @@index([label_id], map: "index_lists_on_label_id")
    @@index([list_type], map: "index_lists_on_list_type")
    @@index([milestone_id], map: "index_lists_on_milestone_id")
    @@index([user_id], map: "index_lists_on_user_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model loose_foreign_keys_deleted_records {
    id                         BigInt    @default(autoincrement())
    partition                  BigInt    @default(1)
    primary_key_value          BigInt
    status                     Int       @default(1) @db.SmallInt
    created_at                 DateTime  @default(now()) @db.Timestamptz(6)
    fully_qualified_table_name String
    consume_after              DateTime? @default(now()) @db.Timestamptz(6)
    cleanup_attempts           Int?      @default(0) @db.SmallInt

    @@ignore
}

model member_tasks {
    id         BigInt   @id @default(autoincrement())
    member_id  Int
    project_id Int
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    tasks      Int[]    @db.SmallInt
    members    members  @relation(fields: [member_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_12816d4bbb")
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ab636303dd")

    @@unique([member_id, project_id], map: "index_member_tasks_on_member_id_and_project_id")
    @@index([member_id], map: "index_member_tasks_on_member_id")
    @@index([project_id], map: "index_member_tasks_on_project_id")
}

model members {
    id                   Int            @id @default(autoincrement())
    access_level         Int
    source_id            Int
    source_type          String         @db.VarChar
    user_id              Int?
    notification_level   Int
    type                 String?        @db.VarChar
    created_at           DateTime?      @db.Timestamp(6)
    updated_at           DateTime?      @db.Timestamp(6)
    created_by_id        Int?
    invite_email         String?        @db.VarChar
    invite_token         String?        @unique(map: "index_members_on_invite_token") @db.VarChar
    invite_accepted_at   DateTime?      @db.Timestamp(6)
    requested_at         DateTime?      @db.Timestamp(6)
    expires_at           DateTime?      @db.Date
    ldap                 Boolean        @default(false)
    override             Boolean        @default(false)
    state                Int?           @default(0) @db.SmallInt
    invite_email_success Boolean        @default(true)
    member_namespace_id  Int?
    namespaces           namespaces?    @relation(fields: [member_namespace_id], references: [id], onUpdate: NoAction, map: "fk_aa82dcc1c6")
    users                users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_2e88fb7ce9")
    member_tasks         member_tasks[]

    @@index([access_level], map: "index_members_on_access_level")
    @@index([expires_at], map: "index_members_on_expires_at")
    @@index([invite_email], map: "index_members_on_invite_email")
    @@index([member_namespace_id], map: "index_members_on_member_namespace_id")
    @@index([requested_at], map: "index_members_on_requested_at")
    @@index([source_id, source_type], map: "index_members_on_source_id_and_source_type")
    @@index([user_id, source_id, source_type], map: "index_members_on_user_id_source_id_source_type")
}

model merge_request_assignees {
    id                                                            BigInt         @id @default(autoincrement())
    user_id                                                       Int
    merge_request_id                                              Int
    created_at                                                    DateTime?      @db.Timestamptz(6)
    state                                                         Int            @default(0) @db.SmallInt
    updated_state_by_user_id                                      Int?
    merge_requests                                                merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_443443ce6f")
    users_merge_request_assignees_updated_state_by_user_idTousers users?         @relation("merge_request_assignees_updated_state_by_user_idTousers", fields: [updated_state_by_user_id], references: [id], onUpdate: NoAction, map: "fk_af036e3261")
    users_merge_request_assignees_user_idTousers                  users          @relation("merge_request_assignees_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_579d375628")

    @@unique([merge_request_id, user_id], map: "index_merge_request_assignees_on_merge_request_id_and_user_id")
    @@index([merge_request_id], map: "index_merge_request_assignees_on_merge_request_id")
    @@index([user_id], map: "index_merge_request_assignees_on_user_id")
    @@index([updated_state_by_user_id], map: "index_on_merge_request_assignees_updated_state_by_user_id")
}

model merge_request_blocks {
    id                                                                            BigInt         @id @default(autoincrement())
    blocking_merge_request_id                                                     Int
    blocked_merge_request_id                                                      Int
    created_at                                                                    DateTime       @db.Timestamptz(6)
    updated_at                                                                    DateTime       @db.Timestamptz(6)
    merge_requests_merge_request_blocks_blocked_merge_request_idTomerge_requests  merge_requests @relation("merge_request_blocks_blocked_merge_request_idTomerge_requests", fields: [blocked_merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_364d4bea8b")
    merge_requests_merge_request_blocks_blocking_merge_request_idTomerge_requests merge_requests @relation("merge_request_blocks_blocking_merge_request_idTomerge_requests", fields: [blocking_merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e9387863bc")

    @@unique([blocking_merge_request_id, blocked_merge_request_id], map: "index_mr_blocks_on_blocking_and_blocked_mr_ids")
    @@index([blocked_merge_request_id], map: "index_merge_request_blocks_on_blocked_merge_request_id")
}

model merge_request_cleanup_schedules {
    merge_request_id Int            @id @unique(map: "index_merge_request_cleanup_schedules_on_merge_request_id") @default(autoincrement())
    scheduled_at     DateTime       @db.Timestamptz(6)
    completed_at     DateTime?      @db.Timestamptz(6)
    created_at       DateTime       @db.Timestamptz(6)
    updated_at       DateTime       @db.Timestamptz(6)
    status           Int            @default(0) @db.SmallInt
    failed_count     Int            @default(0)
    merge_requests   merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_92dd0e705c")

    @@index([status], map: "index_merge_request_cleanup_schedules_on_status")
}

model merge_request_context_commit_diff_files {
    sha                             Bytes
    relative_order                  Int
    new_file                        Boolean
    renamed_file                    Boolean
    deleted_file                    Boolean
    too_large                       Boolean
    a_mode                          String                        @db.VarChar(255)
    b_mode                          String                        @db.VarChar(255)
    new_path                        String
    old_path                        String
    diff                            String?
    binary                          Boolean?
    merge_request_context_commit_id BigInt
    merge_request_context_commits   merge_request_context_commits @relation(fields: [merge_request_context_commit_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_74a00a1787")

    @@id([merge_request_context_commit_id, relative_order])
    @@index([merge_request_context_commit_id, sha], map: "idx_mr_cc_diff_files_on_mr_cc_id_and_sha")
}

model merge_request_context_commits {
    id                                      BigInt                                    @id @default(autoincrement())
    authored_date                           DateTime?                                 @db.Timestamptz(6)
    committed_date                          DateTime?                                 @db.Timestamptz(6)
    relative_order                          Int
    sha                                     Bytes
    author_name                             String?
    author_email                            String?
    committer_name                          String?
    committer_email                         String?
    message                                 String?
    merge_request_id                        Int?
    trailers                                Json                                      @default("{}")
    merge_requests                          merge_requests?                           @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0fe0039f60")
    merge_request_context_commit_diff_files merge_request_context_commit_diff_files[]

    @@unique([merge_request_id, sha], map: "index_mr_context_commits_on_merge_request_id_and_sha")
}

model merge_request_diff_commit_users {
    id    BigInt  @id @default(autoincrement())
    name  String?
    email String?

    @@unique([name, email], map: "index_merge_request_diff_commit_users_on_name_and_email")
}

model merge_request_diff_commits {
    authored_date         DateTime?           @db.Timestamp(6)
    committed_date        DateTime?           @db.Timestamp(6)
    merge_request_diff_id Int
    relative_order        Int
    sha                   Bytes
    message               String?
    trailers              Json                @default("{}")
    commit_author_id      BigInt?
    committer_id          BigInt?
    merge_request_diffs   merge_request_diffs @relation(fields: [merge_request_diff_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_316aaceda3")

    @@id([merge_request_diff_id, relative_order])
    @@index([sha], map: "index_merge_request_diff_commits_on_sha")
}

model merge_request_diff_details {
    merge_request_diff_id    Int                 @id @default(autoincrement())
    verification_retry_at    DateTime?           @db.Timestamptz(6)
    verified_at              DateTime?           @db.Timestamptz(6)
    verification_retry_count Int?                @db.SmallInt
    verification_checksum    Bytes?
    verification_failure     String?
    verification_state       Int                 @default(0) @db.SmallInt
    verification_started_at  DateTime?           @db.Timestamptz(6)
    merge_request_diffs      merge_request_diffs @relation(fields: [merge_request_diff_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_86f4d24ecd")

    @@index([merge_request_diff_id], map: "index_merge_request_diff_details_on_merge_request_diff_id")
    @@index([verification_state], map: "index_merge_request_diff_details_on_verification_state")
}

model merge_request_diff_files {
    merge_request_diff_id Int
    relative_order        Int
    new_file              Boolean
    renamed_file          Boolean
    deleted_file          Boolean
    too_large             Boolean
    a_mode                String              @db.VarChar
    b_mode                String              @db.VarChar
    new_path              String
    old_path              String
    diff                  String?
    binary                Boolean?
    external_diff_offset  Int?
    external_diff_size    Int?
    merge_request_diffs   merge_request_diffs @relation(fields: [merge_request_diff_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_501aa0a391")

    @@id([merge_request_diff_id, relative_order])
}

model merge_request_diffs {
    id                                                                              Int                          @id @default(autoincrement())
    state                                                                           String?                      @db.VarChar
    merge_request_id                                                                Int
    created_at                                                                      DateTime?                    @db.Timestamp(6)
    updated_at                                                                      DateTime?                    @db.Timestamp(6)
    base_commit_sha                                                                 String?                      @db.VarChar
    real_size                                                                       String?                      @db.VarChar
    head_commit_sha                                                                 String?                      @db.VarChar
    start_commit_sha                                                                String?                      @db.VarChar
    commits_count                                                                   Int?
    external_diff                                                                   String?                      @db.VarChar
    external_diff_store                                                             Int?                         @default(1)
    stored_externally                                                               Boolean?
    files_count                                                                     Int?                         @db.SmallInt
    sorted                                                                          Boolean                      @default(false)
    diff_type                                                                       Int                          @default(1) @db.SmallInt
    merge_requests_merge_request_diffs_merge_request_idTomerge_requests             merge_requests               @relation("merge_request_diffs_merge_request_idTomerge_requests", fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_8483f3258f")
    merge_request_diff_commits                                                      merge_request_diff_commits[]
    merge_request_diff_details                                                      merge_request_diff_details?
    merge_request_diff_files                                                        merge_request_diff_files[]
    merge_requests_merge_request_diffsTomerge_requests_latest_merge_request_diff_id merge_requests[]             @relation("merge_request_diffsTomerge_requests_latest_merge_request_diff_id")

    @@index([external_diff_store], map: "index_merge_request_diffs_on_external_diff_store")
    @@index([merge_request_id, id], map: "index_merge_request_diffs_on_merge_request_id_and_id")
}

model merge_request_metrics {
    id                                                     Int            @id @default(autoincrement())
    merge_request_id                                       Int            @unique(map: "unique_merge_request_metrics_by_merge_request_id")
    latest_build_started_at                                DateTime?      @db.Timestamp(6)
    latest_build_finished_at                               DateTime?      @db.Timestamp(6)
    first_deployed_to_production_at                        DateTime?      @db.Timestamp(6)
    merged_at                                              DateTime?      @db.Timestamp(6)
    created_at                                             DateTime       @db.Timestamp(6)
    updated_at                                             DateTime       @db.Timestamp(6)
    pipeline_id                                            Int?
    merged_by_id                                           Int?
    latest_closed_by_id                                    Int?
    latest_closed_at                                       DateTime?      @db.Timestamptz(6)
    first_comment_at                                       DateTime?      @db.Timestamptz(6)
    first_commit_at                                        DateTime?      @db.Timestamptz(6)
    last_commit_at                                         DateTime?      @db.Timestamptz(6)
    diff_size                                              Int?
    modified_paths_size                                    Int?
    commits_count                                          Int?
    first_approved_at                                      DateTime?      @db.Timestamptz(6)
    first_reassigned_at                                    DateTime?      @db.Timestamptz(6)
    added_lines                                            Int?
    removed_lines                                          Int?
    target_project_id                                      Int?
    users_merge_request_metrics_latest_closed_by_idTousers users?         @relation("merge_request_metrics_latest_closed_by_idTousers", fields: [latest_closed_by_id], references: [id], onUpdate: NoAction, map: "fk_ae440388cc")
    merge_requests                                         merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e6d7c24d1b")
    users_merge_request_metrics_merged_by_idTousers        users?         @relation("merge_request_metrics_merged_by_idTousers", fields: [merged_by_id], references: [id], onUpdate: NoAction, map: "fk_7f28d925f3")
    projects                                               projects?      @relation(fields: [target_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_56067dcb44")

    @@index([first_deployed_to_production_at], map: "index_merge_request_metrics_on_first_deployed_to_production_at")
    @@index([latest_closed_by_id], map: "index_merge_request_metrics_on_latest_closed_by_id")
    @@index([merged_at], map: "index_merge_request_metrics_on_merged_at")
    @@index([merged_by_id], map: "index_merge_request_metrics_on_merged_by_id")
    @@index([pipeline_id], map: "index_merge_request_metrics_on_pipeline_id")
    @@index([target_project_id], map: "index_merge_request_metrics_on_target_project_id")
    @@index([target_project_id, merged_at, id], map: "index_mr_metrics_on_target_project_id_merged_at_nulls_last")
}

model merge_request_reviewers {
    id                                                            BigInt         @id @default(autoincrement())
    user_id                                                       Int
    merge_request_id                                              Int
    created_at                                                    DateTime       @db.Timestamptz(6)
    state                                                         Int            @default(0) @db.SmallInt
    updated_state_by_user_id                                      Int?
    merge_requests                                                merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d9fec24b9d")
    users_merge_request_reviewers_updated_state_by_user_idTousers users?         @relation("merge_request_reviewers_updated_state_by_user_idTousers", fields: [updated_state_by_user_id], references: [id], onUpdate: NoAction, map: "fk_3d674b9f23")
    users_merge_request_reviewers_user_idTousers                  users          @relation("merge_request_reviewers_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3704a66140")

    @@unique([merge_request_id, user_id], map: "index_merge_request_reviewers_on_merge_request_id_and_user_id")
    @@index([user_id], map: "index_merge_request_reviewers_on_user_id")
    @@index([updated_state_by_user_id], map: "index_on_merge_request_reviewers_updated_state_by_user_id")
}

model merge_request_user_mentions {
    id                     BigInt         @id @default(autoincrement())
    merge_request_id       Int
    note_id                Int?
    mentioned_users_ids    Int[]
    mentioned_projects_ids Int[]
    mentioned_groups_ids   Int[]
    merge_requests         merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_aa1b2961b1")
    notes                  notes?         @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c440b9ea31")

    @@unique([merge_request_id, note_id], map: "merge_request_user_mentions_on_mr_id_and_note_id_index")
}

model merge_requests {
    id                                                                                   Int                                    @id @default(autoincrement())
    target_branch                                                                        String                                 @db.VarChar
    source_branch                                                                        String                                 @db.VarChar
    source_project_id                                                                    Int?
    author_id                                                                            Int?
    assignee_id                                                                          Int?
    title                                                                                String?                                @db.VarChar
    created_at                                                                           DateTime?                              @db.Timestamp(6)
    updated_at                                                                           DateTime?                              @db.Timestamp(6)
    milestone_id                                                                         Int?
    merge_status                                                                         String                                 @default("unchecked") @db.VarChar
    target_project_id                                                                    Int
    iid                                                                                  Int?
    description                                                                          String?
    updated_by_id                                                                        Int?
    merge_error                                                                          String?
    merge_params                                                                         String?
    merge_when_pipeline_succeeds                                                         Boolean                                @default(false)
    merge_user_id                                                                        Int?
    merge_commit_sha                                                                     String?                                @db.VarChar
    approvals_before_merge                                                               Int?
    rebase_commit_sha                                                                    String?                                @db.VarChar
    in_progress_merge_commit_sha                                                         String?                                @db.VarChar
    lock_version                                                                         Int?                                   @default(0)
    title_html                                                                           String?
    description_html                                                                     String?
    time_estimate                                                                        Int?
    squash                                                                               Boolean                                @default(false)
    cached_markdown_version                                                              Int?
    last_edited_at                                                                       DateTime?                              @db.Timestamp(6)
    last_edited_by_id                                                                    Int?
    head_pipeline_id                                                                     Int?
    merge_jid                                                                            String?                                @db.VarChar
    discussion_locked                                                                    Boolean?
    latest_merge_request_diff_id                                                         Int?
    allow_maintainer_to_push                                                             Boolean?                               @default(true)
    state_id                                                                             Int                                    @default(1) @db.SmallInt
    rebase_jid                                                                           String?                                @db.VarChar
    squash_commit_sha                                                                    Bytes?
    sprint_id                                                                            BigInt?
    merge_ref_sha                                                                        Bytes?
    draft                                                                                Boolean                                @default(false)
    users_merge_requests_assignee_idTousers                                              users?                                 @relation("merge_requests_assignee_idTousers", fields: [assignee_id], references: [id], onUpdate: NoAction, map: "fk_6149611a04")
    users_merge_requests_author_idTousers                                                users?                                 @relation("merge_requests_author_idTousers", fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_e719a85f8a")
    merge_request_diffs_merge_request_diffsTomerge_requests_latest_merge_request_diff_id merge_request_diffs?                   @relation("merge_request_diffsTomerge_requests_latest_merge_request_diff_id", fields: [latest_merge_request_diff_id], references: [id], onUpdate: NoAction, map: "fk_06067f5644")
    users_merge_requests_merge_user_idTousers                                            users?                                 @relation("merge_requests_merge_user_idTousers", fields: [merge_user_id], references: [id], onUpdate: NoAction, map: "fk_ad525e1f87")
    milestones                                                                           milestones?                            @relation(fields: [milestone_id], references: [id], onUpdate: NoAction, map: "fk_6a5165a692")
    projects_merge_requests_source_project_idToprojects                                  projects?                              @relation("merge_requests_source_project_idToprojects", fields: [source_project_id], references: [id], onUpdate: NoAction, map: "fk_source_project")
    sprints                                                                              sprints?                               @relation(fields: [sprint_id], references: [id], onUpdate: NoAction, map: "fk_7e85395a64")
    projects_merge_requests_target_project_idToprojects                                  projects                               @relation("merge_requests_target_project_idToprojects", fields: [target_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_a6963e8447")
    users_merge_requests_updated_by_idTousers                                            users?                                 @relation("merge_requests_updated_by_idTousers", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "fk_641731faff")
    agent_activity_events                                                                agent_activity_events[]
    approval_merge_request_rules                                                         approval_merge_request_rules[]
    approvals                                                                            approvals[]
    deployment_merge_requests                                                            deployment_merge_requests[]
    description_versions                                                                 description_versions[]
    draft_notes                                                                          draft_notes[]
    merge_request_assignees                                                              merge_request_assignees[]
    merge_request_blocks_merge_request_blocks_blocked_merge_request_idTomerge_requests   merge_request_blocks[]                 @relation("merge_request_blocks_blocked_merge_request_idTomerge_requests")
    merge_request_blocks_merge_request_blocks_blocking_merge_request_idTomerge_requests  merge_request_blocks[]                 @relation("merge_request_blocks_blocking_merge_request_idTomerge_requests")
    merge_request_cleanup_schedules                                                      merge_request_cleanup_schedules?
    merge_request_context_commits                                                        merge_request_context_commits[]
    merge_request_diffs_merge_request_diffs_merge_request_idTomerge_requests             merge_request_diffs[]                  @relation("merge_request_diffs_merge_request_idTomerge_requests")
    merge_request_metrics                                                                merge_request_metrics?
    merge_request_reviewers                                                              merge_request_reviewers[]
    merge_request_user_mentions                                                          merge_request_user_mentions[]
    merge_requests_closing_issues                                                        merge_requests_closing_issues[]
    merge_requests_compliance_violations                                                 merge_requests_compliance_violations[]
    merge_trains                                                                         merge_trains?
    resource_iteration_events                                                            resource_iteration_events[]
    resource_label_events                                                                resource_label_events[]
    resource_milestone_events                                                            resource_milestone_events[]
    resource_state_events_merge_requestsToresource_state_events_merge_request_id         resource_state_events[]                @relation("merge_requestsToresource_state_events_merge_request_id")
    resource_state_events_merge_requestsToresource_state_events_source_merge_request_id  resource_state_events[]                @relation("merge_requestsToresource_state_events_source_merge_request_id")
    reviews                                                                              reviews[]
    status_check_responses                                                               status_check_responses[]
    timelogs                                                                             timelogs[]
    vulnerability_feedback                                                               vulnerability_feedback[]

    @@unique([target_project_id, iid], map: "index_merge_requests_on_target_project_id_and_iid")
    @@index([target_project_id, state_id, created_at, id], map: "idx_mrs_on_target_id_and_created_at_and_state_id")
    @@index([assignee_id], map: "index_merge_requests_on_assignee_id")
    @@index([author_id], map: "index_merge_requests_on_author_id")
    @@index([created_at], map: "index_merge_requests_on_created_at")
    @@index([description], map: "index_merge_requests_on_description_trigram")
    @@index([head_pipeline_id], map: "index_merge_requests_on_head_pipeline_id")
    @@index([latest_merge_request_diff_id], map: "index_merge_requests_on_latest_merge_request_diff_id")
    @@index([milestone_id], map: "index_merge_requests_on_milestone_id")
    @@index([source_branch], map: "index_merge_requests_on_source_branch")
    @@index([source_project_id, source_branch], map: "index_merge_requests_on_source_project_id_and_source_branch")
    @@index([sprint_id], map: "index_merge_requests_on_sprint_id")
    @@index([target_branch], map: "index_merge_requests_on_target_branch")
    @@index([target_project_id, created_at, id], map: "index_merge_requests_on_target_project_id_and_created_at_and_id")
    @@index([target_project_id, iid, state_id], map: "index_merge_requests_on_target_project_id_and_iid_and_state_id")
    @@index([target_project_id, source_branch], map: "index_merge_requests_on_target_project_id_and_source_branch")
    @@index([target_project_id, squash_commit_sha], map: "index_merge_requests_on_target_project_id_and_squash_commit_sha")
    @@index([target_project_id, updated_at, id], map: "index_merge_requests_on_target_project_id_and_updated_at_and_id")
    @@index([title], map: "index_merge_requests_on_title_trigram")
    @@index([target_project_id, merge_commit_sha, id], map: "index_merge_requests_on_tp_id_and_merge_commit_sha_and_id")
    @@index([target_project_id, id, latest_merge_request_diff_id], map: "index_on_merge_requests_for_latest_diffs")
}

model merge_requests_closing_issues {
    id               Int            @id @default(autoincrement())
    merge_request_id Int
    issue_id         Int
    created_at       DateTime       @db.Timestamp(6)
    updated_at       DateTime       @db.Timestamp(6)
    issues           issues         @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f8540692be")
    merge_requests   merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_458eda8667")

    @@index([issue_id], map: "index_merge_requests_closing_issues_on_issue_id")
    @@index([merge_request_id], map: "index_merge_requests_closing_issues_on_merge_request_id")
}

model merge_requests_compliance_violations {
    id                BigInt         @id @default(autoincrement())
    violating_user_id Int
    merge_request_id  Int
    reason            Int            @db.SmallInt
    severity_level    Int            @default(0) @db.SmallInt
    merge_requests    merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_290ec1ab02")
    users             users          @relation(fields: [violating_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ec881c1c6f")

    @@unique([merge_request_id, violating_user_id, reason], map: "index_merge_requests_compliance_violations_unique_columns")
    @@index([violating_user_id], map: "index_merge_requests_compliance_violations_on_violating_user_id")
}

model merge_trains {
    id                BigInt         @id @default(autoincrement())
    merge_request_id  Int            @unique(map: "index_merge_trains_on_merge_request_id")
    user_id           Int
    pipeline_id       Int?
    created_at        DateTime       @db.Timestamptz(6)
    updated_at        DateTime       @db.Timestamptz(6)
    target_project_id Int
    target_branch     String
    status            Int            @default(0) @db.SmallInt
    merged_at         DateTime?      @db.Timestamptz(6)
    duration          Int?
    merge_requests    merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b374b5225d")
    projects          projects       @relation(fields: [target_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b9d67af01d")
    users             users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b29261ce31")

    @@index([target_project_id, target_branch, status], map: "index_for_status_per_branch_per_project")
    @@index([pipeline_id], map: "index_merge_trains_on_pipeline_id")
    @@index([user_id], map: "index_merge_trains_on_user_id")
}

model metrics_dashboard_annotations {
    id             BigInt        @id @default(autoincrement())
    starting_at    DateTime      @db.Timestamptz(6)
    ending_at      DateTime?     @db.Timestamptz(6)
    environment_id Int?
    cluster_id     Int?
    dashboard_path String        @db.VarChar(255)
    panel_xid      String?       @db.VarChar(255)
    description    String
    clusters       clusters?     @relation(fields: [cluster_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_345ab51043")
    environments   environments? @relation(fields: [environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_aeb11a7643")
}

model metrics_users_starred_dashboards {
    id             BigInt   @id @default(autoincrement())
    created_at     DateTime @db.Timestamptz(6)
    updated_at     DateTime @db.Timestamptz(6)
    project_id     Int
    user_id        Int
    dashboard_path String
    projects       projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d76a2b9a8c")
    users          users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_bd6ae32fac")

    @@unique([user_id, project_id, dashboard_path], map: "idx_metrics_users_starred_dashboard_on_user_project_dashboard")
    @@index([project_id], map: "index_metrics_users_starred_dashboards_on_project_id")
}

model milestone_releases {
    milestone_id Int
    release_id   Int
    milestones   milestones @relation(fields: [milestone_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_7ae0756a2d")
    releases     releases   @relation(fields: [release_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_754f27dbfa")

    @@id([milestone_id, release_id])
    @@index([release_id], map: "index_milestone_releases_on_release_id")
}

model milestones {
    id                                                                           Int                         @id @default(autoincrement())
    title                                                                        String                      @db.VarChar
    project_id                                                                   Int?
    description                                                                  String?
    due_date                                                                     DateTime?                   @db.Date
    created_at                                                                   DateTime?                   @db.Timestamp(6)
    updated_at                                                                   DateTime?                   @db.Timestamp(6)
    state                                                                        String?                     @db.VarChar
    iid                                                                          Int?
    title_html                                                                   String?
    description_html                                                             String?
    start_date                                                                   DateTime?                   @db.Date
    cached_markdown_version                                                      Int?
    group_id                                                                     Int?
    namespaces                                                                   namespaces?                 @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_95650a40d4")
    projects                                                                     projects?                   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_9bd0a0c791")
    epics_epics_due_date_sourcing_milestone_idTomilestones                       epics[]                     @relation("epics_due_date_sourcing_milestone_idTomilestones")
    epics_epics_start_date_sourcing_milestone_idTomilestones                     epics[]                     @relation("epics_start_date_sourcing_milestone_idTomilestones")
    issues                                                                       issues[]
    lists                                                                        lists[]
    merge_requests                                                               merge_requests[]
    milestone_releases                                                           milestone_releases[]
    resource_milestone_events                                                    resource_milestone_events[]
    vulnerabilities_milestonesTovulnerabilities_due_date_sourcing_milestone_id   vulnerabilities[]           @relation("milestonesTovulnerabilities_due_date_sourcing_milestone_id")
    vulnerabilities_milestonesTovulnerabilities_milestone_id                     vulnerabilities[]           @relation("milestonesTovulnerabilities_milestone_id")
    vulnerabilities_milestonesTovulnerabilities_start_date_sourcing_milestone_id vulnerabilities[]           @relation("milestonesTovulnerabilities_start_date_sourcing_milestone_id")

    @@unique([project_id, iid], map: "index_milestones_on_project_id_and_iid")
    @@index([description], map: "index_milestones_on_description_trigram")
    @@index([due_date], map: "index_milestones_on_due_date")
    @@index([group_id], map: "index_milestones_on_group_id")
    @@index([title], map: "index_milestones_on_title")
    @@index([title], map: "index_milestones_on_title_trigram")
}

model namespace_admin_notes {
    id           BigInt     @id @default(autoincrement())
    created_at   DateTime   @db.Timestamptz(6)
    updated_at   DateTime   @db.Timestamptz(6)
    namespace_id Int
    note         String?
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_666166ea7b")

    @@index([namespace_id], map: "index_namespace_admin_notes_on_namespace_id")
}

model namespace_aggregation_schedules {
    namespace_id Int        @id @unique(map: "index_namespace_aggregation_schedules_on_namespace_id")
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b565c8d16c")
}

model namespace_limits {
    additional_purchased_storage_size    BigInt     @default(0)
    additional_purchased_storage_ends_on DateTime?  @db.Date
    namespace_id                         Int        @id
    temporary_storage_increase_ends_on   DateTime?  @db.Date
    namespaces                           namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5b3f2bc334")
}

model namespace_package_settings {
    namespace_id                      Int        @id
    maven_duplicates_allowed          Boolean    @default(true)
    maven_duplicate_exception_regex   String     @default("")
    generic_duplicates_allowed        Boolean    @default(true)
    generic_duplicate_exception_regex String     @default("")
    namespaces                        namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e773444769")
}

model namespace_root_storage_statistics {
    namespace_id            Int        @id @unique(map: "index_namespace_root_storage_statistics_on_namespace_id")
    updated_at              DateTime   @db.Timestamptz(6)
    repository_size         BigInt     @default(0)
    lfs_objects_size        BigInt     @default(0)
    wiki_size               BigInt     @default(0)
    build_artifacts_size    BigInt     @default(0)
    storage_size            BigInt     @default(0)
    packages_size           BigInt     @default(0)
    snippets_size           BigInt     @default(0)
    pipeline_artifacts_size BigInt     @default(0)
    uploads_size            BigInt     @default(0)
    dependency_proxy_size   BigInt     @default(0)
    namespaces              namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a0702c430b")
}

model namespace_settings {
    created_at                                DateTime   @db.Timestamptz(6)
    updated_at                                DateTime   @db.Timestamptz(6)
    namespace_id                              Int        @id
    prevent_forking_outside_group             Boolean    @default(false)
    allow_mfa_for_subgroups                   Boolean    @default(true)
    default_branch_name                       String?
    repository_read_only                      Boolean    @default(false)
    delayed_project_removal                   Boolean?
    resource_access_token_creation_allowed    Boolean    @default(true)
    lock_delayed_project_removal              Boolean    @default(false)
    prevent_sharing_groups_outside_hierarchy  Boolean    @default(false)
    new_user_signups_cap                      Int?
    setup_for_company                         Boolean?
    jobs_to_be_done                           Int?       @db.SmallInt
    runner_token_expiration_interval          Int?
    subgroup_runner_token_expiration_interval Int?
    project_runner_token_expiration_interval  Int?
    namespaces                                namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3896d4fae5")
}

model namespace_statistics {
    id                                Int        @id @default(autoincrement())
    namespace_id                      Int        @unique(map: "index_namespace_statistics_on_namespace_id")
    shared_runners_seconds            Int        @default(0)
    shared_runners_seconds_last_reset DateTime?  @db.Timestamp(6)
    storage_size                      BigInt     @default(0)
    wiki_size                         BigInt     @default(0)
    dependency_proxy_size             BigInt     @default(0)
    namespaces                        namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0062050394")
}

model namespaces {
    id                                                                                                     Int                                              @id @default(autoincrement())
    name                                                                                                   String                                           @db.VarChar
    path                                                                                                   String                                           @db.VarChar
    owner_id                                                                                               Int?
    created_at                                                                                             DateTime?                                        @db.Timestamp(6)
    updated_at                                                                                             DateTime?                                        @db.Timestamp(6)
    type                                                                                                   String                                           @default("User") @db.VarChar
    description                                                                                            String                                           @default("") @db.VarChar
    avatar                                                                                                 String?                                          @db.VarChar
    membership_lock                                                                                        Boolean?                                         @default(false)
    share_with_group_lock                                                                                  Boolean?                                         @default(false)
    visibility_level                                                                                       Int                                              @default(20)
    request_access_enabled                                                                                 Boolean                                          @default(true)
    ldap_sync_status                                                                                       String                                           @default("ready") @db.VarChar
    ldap_sync_error                                                                                        String?                                          @db.VarChar
    ldap_sync_last_update_at                                                                               DateTime?                                        @db.Timestamp(6)
    ldap_sync_last_successful_update_at                                                                    DateTime?                                        @db.Timestamp(6)
    ldap_sync_last_sync_at                                                                                 DateTime?                                        @db.Timestamp(6)
    description_html                                                                                       String?
    lfs_enabled                                                                                            Boolean?
    parent_id                                                                                              Int?
    shared_runners_minutes_limit                                                                           Int?
    repository_size_limit                                                                                  BigInt?
    require_two_factor_authentication                                                                      Boolean                                          @default(false)
    two_factor_grace_period                                                                                Int                                              @default(48)
    cached_markdown_version                                                                                Int?
    project_creation_level                                                                                 Int?
    runners_token                                                                                          String?                                          @unique(map: "index_namespaces_on_runners_token") @db.VarChar
    file_template_project_id                                                                               Int?
    saml_discovery_token                                                                                   String?                                          @db.VarChar
    runners_token_encrypted                                                                                String?                                          @unique(map: "index_namespaces_on_runners_token_encrypted") @db.VarChar
    custom_project_templates_group_id                                                                      Int?
    auto_devops_enabled                                                                                    Boolean?
    extra_shared_runners_minutes_limit                                                                     Int?
    last_ci_minutes_notification_at                                                                        DateTime?                                        @db.Timestamptz(6)
    last_ci_minutes_usage_notification_level                                                               Int?
    subgroup_creation_level                                                                                Int?                                             @default(1)
    emails_disabled                                                                                        Boolean?
    max_pages_size                                                                                         Int?
    max_artifacts_size                                                                                     Int?
    mentions_disabled                                                                                      Boolean?
    default_branch_protection                                                                              Int?                                             @db.SmallInt
    unlock_membership_to_ldap                                                                              Boolean?
    max_personal_access_token_lifetime                                                                     Int?
    push_rule_id                                                                                           Int?                                             @unique(map: "index_namespaces_on_push_rule_id")
    shared_runners_enabled                                                                                 Boolean                                          @default(true)
    allow_descendants_override_disabled_shared_runners                                                     Boolean                                          @default(false)
    traversal_ids                                                                                          Int[]
    tmp_project_id                                                                                         Int?                                             @unique(map: "tmp_index_on_tmp_project_id_on_namespaces")
    namespaces                                                                                             namespaces?                                      @relation("namespacesTonamespaces_custom_project_templates_group_id", fields: [custom_project_templates_group_id], references: [id], onUpdate: NoAction, map: "fk_e7a0b20a6b")
    projects_namespaces_file_template_project_idToprojects                                                 projects?                                        @relation("namespaces_file_template_project_idToprojects", fields: [file_template_project_id], references: [id], onUpdate: NoAction, map: "fk_319256d87a")
    push_rules                                                                                             push_rules?                                      @relation(fields: [push_rule_id], references: [id], onUpdate: NoAction, map: "fk_3448c97865")
    projects_namespaces_tmp_project_idToprojects                                                           projects?                                        @relation("namespaces_tmp_project_idToprojects", fields: [tmp_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_6a77f66919")
    agent_group_authorizations                                                                             agent_group_authorizations[]
    allowed_email_domains                                                                                  allowed_email_domains[]
    analytics_cycle_analytics_aggregations                                                                 analytics_cycle_analytics_aggregations?
    analytics_cycle_analytics_group_stages                                                                 analytics_cycle_analytics_group_stages[]
    analytics_cycle_analytics_group_value_streams                                                          analytics_cycle_analytics_group_value_streams[]
    analytics_devops_adoption_segments_analytics_devops_adoption_segments_display_namespace_idTonamespaces analytics_devops_adoption_segments[]             @relation("analytics_devops_adoption_segments_display_namespace_idTonamespaces")
    analytics_devops_adoption_segments_analytics_devops_adoption_segments_namespace_idTonamespaces         analytics_devops_adoption_segments[]             @relation("analytics_devops_adoption_segments_namespace_idTonamespaces")
    analytics_devops_adoption_snapshots                                                                    analytics_devops_adoption_snapshots[]
    application_settings_application_settings_custom_project_templates_group_idTonamespaces                application_settings[]                           @relation("application_settings_custom_project_templates_group_idTonamespaces")
    application_settings_application_settings_instance_administrators_group_idTonamespaces                 application_settings[]                           @relation("application_settings_instance_administrators_group_idTonamespaces")
    approval_merge_request_rules_groups                                                                    approval_merge_request_rules_groups[]
    approval_project_rules_groups                                                                          approval_project_rules_groups[]
    approver_groups                                                                                        approver_groups[]
    audit_events_external_audit_event_destinations                                                         audit_events_external_audit_event_destinations[]
    badges                                                                                                 badges[]
    board_group_recent_visits                                                                              board_group_recent_visits[]
    boards                                                                                                 boards[]
    boards_epic_board_recent_visits                                                                        boards_epic_board_recent_visits[]
    boards_epic_boards                                                                                     boards_epic_boards[]
    bulk_import_entities                                                                                   bulk_import_entities[]
    bulk_import_exports                                                                                    bulk_import_exports[]
    chat_teams                                                                                             chat_teams?
    cluster_groups                                                                                         cluster_groups[]
    compliance_management_frameworks                                                                       compliance_management_frameworks[]
    custom_emoji                                                                                           custom_emoji[]
    customer_relations_contacts                                                                            customer_relations_contacts[]
    customer_relations_organizations                                                                       customer_relations_organizations[]
    dependency_proxy_blobs                                                                                 dependency_proxy_blobs[]
    dependency_proxy_group_settings                                                                        dependency_proxy_group_settings[]
    dependency_proxy_image_ttl_group_policies                                                              dependency_proxy_image_ttl_group_policies?
    dependency_proxy_manifests                                                                             dependency_proxy_manifests[]
    elasticsearch_indexed_namespaces                                                                       elasticsearch_indexed_namespaces?
    epics                                                                                                  epics[]
    events                                                                                                 events[]
    experiment_subjects                                                                                    experiment_subjects[]
    geo_node_namespace_links                                                                               geo_node_namespace_links[]
    gitlab_subscriptions                                                                                   gitlab_subscriptions?
    group_crm_settings                                                                                     group_crm_settings?
    group_custom_attributes                                                                                group_custom_attributes[]
    group_deletion_schedules                                                                               group_deletion_schedules?
    group_deploy_keys_groups                                                                               group_deploy_keys_groups[]
    group_deploy_tokens                                                                                    group_deploy_tokens[]
    group_group_links_group_group_links_shared_group_idTonamespaces                                        group_group_links[]                              @relation("group_group_links_shared_group_idTonamespaces")
    group_group_links_group_group_links_shared_with_group_idTonamespaces                                   group_group_links[]                              @relation("group_group_links_shared_with_group_idTonamespaces")
    group_import_states                                                                                    group_import_states?
    group_merge_request_approval_settings                                                                  group_merge_request_approval_settings?
    group_repository_storage_moves                                                                         group_repository_storage_moves[]
    group_wiki_repositories                                                                                group_wiki_repositories?
    import_export_uploads                                                                                  import_export_uploads[]
    import_failures                                                                                        import_failures[]
    insights                                                                                               insights[]
    integrations                                                                                           integrations[]
    internal_ids                                                                                           internal_ids[]
    ip_restrictions                                                                                        ip_restrictions[]
    iterations_cadences                                                                                    iterations_cadences[]
    jira_connect_subscriptions                                                                             jira_connect_subscriptions[]
    labels                                                                                                 labels[]
    members                                                                                                members[]
    milestones                                                                                             milestones[]
    namespace_admin_notes                                                                                  namespace_admin_notes[]
    namespace_aggregation_schedules                                                                        namespace_aggregation_schedules?
    namespace_limits                                                                                       namespace_limits?
    namespace_package_settings                                                                             namespace_package_settings?
    namespace_root_storage_statistics                                                                      namespace_root_storage_statistics?
    namespace_settings                                                                                     namespace_settings?
    namespace_statistics                                                                                   namespace_statistics?
    other_namespaces                                                                                       namespaces[]                                     @relation("namespacesTonamespaces_custom_project_templates_group_id")
    namespaces_sync_events                                                                                 namespaces_sync_events[]
    onboarding_progresses                                                                                  onboarding_progresses?
    packages_composer_cache_files                                                                          packages_composer_cache_files[]
    packages_debian_group_distributions                                                                    packages_debian_group_distributions[]
    projects_namespacesToprojects_namespace_id                                                             projects[]                                       @relation("namespacesToprojects_namespace_id")
    projects_namespacesToprojects_project_namespace_id                                                     projects?                                        @relation("namespacesToprojects_project_namespace_id")
    protected_branch_merge_access_levels                                                                   protected_branch_merge_access_levels[]
    protected_branch_push_access_levels                                                                    protected_branch_push_access_levels[]
    protected_branch_unprotect_access_levels                                                               protected_branch_unprotect_access_levels[]
    protected_environment_approval_rules                                                                   protected_environment_approval_rules[]
    protected_environment_deploy_access_levels                                                             protected_environment_deploy_access_levels[]
    protected_environments                                                                                 protected_environments[]
    protected_tag_create_access_levels                                                                     protected_tag_create_access_levels[]
    routes                                                                                                 routes?
    saml_group_links                                                                                       saml_group_links[]
    saml_providers                                                                                         saml_providers[]
    scim_identities                                                                                        scim_identities?
    scim_oauth_access_tokens                                                                               scim_oauth_access_tokens[]
    security_orchestration_policy_configurations                                                           security_orchestration_policy_configurations[]
    sprints                                                                                                sprints[]
    todos                                                                                                  todos[]
    upcoming_reconciliations                                                                               upcoming_reconciliations?
    user_details                                                                                           user_details[]
    user_group_callouts                                                                                    user_group_callouts[]
    users                                                                                                  users[]
    vulnerability_exports                                                                                  vulnerability_exports[]
    web_hooks                                                                                              web_hooks[]
    work_item_types                                                                                        work_item_types?

    @@unique([name, parent_id, type], map: "index_namespaces_name_parent_id_type")
    @@unique([parent_id, id], map: "index_namespaces_on_parent_id_and_id")
    @@index([traversal_ids], map: "index_btree_namespaces_traversal_ids")
    @@index([created_at], map: "index_namespaces_on_created_at")
    @@index([file_template_project_id], map: "index_namespaces_on_file_template_project_id")
    @@index([ldap_sync_last_successful_update_at], map: "index_namespaces_on_ldap_sync_last_successful_update_at")
    @@index([ldap_sync_last_update_at], map: "index_namespaces_on_ldap_sync_last_update_at")
    @@index([name], map: "index_namespaces_on_name_trigram")
    @@index([owner_id], map: "index_namespaces_on_owner_id")
    @@index([path], map: "index_namespaces_on_path")
    @@index([path], map: "index_namespaces_on_path_trigram")
    @@index([require_two_factor_authentication], map: "index_namespaces_on_require_two_factor_authentication")
    @@index([shared_runners_minutes_limit, extra_shared_runners_minutes_limit], map: "index_namespaces_on_shared_and_extra_runners_minutes_limit")
    @@index([traversal_ids], map: "index_namespaces_on_traversal_ids")
    @@index([type, id], map: "index_namespaces_on_type_and_id")
}

model namespaces_sync_events {
    id           BigInt     @id @default(autoincrement())
    namespace_id Int
    namespaces   namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9da32a0431")

    @@index([namespace_id], map: "index_namespaces_sync_events_on_namespace_id")
}

model note_diff_files {
    id           Int     @id @default(autoincrement())
    diff_note_id Int     @unique(map: "index_note_diff_files_on_diff_note_id")
    diff         String
    new_file     Boolean
    renamed_file Boolean
    deleted_file Boolean
    a_mode       String  @db.VarChar
    b_mode       String  @db.VarChar
    new_path     String
    old_path     String
    notes        notes   @relation(fields: [diff_note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3d66047aeb")
}

model notes {
    id                                   Int                                    @id @default(autoincrement())
    note                                 String?
    noteable_type                        String?                                @db.VarChar
    author_id                            Int?
    created_at                           DateTime?                              @db.Timestamp(6)
    updated_at                           DateTime?                              @db.Timestamp(6)
    project_id                           Int?
    attachment                           String?                                @db.VarChar
    line_code                            String?                                @db.VarChar
    commit_id                            String?                                @db.VarChar
    noteable_id                          Int?
    system                               Boolean                                @default(false)
    st_diff                              String?
    updated_by_id                        Int?
    type                                 String?                                @db.VarChar
    position                             String?
    original_position                    String?
    resolved_at                          DateTime?                              @db.Timestamp(6)
    resolved_by_id                       Int?
    discussion_id                        String?                                @db.VarChar
    note_html                            String?
    cached_markdown_version              Int?
    change_position                      String?
    resolved_by_push                     Boolean?
    review_id                            BigInt?
    confidential                         Boolean?
    last_edited_at                       DateTime?                              @db.Timestamptz(6)
    projects                             projects?                              @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_99e097b079")
    reviews                              reviews?                               @relation(fields: [review_id], references: [id], onUpdate: NoAction, map: "fk_2e82291620")
    alert_management_alert_user_mentions alert_management_alert_user_mentions[]
    commit_user_mentions                 commit_user_mentions?
    design_user_mentions                 design_user_mentions?
    diff_note_positions                  diff_note_positions[]
    epic_user_mentions                   epic_user_mentions[]
    incident_management_timeline_events  incident_management_timeline_events[]
    issue_user_mentions                  issue_user_mentions[]
    merge_request_user_mentions          merge_request_user_mentions[]
    note_diff_files                      note_diff_files?
    snippet_user_mentions                snippet_user_mentions[]
    suggestions                          suggestions[]
    system_note_metadata                 system_note_metadata?
    timelogs                             timelogs[]
    todos                                todos[]
    vulnerability_user_mentions          vulnerability_user_mentions[]

    @@index([author_id, created_at, id], map: "index_notes_on_author_id_and_created_at_and_id")
    @@index([commit_id], map: "index_notes_on_commit_id")
    @@index([created_at], map: "index_notes_on_created_at")
    @@index([discussion_id], map: "index_notes_on_discussion_id")
    @@index([line_code], map: "index_notes_on_line_code")
    @@index([noteable_id, noteable_type, system], map: "index_notes_on_noteable_id_and_noteable_type_and_system")
    @@index([project_id, noteable_type], map: "index_notes_on_project_id_and_noteable_type")
    @@index([review_id], map: "index_notes_on_review_id")
}

model notification_settings {
    id                            Int      @id @default(autoincrement())
    user_id                       Int
    source_id                     Int?
    source_type                   String?  @db.VarChar
    level                         Int      @default(0)
    created_at                    DateTime @db.Timestamp(6)
    updated_at                    DateTime @db.Timestamp(6)
    new_note                      Boolean?
    new_issue                     Boolean?
    reopen_issue                  Boolean?
    close_issue                   Boolean?
    reassign_issue                Boolean?
    new_merge_request             Boolean?
    reopen_merge_request          Boolean?
    close_merge_request           Boolean?
    reassign_merge_request        Boolean?
    merge_merge_request           Boolean?
    failed_pipeline               Boolean?
    success_pipeline              Boolean?
    push_to_merge_request         Boolean?
    issue_due                     Boolean?
    new_epic                      Boolean?
    notification_email            String?  @db.VarChar
    fixed_pipeline                Boolean?
    new_release                   Boolean?
    moved_project                 Boolean  @default(true)
    change_reviewer_merge_request Boolean?
    merge_when_pipeline_succeeds  Boolean  @default(false)
    users                         users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0c95e91db7")

    @@unique([user_id, source_id, source_type], map: "index_notifications_on_user_id_and_source_id_and_source_type")
    @@index([source_id, source_type, level, user_id], map: "index_notification_settings_on_source_and_level_and_user")
}

model oauth_access_grants {
    id                    Int                     @id @default(autoincrement())
    resource_owner_id     Int
    application_id        Int
    token                 String                  @unique(map: "index_oauth_access_grants_on_token") @db.VarChar
    expires_in            Int
    redirect_uri          String
    created_at            DateTime                @db.Timestamp(6)
    revoked_at            DateTime?               @db.Timestamp(6)
    scopes                String?                 @db.VarChar
    code_challenge        String?
    code_challenge_method String?
    oauth_openid_requests oauth_openid_requests[]

    @@index([resource_owner_id, application_id, created_at], map: "index_oauth_access_grants_on_resource_owner_id")
}

model oauth_access_tokens {
    id                Int       @id @default(autoincrement())
    resource_owner_id Int?
    application_id    Int?
    token             String    @unique(map: "index_oauth_access_tokens_on_token") @db.VarChar
    refresh_token     String?   @unique(map: "index_oauth_access_tokens_on_refresh_token") @db.VarChar
    expires_in        Int?
    revoked_at        DateTime? @db.Timestamp(6)
    created_at        DateTime  @db.Timestamp(6)
    scopes            String?   @db.VarChar

    @@index([application_id], map: "index_oauth_access_tokens_on_application_id")
    @@index([resource_owner_id], map: "index_oauth_access_tokens_on_resource_owner_id")
}

model oauth_applications {
    id                            Int                             @id @default(autoincrement())
    name                          String                          @db.VarChar
    uid                           String                          @unique(map: "index_oauth_applications_on_uid") @db.VarChar
    secret                        String                          @db.VarChar
    redirect_uri                  String
    scopes                        String                          @default("") @db.VarChar
    created_at                    DateTime?                       @db.Timestamp(6)
    updated_at                    DateTime?                       @db.Timestamp(6)
    owner_id                      Int?
    owner_type                    String?                         @db.VarChar
    trusted                       Boolean                         @default(false)
    confidential                  Boolean                         @default(true)
    expire_access_tokens          Boolean                         @default(false)
    clusters_applications_jupyter clusters_applications_jupyter[]

    @@index([owner_id, owner_type], map: "index_oauth_applications_on_owner_id_and_owner_type")
}

model oauth_openid_requests {
    id                  Int                 @id @default(autoincrement())
    access_grant_id     Int
    nonce               String              @db.VarChar
    oauth_access_grants oauth_access_grants @relation(fields: [access_grant_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_77114b3b09")

    @@index([access_grant_id], map: "index_oauth_openid_requests_on_access_grant_id")
}

model onboarding_progresses {
    id                                   BigInt     @id @default(autoincrement())
    namespace_id                         Int        @unique(map: "index_onboarding_progresses_on_namespace_id")
    created_at                           DateTime   @db.Timestamptz(6)
    updated_at                           DateTime   @db.Timestamptz(6)
    git_pull_at                          DateTime?  @db.Timestamptz(6)
    git_write_at                         DateTime?  @db.Timestamptz(6)
    merge_request_created_at             DateTime?  @db.Timestamptz(6)
    pipeline_created_at                  DateTime?  @db.Timestamptz(6)
    user_added_at                        DateTime?  @db.Timestamptz(6)
    trial_started_at                     DateTime?  @db.Timestamptz(6)
    subscription_created_at              DateTime?  @db.Timestamptz(6)
    required_mr_approvals_enabled_at     DateTime?  @db.Timestamptz(6)
    code_owners_enabled_at               DateTime?  @db.Timestamptz(6)
    scoped_label_created_at              DateTime?  @db.Timestamptz(6)
    security_scan_enabled_at             DateTime?  @db.Timestamptz(6)
    issue_auto_closed_at                 DateTime?  @db.Timestamptz(6)
    repository_imported_at               DateTime?  @db.Timestamptz(6)
    repository_mirrored_at               DateTime?  @db.Timestamptz(6)
    issue_created_at                     DateTime?  @db.Timestamptz(6)
    secure_dependency_scanning_run_at    DateTime?  @db.Timestamptz(6)
    secure_container_scanning_run_at     DateTime?  @db.Timestamptz(6)
    secure_dast_run_at                   DateTime?  @db.Timestamptz(6)
    secure_secret_detection_run_at       DateTime?  @db.Timestamptz(6)
    secure_coverage_fuzzing_run_at       DateTime?  @db.Timestamptz(6)
    secure_cluster_image_scanning_run_at DateTime?  @db.Timestamptz(6)
    secure_api_fuzzing_run_at            DateTime?  @db.Timestamptz(6)
    namespaces                           namespaces @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2ccfd420cc")
}

model operations_feature_flag_scopes {
    id                       BigInt                   @id @default(autoincrement())
    feature_flag_id          BigInt
    created_at               DateTime                 @db.Timestamptz(6)
    updated_at               DateTime                 @db.Timestamptz(6)
    active                   Boolean
    environment_scope        String                   @default("*") @db.VarChar
    strategies               Json                     @default("[{\"name\": \"default\", \"parameters\": {}}]")
    operations_feature_flags operations_feature_flags @relation(fields: [feature_flag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a50a04d0a4")

    @@unique([feature_flag_id, environment_scope], map: "index_feature_flag_scopes_on_flag_id_and_environment_scope")
}

model operations_feature_flags {
    id                              BigInt                            @id @default(autoincrement())
    project_id                      Int
    active                          Boolean
    created_at                      DateTime                          @db.Timestamptz(6)
    updated_at                      DateTime                          @db.Timestamptz(6)
    name                            String                            @db.VarChar
    description                     String?
    iid                             Int
    version                         Int                               @default(1) @db.SmallInt
    projects                        projects                          @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_648e241be7")
    operations_feature_flag_scopes  operations_feature_flag_scopes[]
    operations_feature_flags_issues operations_feature_flags_issues[]
    operations_strategies           operations_strategies[]

    @@unique([project_id, iid], map: "index_operations_feature_flags_on_project_id_and_iid")
    @@unique([project_id, name], map: "index_operations_feature_flags_on_project_id_and_name")
}

model operations_feature_flags_clients {
    id              BigInt   @id @default(autoincrement())
    project_id      Int
    token_encrypted String?  @db.VarChar
    projects        projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6650ed902c")

    @@unique([project_id, token_encrypted], map: "index_feature_flags_clients_on_project_id_and_token_encrypted")
}

model operations_feature_flags_issues {
    id                       BigInt                   @id @default(autoincrement())
    feature_flag_id          BigInt
    issue_id                 Int
    operations_feature_flags operations_feature_flags @relation(fields: [feature_flag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6a8856ca4f")
    issues                   issues                   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fb4d2a7cb1")

    @@unique([feature_flag_id, issue_id], map: "index_ops_feature_flags_issues_on_feature_flag_id_and_issue_id")
    @@index([issue_id], map: "index_operations_feature_flags_issues_on_issue_id")
}

model operations_scopes {
    id                    BigInt                @id @default(autoincrement())
    strategy_id           BigInt
    environment_scope     String                @db.VarChar(255)
    operations_strategies operations_strategies @relation(fields: [strategy_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_7a9358853b")

    @@unique([strategy_id, environment_scope], map: "index_operations_scopes_on_strategy_id_and_environment_scope")
}

model operations_strategies {
    id                               BigInt                             @id @default(autoincrement())
    feature_flag_id                  BigInt
    name                             String                             @db.VarChar(255)
    parameters                       Json                               @default("{}")
    operations_feature_flags         operations_feature_flags           @relation(fields: [feature_flag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d183b6e6dd")
    operations_scopes                operations_scopes[]
    operations_strategies_user_lists operations_strategies_user_lists[]

    @@index([feature_flag_id], map: "index_operations_strategies_on_feature_flag_id")
}

model operations_strategies_user_lists {
    id                    BigInt                @id @default(autoincrement())
    strategy_id           BigInt
    user_list_id          BigInt
    operations_strategies operations_strategies @relation(fields: [strategy_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_43241e8d29")
    operations_user_lists operations_user_lists @relation(fields: [user_list_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ccb7e4bc0b")

    @@unique([strategy_id, user_list_id], map: "index_ops_strategies_user_lists_on_strategy_id_and_user_list_id")
    @@index([user_list_id], map: "index_operations_strategies_user_lists_on_user_list_id")
}

model operations_user_lists {
    id                               BigInt                             @id @default(autoincrement())
    project_id                       Int
    created_at                       DateTime                           @db.Timestamptz(6)
    updated_at                       DateTime                           @db.Timestamptz(6)
    iid                              Int
    name                             String                             @db.VarChar(255)
    user_xids                        String                             @default("")
    projects                         projects                           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0c716e079b")
    operations_strategies_user_lists operations_strategies_user_lists[]

    @@unique([project_id, iid], map: "index_operations_user_lists_on_project_id_and_iid")
    @@unique([project_id, name], map: "index_operations_user_lists_on_project_id_and_name")
}

model packages_build_infos {
    id                BigInt            @id @default(autoincrement())
    package_id        BigInt
    pipeline_id       Int?
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b18868292d")

    @@index([pipeline_id], map: "index_packages_build_infos_on_pipeline_id")
    @@index([package_id, pipeline_id], map: "index_packages_build_infos_package_id_pipeline_id")
}

model packages_composer_cache_files {
    id           BigInt      @id @default(autoincrement())
    created_at   DateTime    @db.Timestamptz(6)
    updated_at   DateTime    @db.Timestamptz(6)
    delete_at    DateTime?   @db.Timestamptz(6)
    namespace_id Int?
    file_store   Int         @default(1) @db.SmallInt
    file         String
    file_sha256  Bytes
    namespaces   namespaces? @relation(fields: [namespace_id], references: [id], onUpdate: NoAction, map: "fk_rails_b82cea43a0")

    @@unique([namespace_id, file_sha256], map: "index_packages_composer_cache_namespace_and_sha")
    @@index([delete_at, id], map: "composer_cache_files_index_on_deleted_at")
}

model packages_composer_metadata {
    package_id        BigInt            @id
    target_sha        Bytes
    composer_json     Json              @default("{}")
    version_cache_sha Bytes?
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ad48c2e5bb")

    @@unique([package_id, target_sha], map: "index_packages_composer_metadata_on_package_id_and_target_sha")
}

model packages_conan_file_metadata {
    id                      BigInt                 @id @default(autoincrement())
    package_file_id         BigInt                 @unique(map: "index_packages_conan_file_metadata_on_package_file_id")
    created_at              DateTime               @db.Timestamptz(6)
    updated_at              DateTime               @db.Timestamptz(6)
    recipe_revision         String                 @default("0") @db.VarChar(255)
    package_revision        String?                @db.VarChar(255)
    conan_package_reference String?                @db.VarChar(255)
    conan_file_type         Int                    @db.SmallInt
    packages_package_files  packages_package_files @relation(fields: [package_file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0afabd9328")
}

model packages_conan_metadata {
    id                BigInt            @id @default(autoincrement())
    package_id        BigInt
    created_at        DateTime          @db.Timestamptz(6)
    updated_at        DateTime          @db.Timestamptz(6)
    package_username  String            @db.VarChar(255)
    package_channel   String            @db.VarChar(255)
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8c68cfec8b")

    @@unique([package_id, package_username, package_channel], map: "index_packages_conan_metadata_on_package_id_username_channel")
}

model packages_debian_file_metadata {
    created_at             DateTime               @db.Timestamptz(6)
    updated_at             DateTime               @db.Timestamptz(6)
    package_file_id        BigInt                 @id
    file_type              Int                    @db.SmallInt
    component              String?
    architecture           String?
    fields                 Json?
    packages_package_files packages_package_files @relation(fields: [package_file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1ae85be112")
}

model packages_debian_group_architectures {
    id                                    BigInt                                  @id @default(autoincrement())
    created_at                            DateTime                                @db.Timestamptz(6)
    updated_at                            DateTime                                @db.Timestamptz(6)
    distribution_id                       BigInt
    name                                  String
    packages_debian_group_distributions   packages_debian_group_distributions     @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ef667d1b03")
    packages_debian_group_component_files packages_debian_group_component_files[]

    @@unique([distribution_id, name], map: "uniq_pkgs_deb_grp_architectures_on_distribution_id_and_name")
}

model packages_debian_group_component_files {
    id                                  BigInt                               @id @default(autoincrement())
    created_at                          DateTime                             @db.Timestamptz(6)
    updated_at                          DateTime                             @db.Timestamptz(6)
    component_id                        BigInt
    architecture_id                     BigInt?
    size                                Int
    file_type                           Int                                  @db.SmallInt
    compression_type                    Int?                                 @db.SmallInt
    file_store                          Int                                  @default(1) @db.SmallInt
    file                                String
    file_md5                            Bytes
    file_sha256                         Bytes
    packages_debian_group_architectures packages_debian_group_architectures? @relation(fields: [architecture_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "fk_rails_2b8992dd83")
    packages_debian_group_components    packages_debian_group_components     @relation(fields: [component_id], references: [id], onUpdate: NoAction, map: "fk_rails_dd262386e9")

    @@index([architecture_id], map: "idx_packages_debian_group_component_files_on_architecture_id")
    @@index([component_id], map: "index_packages_debian_group_component_files_on_component_id")
}

model packages_debian_group_components {
    id                                    BigInt                                  @id @default(autoincrement())
    created_at                            DateTime                                @db.Timestamptz(6)
    updated_at                            DateTime                                @db.Timestamptz(6)
    distribution_id                       BigInt
    name                                  String
    packages_debian_group_distributions   packages_debian_group_distributions     @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f5f1ef54c6")
    packages_debian_group_component_files packages_debian_group_component_files[]

    @@unique([distribution_id, name], map: "uniq_pkgs_deb_grp_components_on_distribution_id_and_name")
}

model packages_debian_group_distribution_keys {
    id                                  BigInt                              @id @default(autoincrement())
    created_at                          DateTime                            @db.Timestamptz(6)
    updated_at                          DateTime                            @db.Timestamptz(6)
    distribution_id                     BigInt
    encrypted_private_key               String
    encrypted_private_key_iv            String
    encrypted_passphrase                String
    encrypted_passphrase_iv             String
    public_key                          String
    fingerprint                         String
    packages_debian_group_distributions packages_debian_group_distributions @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_779438f163")

    @@index([distribution_id], map: "idx_pkgs_debian_group_distribution_keys_on_distribution_id")
}

model packages_debian_group_distributions {
    id                                      BigInt                                    @id @default(autoincrement())
    created_at                              DateTime                                  @db.Timestamptz(6)
    updated_at                              DateTime                                  @db.Timestamptz(6)
    group_id                                Int
    creator_id                              Int?
    valid_time_duration_seconds             Int?
    file_store                              Int                                       @default(1) @db.SmallInt
    automatic                               Boolean                                   @default(true)
    automatic_upgrades                      Boolean                                   @default(false)
    codename                                String
    suite                                   String?
    origin                                  String?
    label                                   String?
    version                                 String?
    description                             String?
    file                                    String?
    file_signature                          String?
    signed_file                             String?
    signed_file_store                       Int                                       @default(1) @db.SmallInt
    users                                   users?                                    @relation(fields: [creator_id], references: [id], onUpdate: NoAction, map: "fk_rails_ede0bb937f")
    namespaces                              namespaces                                @relation(fields: [group_id], references: [id], onUpdate: NoAction, map: "fk_rails_0adf75c347")
    packages_debian_group_architectures     packages_debian_group_architectures[]
    packages_debian_group_components        packages_debian_group_components[]
    packages_debian_group_distribution_keys packages_debian_group_distribution_keys[]

    @@unique([group_id, codename], map: "uniq_pkgs_debian_group_distributions_group_id_and_codename")
    @@unique([group_id, suite], map: "uniq_pkgs_debian_group_distributions_group_id_and_suite")
    @@index([creator_id], map: "index_packages_debian_group_distributions_on_creator_id")
    @@index([group_id], map: "index_packages_debian_group_distributions_on_group_id")
}

model packages_debian_project_architectures {
    id                                      BigInt                                    @id @default(autoincrement())
    created_at                              DateTime                                  @db.Timestamptz(6)
    updated_at                              DateTime                                  @db.Timestamptz(6)
    distribution_id                         BigInt
    name                                    String
    packages_debian_project_distributions   packages_debian_project_distributions     @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5808663adf")
    packages_debian_project_component_files packages_debian_project_component_files[]

    @@unique([distribution_id, name], map: "uniq_pkgs_deb_proj_architectures_on_distribution_id_and_name")
}

model packages_debian_project_component_files {
    id                                    BigInt                                 @id @default(autoincrement())
    created_at                            DateTime                               @db.Timestamptz(6)
    updated_at                            DateTime                               @db.Timestamptz(6)
    component_id                          BigInt
    architecture_id                       BigInt?
    size                                  Int
    file_type                             Int                                    @db.SmallInt
    compression_type                      Int?                                   @db.SmallInt
    file_store                            Int                                    @default(1) @db.SmallInt
    file                                  String
    file_md5                              Bytes
    file_sha256                           Bytes
    packages_debian_project_architectures packages_debian_project_architectures? @relation(fields: [architecture_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "fk_rails_b543a9622b")
    packages_debian_project_components    packages_debian_project_components     @relation(fields: [component_id], references: [id], onUpdate: NoAction, map: "fk_rails_bbe9ebfbd9")

    @@index([architecture_id], map: "idx_packages_debian_project_component_files_on_architecture_id")
    @@index([component_id], map: "index_packages_debian_project_component_files_on_component_id")
}

model packages_debian_project_components {
    id                                      BigInt                                    @id @default(autoincrement())
    created_at                              DateTime                                  @db.Timestamptz(6)
    updated_at                              DateTime                                  @db.Timestamptz(6)
    distribution_id                         BigInt
    name                                    String
    packages_debian_project_distributions   packages_debian_project_distributions     @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9d072b5073")
    packages_debian_project_component_files packages_debian_project_component_files[]

    @@unique([distribution_id, name], map: "uniq_pkgs_deb_proj_components_on_distribution_id_and_name")
}

model packages_debian_project_distribution_keys {
    id                                    BigInt                                @id @default(autoincrement())
    created_at                            DateTime                              @db.Timestamptz(6)
    updated_at                            DateTime                              @db.Timestamptz(6)
    distribution_id                       BigInt
    encrypted_private_key                 String
    encrypted_private_key_iv              String
    encrypted_passphrase                  String
    encrypted_passphrase_iv               String
    public_key                            String
    fingerprint                           String
    packages_debian_project_distributions packages_debian_project_distributions @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3834a11264")

    @@index([distribution_id], map: "idx_pkgs_debian_project_distribution_keys_on_distribution_id")
}

model packages_debian_project_distributions {
    id                                        BigInt                                      @id @default(autoincrement())
    created_at                                DateTime                                    @db.Timestamptz(6)
    updated_at                                DateTime                                    @db.Timestamptz(6)
    project_id                                Int
    creator_id                                Int?
    valid_time_duration_seconds               Int?
    file_store                                Int                                         @default(1) @db.SmallInt
    automatic                                 Boolean                                     @default(true)
    automatic_upgrades                        Boolean                                     @default(false)
    codename                                  String
    suite                                     String?
    origin                                    String?
    label                                     String?
    version                                   String?
    description                               String?
    file                                      String?
    file_signature                            String?
    signed_file                               String?
    signed_file_store                         Int                                         @default(1) @db.SmallInt
    users                                     users?                                      @relation(fields: [creator_id], references: [id], onUpdate: NoAction, map: "fk_rails_94b95e1f84")
    projects                                  projects                                    @relation(fields: [project_id], references: [id], onUpdate: NoAction, map: "fk_rails_df44271a30")
    packages_debian_project_architectures     packages_debian_project_architectures[]
    packages_debian_project_components        packages_debian_project_components[]
    packages_debian_project_distribution_keys packages_debian_project_distribution_keys[]
    packages_debian_publications              packages_debian_publications[]

    @@unique([project_id, codename], map: "uniq_pkgs_debian_project_distributions_project_id_and_codename")
    @@unique([project_id, suite], map: "uniq_pkgs_debian_project_distributions_project_id_and_suite")
    @@index([creator_id], map: "index_packages_debian_project_distributions_on_creator_id")
    @@index([project_id], map: "index_packages_debian_project_distributions_on_project_id")
}

model packages_debian_publications {
    id                                    BigInt                                @id @default(autoincrement())
    package_id                            BigInt                                @unique(map: "index_packages_debian_publications_on_package_id")
    distribution_id                       BigInt
    packages_debian_project_distributions packages_debian_project_distributions @relation(fields: [distribution_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4fc8ebd03e")
    packages_packages                     packages_packages                     @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_7668c1d606")

    @@index([distribution_id], map: "index_packages_debian_publications_on_distribution_id")
}

model packages_dependencies {
    id                        BigInt                      @id @default(autoincrement())
    name                      String                      @db.VarChar(255)
    version_pattern           String                      @db.VarChar(255)
    packages_dependency_links packages_dependency_links[]

    @@unique([name, version_pattern], map: "index_packages_dependencies_on_name_and_version_pattern")
}

model packages_dependency_links {
    id                                      BigInt                                   @id @default(autoincrement())
    package_id                              BigInt
    dependency_id                           BigInt
    dependency_type                         Int                                      @db.SmallInt
    packages_dependencies                   packages_dependencies                    @relation(fields: [dependency_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4437bf4070")
    packages_packages                       packages_packages                        @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_96ef1c00d3")
    packages_nuget_dependency_link_metadata packages_nuget_dependency_link_metadata?

    @@unique([package_id, dependency_id, dependency_type], map: "idx_pkgs_dep_links_on_pkg_id_dependency_id_dependency_type")
    @@index([dependency_id], map: "index_packages_dependency_links_on_dependency_id")
}

model packages_events {
    id                BigInt             @id @default(autoincrement())
    event_type        Int                @db.SmallInt
    event_scope       Int                @db.SmallInt
    originator_type   Int                @db.SmallInt
    originator        BigInt?
    created_at        DateTime           @db.Timestamptz(6)
    package_id        BigInt?
    packages_packages packages_packages? @relation(fields: [package_id], references: [id], onUpdate: NoAction, map: "fk_rails_c6c20d0094")

    @@index([package_id], map: "index_packages_events_on_package_id")
}

model packages_helm_file_metadata {
    created_at             DateTime               @db.Timestamptz(6)
    updated_at             DateTime               @db.Timestamptz(6)
    package_file_id        BigInt                 @id
    channel                String
    metadata               Json?
    packages_package_files packages_package_files @relation(fields: [package_file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a559865345")

    @@index([channel], map: "index_packages_helm_file_metadata_on_channel")
    @@index([package_file_id, channel], map: "index_packages_helm_file_metadata_on_pf_id_and_channel")
}

model packages_maven_metadata {
    id                BigInt            @id @default(autoincrement())
    package_id        BigInt
    created_at        DateTime          @db.Timestamptz(6)
    updated_at        DateTime          @db.Timestamptz(6)
    app_group         String            @db.VarChar
    app_name          String            @db.VarChar
    app_version       String?           @db.VarChar
    path              String            @db.VarChar(512)
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_be88aed360")

    @@index([package_id, path], map: "index_packages_maven_metadata_on_package_id_and_path")
    @@index([path], map: "index_packages_maven_metadata_on_path")
}

model packages_npm_metadata {
    package_id        BigInt            @id
    package_json      Json              @default("{}")
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c0e5fce6f3")
}

model packages_nuget_dependency_link_metadata {
    dependency_link_id        BigInt                    @id
    target_framework          String
    packages_dependency_links packages_dependency_links @relation(fields: [dependency_link_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c3313ee2e4")

    @@index([dependency_link_id], map: "index_packages_nuget_dl_metadata_on_dependency_link_id")
}

model packages_nuget_metadata {
    package_id        BigInt            @id
    license_url       String?
    project_url       String?
    icon_url          String?
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fc0c19f5b4")
}

model packages_package_file_build_infos {
    id                     BigInt                 @id @default(autoincrement())
    package_file_id        BigInt
    pipeline_id            BigInt?
    packages_package_files packages_package_files @relation(fields: [package_file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_871ca3ae21")

    @@index([package_file_id], map: "index_packages_package_file_build_infos_on_package_file_id")
    @@index([pipeline_id], map: "index_packages_package_file_build_infos_on_pipeline_id")
}

model packages_package_files {
    id                                BigInt                              @id @default(autoincrement())
    package_id                        BigInt
    created_at                        DateTime                            @db.Timestamptz(6)
    updated_at                        DateTime                            @db.Timestamptz(6)
    size                              BigInt?
    file_store                        Int?                                @default(1)
    file_md5                          Bytes?
    file_sha1                         Bytes?
    file_name                         String                              @db.VarChar
    file                              String
    file_sha256                       Bytes?
    verification_retry_at             DateTime?                           @db.Timestamptz(6)
    verified_at                       DateTime?                           @db.Timestamptz(6)
    verification_failure              String?                             @db.VarChar(255)
    verification_retry_count          Int?
    verification_checksum             Bytes?
    verification_state                Int                                 @default(0) @db.SmallInt
    verification_started_at           DateTime?                           @db.Timestamptz(6)
    status                            Int                                 @default(0) @db.SmallInt
    packages_packages                 packages_packages                   @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_86f0f182f8")
    packages_conan_file_metadata      packages_conan_file_metadata?
    packages_debian_file_metadata     packages_debian_file_metadata?
    packages_helm_file_metadata       packages_helm_file_metadata?
    packages_package_file_build_infos packages_package_file_build_infos[]

    @@index([file_store], map: "index_packages_package_files_on_file_store")
    @@index([package_id, file_name], map: "index_packages_package_files_on_package_id_and_file_name")
    @@index([package_id, id], map: "index_packages_package_files_on_package_id_id")
    @@index([package_id, status, id], map: "index_packages_package_files_on_package_id_status_and_id")
    @@index([status], map: "index_packages_package_files_on_status")
    @@index([verification_state], map: "index_packages_package_files_on_verification_state")
}

model packages_packages {
    id                           BigInt                        @id @default(autoincrement())
    project_id                   Int
    created_at                   DateTime                      @db.Timestamptz(6)
    updated_at                   DateTime                      @db.Timestamptz(6)
    name                         String                        @db.VarChar
    version                      String?                       @db.VarChar
    package_type                 Int                           @db.SmallInt
    creator_id                   Int?
    status                       Int                           @default(0) @db.SmallInt
    users                        users?                        @relation(fields: [creator_id], references: [id], onUpdate: NoAction, map: "fk_c188f0dba4")
    projects                     projects                      @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e1ac527425")
    coverage_fuzzing_corpuses    coverage_fuzzing_corpuses?
    packages_build_infos         packages_build_infos[]
    packages_composer_metadata   packages_composer_metadata?
    packages_conan_metadata      packages_conan_metadata[]
    packages_debian_publications packages_debian_publications?
    packages_dependency_links    packages_dependency_links[]
    packages_events              packages_events[]
    packages_maven_metadata      packages_maven_metadata[]
    packages_npm_metadata        packages_npm_metadata?
    packages_nuget_metadata      packages_nuget_metadata?
    packages_package_files       packages_package_files[]
    packages_pypi_metadata       packages_pypi_metadata?
    packages_rubygems_metadata   packages_rubygems_metadata?
    packages_tags                packages_tags[]

    @@index([project_id, id], map: "idx_installable_helm_pkgs_on_project_id_id")
    @@index([project_id, name, version, package_type], map: "idx_packages_packages_on_project_id_name_version_package_type")
    @@index([creator_id], map: "index_packages_packages_on_creator_id")
    @@index([id, created_at], map: "index_packages_packages_on_id_and_created_at")
    @@index([name], map: "index_packages_packages_on_name_trigram")
    @@index([project_id, created_at], map: "index_packages_packages_on_project_id_and_created_at")
    @@index([project_id, package_type], map: "index_packages_packages_on_project_id_and_package_type")
    @@index([project_id, status], map: "index_packages_packages_on_project_id_and_status")
    @@index([project_id, version], map: "index_packages_packages_on_project_id_and_version")
    @@index([name], map: "package_name_index")
}

model packages_pypi_metadata {
    package_id        BigInt            @id
    required_python   String?           @default("")
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9698717cdd")
}

model packages_rubygems_metadata {
    created_at                DateTime          @db.Timestamptz(6)
    updated_at                DateTime          @db.Timestamptz(6)
    package_id                BigInt            @id
    authors                   String?
    files                     String?
    summary                   String?
    description               String?
    email                     String?
    homepage                  String?
    licenses                  String?
    metadata                  String?
    author                    String?
    bindir                    String?
    cert_chain                String?
    executables               String?
    extensions                String?
    extra_rdoc_files          String?
    platform                  String?
    post_install_message      String?
    rdoc_options              String?
    require_paths             String?
    required_ruby_version     String?
    required_rubygems_version String?
    requirements              String?
    rubygems_version          String?
    signing_key               String?
    packages_packages         packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_95a3f5ce78")
}

model packages_tags {
    id                BigInt            @id @default(autoincrement())
    package_id        BigInt
    name              String            @db.VarChar(255)
    created_at        DateTime          @db.Timestamptz(6)
    updated_at        DateTime          @db.Timestamptz(6)
    packages_packages packages_packages @relation(fields: [package_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1dfc868911")

    @@index([package_id], map: "index_packages_tags_on_package_id")
    @@index([package_id, updated_at], map: "index_packages_tags_on_package_id_and_updated_at")
}

model pages_deployment_states {
    pages_deployment_id      BigInt            @id @default(autoincrement())
    verification_state       Int               @default(0) @db.SmallInt
    verification_started_at  DateTime?         @db.Timestamptz(6)
    verification_retry_at    DateTime?         @db.Timestamptz(6)
    verified_at              DateTime?         @db.Timestamptz(6)
    verification_retry_count Int?              @db.SmallInt
    verification_checksum    Bytes?
    verification_failure     String?
    pages_deployments        pages_deployments @relation(fields: [pages_deployment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ff6ca551a4")

    @@index([pages_deployment_id], map: "index_pages_deployment_states_on_pages_deployment_id")
    @@index([verification_state], map: "index_pages_deployment_states_on_verification_state")
}

model pages_deployments {
    id                      BigInt                   @id @default(autoincrement())
    created_at              DateTime                 @db.Timestamptz(6)
    updated_at              DateTime                 @db.Timestamptz(6)
    project_id              Int
    ci_build_id             BigInt?
    file_store              Int                      @db.SmallInt
    file                    String
    file_count              Int
    file_sha256             Bytes
    size                    BigInt?
    projects                projects                 @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_993b88f59a")
    pages_deployment_states pages_deployment_states?
    project_pages_metadata  project_pages_metadata[]

    @@index([ci_build_id], map: "index_pages_deployments_on_ci_build_id")
    @@index([file_store, id], map: "index_pages_deployments_on_file_store_and_id")
    @@index([project_id], map: "index_pages_deployments_on_project_id")
}

model pages_domain_acme_orders {
    id                       BigInt        @id @default(autoincrement())
    pages_domain_id          Int
    expires_at               DateTime      @db.Timestamptz(6)
    created_at               DateTime      @db.Timestamptz(6)
    updated_at               DateTime      @db.Timestamptz(6)
    url                      String        @db.VarChar
    challenge_token          String        @db.VarChar
    challenge_file_content   String
    encrypted_private_key    String
    encrypted_private_key_iv String
    pages_domains            pages_domains @relation(fields: [pages_domain_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_76581b1c16")

    @@index([challenge_token], map: "index_pages_domain_acme_orders_on_challenge_token")
    @@index([pages_domain_id], map: "index_pages_domain_acme_orders_on_pages_domain_id")
}

model pages_domains {
    id                           Int                         @id @default(autoincrement())
    project_id                   Int?
    certificate                  String?
    encrypted_key                String?
    encrypted_key_iv             String?                     @db.VarChar
    encrypted_key_salt           String?                     @db.VarChar
    domain                       String?                     @db.VarChar
    verified_at                  DateTime?                   @db.Timestamptz(6)
    verification_code            String                      @db.VarChar
    enabled_until                DateTime?                   @db.Timestamptz(6)
    remove_at                    DateTime?                   @db.Timestamptz(6)
    auto_ssl_enabled             Boolean                     @default(false)
    certificate_valid_not_before DateTime?                   @db.Timestamptz(6)
    certificate_valid_not_after  DateTime?                   @db.Timestamptz(6)
    certificate_source           Int                         @default(0) @db.SmallInt
    wildcard                     Boolean                     @default(false)
    usage                        Int                         @default(0) @db.SmallInt
    scope                        Int                         @default(2) @db.SmallInt
    auto_ssl_failed              Boolean                     @default(false)
    projects                     projects?                   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ea2f6dfc6f")
    pages_domain_acme_orders     pages_domain_acme_orders[]
    serverless_domain_cluster    serverless_domain_cluster[]

    @@unique([domain, wildcard], map: "index_pages_domains_on_domain_and_wildcard")
    @@index([project_id], map: "index_pages_domains_on_project_id")
    @@index([project_id, enabled_until], map: "index_pages_domains_on_project_id_and_enabled_until")
    @@index([remove_at], map: "index_pages_domains_on_remove_at")
    @@index([scope], map: "index_pages_domains_on_scope")
    @@index([usage], map: "index_pages_domains_on_usage")
    @@index([verified_at], map: "index_pages_domains_on_verified_at")
    @@index([verified_at, enabled_until], map: "index_pages_domains_on_verified_at_and_enabled_until")
    @@index([wildcard], map: "index_pages_domains_on_wildcard")
}

model path_locks {
    id         Int       @id @default(autoincrement())
    path       String    @db.VarChar
    project_id Int?
    user_id    Int?
    created_at DateTime  @db.Timestamp(6)
    updated_at DateTime  @db.Timestamp(6)
    projects   projects? @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_5265c98f24")
    users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_path_locks_user_id")

    @@index([path], map: "index_path_locks_on_path")
    @@index([project_id], map: "index_path_locks_on_project_id")
    @@index([user_id], map: "index_path_locks_on_user_id")
}

model personal_access_tokens {
    id                                  Int                     @id @default(autoincrement())
    user_id                             Int
    name                                String                  @db.VarChar
    revoked                             Boolean?                @default(false)
    expires_at                          DateTime?               @db.Date
    created_at                          DateTime                @db.Timestamp(6)
    updated_at                          DateTime                @db.Timestamp(6)
    scopes                              String                  @default("--- []\n") @db.VarChar
    impersonation                       Boolean                 @default(false)
    token_digest                        String?                 @unique(map: "index_personal_access_tokens_on_token_digest") @db.VarChar
    expire_notification_delivered       Boolean                 @default(false)
    last_used_at                        DateTime?               @db.Timestamptz(6)
    after_expiry_notification_delivered Boolean                 @default(false)
    users                               users                   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_personal_access_tokens_user_id")
    project_access_tokens               project_access_tokens[]

    @@index([user_id, expires_at], map: "index_pat_on_user_id_and_expires_at")
    @@index([user_id], map: "index_personal_access_tokens_on_user_id")
}

model plan_limits {
    id                                              BigInt @id @default(autoincrement())
    plan_id                                         Int    @unique(map: "index_plan_limits_on_plan_id")
    ci_active_pipelines                             Int    @default(0)
    ci_pipeline_size                                Int    @default(0)
    ci_active_jobs                                  Int    @default(0)
    project_hooks                                   Int    @default(100)
    group_hooks                                     Int    @default(50)
    ci_project_subscriptions                        Int    @default(2)
    ci_pipeline_schedules                           Int    @default(10)
    offset_pagination_limit                         Int    @default(50000)
    ci_instance_level_variables                     Int    @default(25)
    storage_size_limit                              Int    @default(0)
    ci_max_artifact_size_lsif                       Int    @default(100)
    ci_max_artifact_size_archive                    Int    @default(0)
    ci_max_artifact_size_metadata                   Int    @default(0)
    ci_max_artifact_size_trace                      Int    @default(0)
    ci_max_artifact_size_junit                      Int    @default(0)
    ci_max_artifact_size_sast                       Int    @default(0)
    ci_max_artifact_size_dependency_scanning        Int    @default(350)
    ci_max_artifact_size_container_scanning         Int    @default(150)
    ci_max_artifact_size_dast                       Int    @default(0)
    ci_max_artifact_size_codequality                Int    @default(0)
    ci_max_artifact_size_license_management         Int    @default(0)
    ci_max_artifact_size_license_scanning           Int    @default(100)
    ci_max_artifact_size_performance                Int    @default(0)
    ci_max_artifact_size_metrics                    Int    @default(0)
    ci_max_artifact_size_metrics_referee            Int    @default(0)
    ci_max_artifact_size_network_referee            Int    @default(0)
    ci_max_artifact_size_dotenv                     Int    @default(0)
    ci_max_artifact_size_cobertura                  Int    @default(0)
    ci_max_artifact_size_terraform                  Int    @default(5)
    ci_max_artifact_size_accessibility              Int    @default(0)
    ci_max_artifact_size_cluster_applications       Int    @default(0)
    ci_max_artifact_size_secret_detection           Int    @default(0)
    ci_max_artifact_size_requirements               Int    @default(0)
    ci_max_artifact_size_coverage_fuzzing           Int    @default(0)
    ci_max_artifact_size_browser_performance        Int    @default(0)
    ci_max_artifact_size_load_performance           Int    @default(0)
    ci_needs_size_limit                             Int    @default(50)
    conan_max_file_size                             BigInt @default(3221225472)
    maven_max_file_size                             BigInt @default(3221225472)
    npm_max_file_size                               BigInt @default(524288000)
    nuget_max_file_size                             BigInt @default(524288000)
    pypi_max_file_size                              BigInt @default(3221225472)
    generic_packages_max_file_size                  BigInt @default(5368709120)
    golang_max_file_size                            BigInt @default(104857600)
    debian_max_file_size                            BigInt @default(3221225472)
    project_feature_flags                           Int    @default(200)
    ci_max_artifact_size_api_fuzzing                Int    @default(0)
    ci_pipeline_deployments                         Int    @default(500)
    pull_mirror_interval_seconds                    Int    @default(300)
    daily_invites                                   Int    @default(0)
    rubygems_max_file_size                          BigInt @default(3221225472)
    terraform_module_max_file_size                  BigInt @default(1073741824)
    helm_max_file_size                              BigInt @default(5242880)
    ci_registered_group_runners                     Int    @default(1000)
    ci_registered_project_runners                   Int    @default(1000)
    web_hook_calls                                  Int    @default(0)
    ci_daily_pipeline_schedule_triggers             Int    @default(0)
    ci_max_artifact_size_running_container_scanning Int    @default(0)
    ci_max_artifact_size_cluster_image_scanning     Int    @default(0)
    ci_jobs_trace_size_limit                        Int    @default(100)
    pages_file_entries                              Int    @default(200000)
    dast_profile_schedules                          Int    @default(1)
    external_audit_event_destinations               Int    @default(5)
    dotenv_variables                                Int    @default(20)
    dotenv_size                                     Int    @default(5120)
    pipeline_triggers                               Int    @default(25000)
    project_ci_secure_files                         Int    @default(100)
    plans                                           plans  @relation(fields: [plan_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_69f8b6184f")
}

model plans {
    id                   Int                    @id @default(autoincrement())
    created_at           DateTime               @db.Timestamp(6)
    updated_at           DateTime               @db.Timestamp(6)
    name                 String?                @unique(map: "index_plans_on_name") @db.VarChar
    title                String?                @db.VarChar
    gitlab_subscriptions gitlab_subscriptions[]
    plan_limits          plan_limits?
}

model pool_repositories {
    id                                                      BigInt     @id @default(autoincrement())
    shard_id                                                Int
    disk_path                                               String?    @unique(map: "index_pool_repositories_on_disk_path") @db.VarChar
    state                                                   String?    @db.VarChar
    source_project_id                                       Int?
    shards                                                  shards     @relation(fields: [shard_id], references: [id], onUpdate: NoAction, map: "fk_rails_af3f8c5d62")
    projects_pool_repositories_source_project_idToprojects  projects?  @relation("pool_repositories_source_project_idToprojects", fields: [source_project_id], references: [id], onUpdate: NoAction, map: "fk_rails_d2711daad4")
    projects_pool_repositoriesToprojects_pool_repository_id projects[] @relation("pool_repositoriesToprojects_pool_repository_id")

    @@unique([source_project_id, shard_id], map: "index_pool_repositories_on_source_project_id_and_shard_id")
    @@index([shard_id], map: "index_pool_repositories_on_shard_id")
}

model postgres_async_indexes {
    id         BigInt   @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    name       String   @unique(map: "index_postgres_async_indexes_on_name")
    definition String
    table_name String
}

model postgres_reindex_actions {
    id                         BigInt    @id @default(autoincrement())
    action_start               DateTime  @db.Timestamptz(6)
    action_end                 DateTime? @db.Timestamptz(6)
    ondisk_size_bytes_start    BigInt
    ondisk_size_bytes_end      BigInt?
    state                      Int       @default(0) @db.SmallInt
    index_identifier           String
    bloat_estimate_bytes_start BigInt?

    @@index([index_identifier], map: "index_postgres_reindex_actions_on_index_identifier")
}

model postgres_reindex_queued_actions {
    id               BigInt   @id @default(autoincrement())
    index_identifier String
    state            Int      @default(0) @db.SmallInt
    created_at       DateTime @default(now()) @db.Timestamptz(6)
    updated_at       DateTime @default(now()) @db.Timestamptz(6)

    @@index([state], map: "index_postgres_reindex_queued_actions_on_state")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model product_analytics_events_experimental {
    id                       BigInt    @default(autoincrement())
    project_id               Int
    platform                 String?   @db.VarChar(255)
    etl_tstamp               DateTime? @db.Timestamptz(6)
    collector_tstamp         DateTime  @db.Timestamptz(6)
    dvce_created_tstamp      DateTime? @db.Timestamptz(6)
    event                    String?   @db.VarChar(128)
    event_id                 String    @db.Char(36)
    txn_id                   Int?
    name_tracker             String?   @db.VarChar(128)
    v_tracker                String?   @db.VarChar(100)
    v_collector              String    @db.VarChar(100)
    v_etl                    String    @db.VarChar(100)
    user_id                  String?   @db.VarChar(255)
    user_ipaddress           String?   @db.VarChar(45)
    user_fingerprint         String?   @db.VarChar(50)
    domain_userid            String?   @db.VarChar(36)
    domain_sessionidx        Int?      @db.SmallInt
    network_userid           String?   @db.VarChar(38)
    geo_country              String?   @db.Char(2)
    geo_region               String?   @db.Char(3)
    geo_city                 String?   @db.VarChar(75)
    geo_zipcode              String?   @db.VarChar(15)
    geo_latitude             Float?
    geo_longitude            Float?
    geo_region_name          String?   @db.VarChar(100)
    ip_isp                   String?   @db.VarChar(100)
    ip_organization          String?   @db.VarChar(100)
    ip_domain                String?   @db.VarChar(100)
    ip_netspeed              String?   @db.VarChar(100)
    page_url                 String?
    page_title               String?   @db.VarChar(2000)
    page_referrer            String?
    page_urlscheme           String?   @db.VarChar(16)
    page_urlhost             String?   @db.VarChar(255)
    page_urlport             Int?
    page_urlpath             String?   @db.VarChar(3000)
    page_urlquery            String?   @db.VarChar(6000)
    page_urlfragment         String?   @db.VarChar(3000)
    refr_urlscheme           String?   @db.VarChar(16)
    refr_urlhost             String?   @db.VarChar(255)
    refr_urlport             Int?
    refr_urlpath             String?   @db.VarChar(6000)
    refr_urlquery            String?   @db.VarChar(6000)
    refr_urlfragment         String?   @db.VarChar(3000)
    refr_medium              String?   @db.VarChar(25)
    refr_source              String?   @db.VarChar(50)
    refr_term                String?   @db.VarChar(255)
    mkt_medium               String?   @db.VarChar(255)
    mkt_source               String?   @db.VarChar(255)
    mkt_term                 String?   @db.VarChar(255)
    mkt_content              String?   @db.VarChar(500)
    mkt_campaign             String?   @db.VarChar(255)
    se_category              String?   @db.VarChar(1000)
    se_action                String?   @db.VarChar(1000)
    se_label                 String?   @db.VarChar(1000)
    se_property              String?   @db.VarChar(1000)
    se_value                 Float?
    tr_orderid               String?   @db.VarChar(255)
    tr_affiliation           String?   @db.VarChar(255)
    tr_total                 Decimal?  @db.Decimal(18, 2)
    tr_tax                   Decimal?  @db.Decimal(18, 2)
    tr_shipping              Decimal?  @db.Decimal(18, 2)
    tr_city                  String?   @db.VarChar(255)
    tr_state                 String?   @db.VarChar(255)
    tr_country               String?   @db.VarChar(255)
    ti_orderid               String?   @db.VarChar(255)
    ti_sku                   String?   @db.VarChar(255)
    ti_name                  String?   @db.VarChar(255)
    ti_category              String?   @db.VarChar(255)
    ti_price                 Decimal?  @db.Decimal(18, 2)
    ti_quantity              Int?
    pp_xoffset_min           Int?
    pp_xoffset_max           Int?
    pp_yoffset_min           Int?
    pp_yoffset_max           Int?
    useragent                String?   @db.VarChar(1000)
    br_name                  String?   @db.VarChar(50)
    br_family                String?   @db.VarChar(50)
    br_version               String?   @db.VarChar(50)
    br_type                  String?   @db.VarChar(50)
    br_renderengine          String?   @db.VarChar(50)
    br_lang                  String?   @db.VarChar(255)
    br_features_pdf          Boolean?
    br_features_flash        Boolean?
    br_features_java         Boolean?
    br_features_director     Boolean?
    br_features_quicktime    Boolean?
    br_features_realplayer   Boolean?
    br_features_windowsmedia Boolean?
    br_features_gears        Boolean?
    br_features_silverlight  Boolean?
    br_cookies               Boolean?
    br_colordepth            String?   @db.VarChar(12)
    br_viewwidth             Int?
    br_viewheight            Int?
    os_name                  String?   @db.VarChar(50)
    os_family                String?   @db.VarChar(50)
    os_manufacturer          String?   @db.VarChar(50)
    os_timezone              String?   @db.VarChar(50)
    dvce_type                String?   @db.VarChar(50)
    dvce_ismobile            Boolean?
    dvce_screenwidth         Int?
    dvce_screenheight        Int?
    doc_charset              String?   @db.VarChar(128)
    doc_width                Int?
    doc_height               Int?
    tr_currency              String?   @db.Char(3)
    tr_total_base            Decimal?  @db.Decimal(18, 2)
    tr_tax_base              Decimal?  @db.Decimal(18, 2)
    tr_shipping_base         Decimal?  @db.Decimal(18, 2)
    ti_currency              String?   @db.Char(3)
    ti_price_base            Decimal?  @db.Decimal(18, 2)
    base_currency            String?   @db.Char(3)
    geo_timezone             String?   @db.VarChar(64)
    mkt_clickid              String?   @db.VarChar(128)
    mkt_network              String?   @db.VarChar(64)
    etl_tags                 String?   @db.VarChar(500)
    dvce_sent_tstamp         DateTime? @db.Timestamptz(6)
    refr_domain_userid       String?   @db.VarChar(36)
    refr_dvce_tstamp         DateTime? @db.Timestamptz(6)
    domain_sessionid         String?   @db.Char(36)
    derived_tstamp           DateTime? @db.Timestamptz(6)
    event_vendor             String?   @db.VarChar(1000)
    event_name               String?   @db.VarChar(1000)
    event_format             String?   @db.VarChar(128)
    event_version            String?   @db.VarChar(128)
    event_fingerprint        String?   @db.VarChar(128)
    true_tstamp              DateTime? @db.Timestamptz(6)
    projects                 projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@ignore
}

model programming_languages {
    id                                            Int                                             @id @default(autoincrement())
    name                                          String                                          @unique(map: "index_programming_languages_on_name") @db.VarChar
    color                                         String                                          @db.VarChar
    created_at                                    DateTime                                        @db.Timestamptz(6)
    analytics_language_trend_repository_languages analytics_language_trend_repository_languages[]
}

model project_access_tokens {
    personal_access_token_id Int
    project_id               Int
    personal_access_tokens   personal_access_tokens @relation(fields: [personal_access_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_5f7e8450e1")
    projects                 projects               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b27801bfbf")

    @@id([personal_access_token_id, project_id])
    @@index([project_id], map: "index_project_access_tokens_on_project_id")
}

model project_alerting_settings {
    project_id         Int      @id
    encrypted_token    String   @db.VarChar
    encrypted_token_iv String   @db.VarChar
    projects           projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_27a84b407d")
}

model project_aliases {
    id         BigInt   @id @default(autoincrement())
    project_id Int
    name       String   @unique(map: "index_project_aliases_on_name") @db.VarChar
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a1804f74a7")

    @@index([project_id], map: "index_project_aliases_on_project_id")
}

model project_authorizations {
    user_id      Int
    project_id   Int
    access_level Int
    projects     projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0f84bb11f3")
    users        users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_11e7aa3ed9")

    @@id([user_id, project_id, access_level])
    @@unique([project_id, user_id], map: "index_unique_project_authorizations_on_project_id_user_id")
}

model project_auto_devops {
    id              Int      @id @default(autoincrement())
    project_id      Int      @unique(map: "index_project_auto_devops_on_project_id")
    created_at      DateTime @db.Timestamptz(6)
    updated_at      DateTime @db.Timestamptz(6)
    enabled         Boolean?
    deploy_strategy Int      @default(0)
    projects        projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_45436b12b2")
}

model project_build_artifacts_size_refreshes {
    id                   BigInt    @id @default(autoincrement())
    project_id           Int       @unique(map: "index_project_build_artifacts_size_refreshes_on_project_id")
    last_job_artifact_id BigInt?
    state                Int       @default(1) @db.SmallInt
    refresh_started_at   DateTime? @db.Timestamptz(6)
    created_at           DateTime  @db.Timestamptz(6)
    updated_at           DateTime  @db.Timestamptz(6)
    projects             projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_936db5fc44")

    @@index([state, updated_at], map: "idx_build_artifacts_size_refreshes_state_updated_at")
}

model project_ci_cd_settings {
    id                               Int      @id @default(autoincrement())
    project_id                       Int      @unique(map: "index_project_ci_cd_settings_on_project_id")
    group_runners_enabled            Boolean  @default(true)
    merge_pipelines_enabled          Boolean?
    default_git_depth                Int?
    forward_deployment_enabled       Boolean?
    merge_trains_enabled             Boolean? @default(false)
    auto_rollback_enabled            Boolean  @default(false)
    keep_latest_artifact             Boolean  @default(true)
    restrict_user_defined_variables  Boolean  @default(false)
    job_token_scope_enabled          Boolean  @default(false)
    runner_token_expiration_interval Int?
    projects                         projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_24c15d2f2e")
}

model project_ci_feature_usages {
    id             BigInt   @id @default(autoincrement())
    project_id     Int
    feature        Int      @db.SmallInt
    default_branch Boolean  @default(false)
    projects       projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1deedbf64b")

    @@unique([project_id, feature, default_branch], map: "index_project_ci_feature_usages_unique_columns")
}

model project_compliance_framework_settings {
    project_id                       Int                               @id @default(autoincrement())
    framework_id                     BigInt?
    compliance_management_frameworks compliance_management_frameworks? @relation(fields: [framework_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_be413374a9")
    projects                         projects                          @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6f5294f16c")

    @@index([framework_id], map: "index_project_compliance_framework_settings_on_framework_id")
    @@index([project_id], map: "index_project_compliance_framework_settings_on_project_id")
}

model project_custom_attributes {
    id         Int      @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    project_id Int
    key        String   @db.VarChar
    value      String   @db.VarChar
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_719c3dccc5")

    @@unique([project_id, key], map: "index_project_custom_attributes_on_project_id_and_key")
    @@index([key, value], map: "index_project_custom_attributes_on_key_and_value")
}

model project_daily_statistics {
    id          BigInt    @id @default(autoincrement())
    project_id  Int
    fetch_count Int
    date        DateTime? @db.Date
    projects    projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8e549b272d")

    @@unique([project_id, date], map: "index_project_daily_statistics_on_project_id_and_date")
}

model project_deploy_tokens {
    id              Int           @id @default(autoincrement())
    project_id      Int
    deploy_token_id Int
    created_at      DateTime      @db.Timestamptz(6)
    deploy_tokens   deploy_tokens @relation(fields: [deploy_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0aca134388")
    projects        projects      @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_170e03cbaf")

    @@unique([project_id, deploy_token_id], map: "index_project_deploy_tokens_on_project_id_and_deploy_token_id")
    @@index([deploy_token_id], map: "index_project_deploy_tokens_on_deploy_token_id")
}

model project_error_tracking_settings {
    project_id         Int      @id
    enabled            Boolean  @default(false)
    api_url            String?  @db.VarChar
    encrypted_token    String?  @db.VarChar
    encrypted_token_iv String?  @db.VarChar
    project_name       String?  @db.VarChar
    organization_name  String?  @db.VarChar
    integrated         Boolean  @default(true)
    projects           projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_910a2b8bd9")
}

model project_export_jobs {
    id         BigInt   @id @default(autoincrement())
    project_id Int
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    status     Int      @default(0) @db.SmallInt
    jid        String   @unique(map: "index_project_export_jobs_on_jid") @db.VarChar(100)
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c88d8db2e1")

    @@index([project_id, jid], map: "index_project_export_jobs_on_project_id_and_jid")
    @@index([project_id, status], map: "index_project_export_jobs_on_project_id_and_status")
    @@index([status], map: "index_project_export_jobs_on_status")
}

model project_feature_usages {
    project_id                    Int       @id
    jira_dvcs_cloud_last_sync_at  DateTime? @db.Timestamp(6)
    jira_dvcs_server_last_sync_at DateTime? @db.Timestamp(6)
    projects                      projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c22a50024b")

    @@index([project_id], map: "index_project_feature_usages_on_project_id")
}

model project_features {
    id                                   Int       @id @default(autoincrement())
    project_id                           Int       @unique(map: "index_project_features_on_project_id")
    merge_requests_access_level          Int?
    issues_access_level                  Int?
    wiki_access_level                    Int?
    snippets_access_level                Int       @default(20)
    builds_access_level                  Int?
    created_at                           DateTime? @db.Timestamp(6)
    updated_at                           DateTime? @db.Timestamp(6)
    repository_access_level              Int       @default(20)
    pages_access_level                   Int
    forking_access_level                 Int?
    metrics_dashboard_access_level       Int?
    requirements_access_level            Int       @default(20)
    operations_access_level              Int       @default(20)
    analytics_access_level               Int       @default(20)
    security_and_compliance_access_level Int       @default(10)
    container_registry_access_level      Int       @default(0)
    projects                             projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_18513d9b92")

    @@unique([project_id, container_registry_access_level], map: "index_project_features_on_project_id_include_container_registry")
}

model project_group_links {
    id           Int       @id @default(autoincrement())
    project_id   Int
    group_id     Int
    created_at   DateTime? @db.Timestamp(6)
    updated_at   DateTime? @db.Timestamp(6)
    group_access Int       @default(30)
    expires_at   DateTime? @db.Date
    projects     projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_daa8cee94c")

    @@index([group_id], map: "index_project_group_links_on_group_id")
    @@index([project_id], map: "index_project_group_links_on_project_id")
}

model project_import_data {
    id                         Int       @id @default(autoincrement())
    project_id                 Int?
    data                       String?
    encrypted_credentials      String?
    encrypted_credentials_iv   String?   @db.VarChar
    encrypted_credentials_salt String?   @db.VarChar
    projects                   projects? @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ffb9ee3a10")

    @@index([project_id], map: "index_project_import_data_on_project_id")
}

model project_incident_management_settings {
    project_id                   Int      @id @default(autoincrement())
    create_issue                 Boolean  @default(false)
    send_email                   Boolean  @default(false)
    issue_template_key           String?
    pagerduty_active             Boolean  @default(false)
    encrypted_pagerduty_token    Bytes?
    encrypted_pagerduty_token_iv Bytes?
    auto_close_incident          Boolean  @default(true)
    sla_timer                    Boolean? @default(false)
    sla_timer_minutes            Int?
    projects                     projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9c2ea1b7dd")
}

model project_metrics_settings {
    project_id             Int      @id
    external_dashboard_url String?  @db.VarChar
    dashboard_timezone     Int      @default(0) @db.SmallInt
    projects               projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4c6037ee4f")
}

model project_mirror_data {
    id                        Int       @id @default(autoincrement())
    project_id                Int       @unique(map: "index_project_mirror_data_on_project_id")
    retry_count               Int       @default(0)
    last_update_started_at    DateTime? @db.Timestamp(6)
    last_update_scheduled_at  DateTime? @db.Timestamp(6)
    next_execution_timestamp  DateTime? @db.Timestamp(6)
    status                    String?   @db.VarChar
    jid                       String?   @db.VarChar
    last_error                String?
    last_update_at            DateTime? @db.Timestamptz(6)
    last_successful_update_at DateTime? @db.Timestamptz(6)
    correlation_id_value      String?   @db.VarChar(128)
    projects                  projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d1aad367d7")

    @@index([last_successful_update_at], map: "index_project_mirror_data_on_last_successful_update_at")
    @@index([last_update_at, retry_count], map: "index_project_mirror_data_on_last_update_at_and_retry_count")
    @@index([status], map: "index_project_mirror_data_on_status")
}

model project_pages_metadata {
    project_id           Int                @id
    deployed             Boolean            @default(false)
    artifacts_archive_id BigInt?
    pages_deployment_id  BigInt?
    pages_deployments    pages_deployments? @relation(fields: [pages_deployment_id], references: [id], onUpdate: NoAction, map: "fk_0fd5b22688")
    projects             projects           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8c28a61485")

    @@index([artifacts_archive_id], map: "index_project_pages_metadata_on_artifacts_archive_id")
    @@index([pages_deployment_id], map: "index_project_pages_metadata_on_pages_deployment_id")
}

model project_repositories {
    id         BigInt   @id @default(autoincrement())
    shard_id   Int
    disk_path  String   @unique(map: "index_project_repositories_on_disk_path") @db.VarChar
    project_id Int      @unique(map: "index_project_repositories_on_project_id")
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_7a810d4121")
    shards     shards   @relation(fields: [shard_id], references: [id], onUpdate: NoAction, map: "fk_rails_c3258dc63b")

    @@index([shard_id], map: "index_project_repositories_on_shard_id")
    @@index([shard_id, project_id], map: "index_project_repositories_on_shard_id_and_project_id")
}

model project_repository_states {
    id                                   Int       @id @default(autoincrement())
    project_id                           Int       @unique(map: "index_project_repository_states_on_project_id")
    repository_verification_checksum     Bytes?
    wiki_verification_checksum           Bytes?
    last_repository_verification_failure String?   @db.VarChar
    last_wiki_verification_failure       String?   @db.VarChar
    repository_retry_at                  DateTime? @db.Timestamptz(6)
    wiki_retry_at                        DateTime? @db.Timestamptz(6)
    repository_retry_count               Int?
    wiki_retry_count                     Int?
    last_repository_verification_ran_at  DateTime? @db.Timestamptz(6)
    last_wiki_verification_ran_at        DateTime? @db.Timestamptz(6)
    projects                             projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0f2298ca8a")
}

model project_repository_storage_moves {
    id                       BigInt   @id @default(autoincrement())
    created_at               DateTime @db.Timestamptz(6)
    updated_at               DateTime @db.Timestamptz(6)
    project_id               Int
    state                    Int      @default(1) @db.SmallInt
    source_storage_name      String
    destination_storage_name String
    projects                 projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5106dbd44a")

    @@index([project_id], map: "index_project_repository_storage_moves_on_project_id")
}

model project_security_settings {
    project_id                   Int      @id @default(autoincrement())
    created_at                   DateTime @db.Timestamptz(6)
    updated_at                   DateTime @db.Timestamptz(6)
    auto_fix_container_scanning  Boolean  @default(true)
    auto_fix_dast                Boolean  @default(true)
    auto_fix_dependency_scanning Boolean  @default(true)
    auto_fix_sast                Boolean  @default(true)
    projects                     projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ed4abe1338")
}

model project_settings {
    project_id                                 Int         @id
    created_at                                 DateTime    @db.Timestamptz(6)
    updated_at                                 DateTime    @db.Timestamptz(6)
    push_rule_id                               Int?        @unique(map: "index_project_settings_on_push_rule_id")
    show_default_award_emojis                  Boolean?    @default(true)
    allow_merge_on_skipped_pipeline            Boolean?
    squash_option                              Int?        @default(3) @db.SmallInt
    has_confluence                             Boolean     @default(false)
    has_vulnerabilities                        Boolean     @default(false)
    prevent_merge_without_jira_issue           Boolean     @default(false)
    cve_id_request_enabled                     Boolean     @default(true)
    mr_default_target_self                     Boolean     @default(false)
    previous_default_branch                    String?
    warn_about_potentially_unwanted_characters Boolean     @default(true)
    merge_commit_template                      String?
    has_shimo                                  Boolean     @default(false)
    squash_commit_template                     String?
    legacy_open_source_license_available       Boolean     @default(true)
    projects                                   projects    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c6df6e6328")
    push_rules                                 push_rules? @relation(fields: [push_rule_id], references: [id], onUpdate: NoAction, map: "fk_project_settings_push_rule_id")
}

model project_statistics {
    id                                Int       @id @default(autoincrement())
    project_id                        Int       @unique(map: "index_project_statistics_on_project_id")
    namespace_id                      Int
    commit_count                      BigInt    @default(0)
    storage_size                      BigInt    @default(0)
    repository_size                   BigInt    @default(0)
    lfs_objects_size                  BigInt    @default(0)
    build_artifacts_size              BigInt    @default(0)
    shared_runners_seconds            BigInt    @default(0)
    shared_runners_seconds_last_reset DateTime? @db.Timestamp(6)
    packages_size                     BigInt    @default(0)
    wiki_size                         BigInt?
    snippets_size                     BigInt?
    pipeline_artifacts_size           BigInt    @default(0)
    uploads_size                      BigInt    @default(0)
    projects                          projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_12c471002f")

    @@index([namespace_id], map: "index_project_statistics_on_namespace_id")
    @@index([packages_size, project_id], map: "index_project_statistics_on_packages_size_and_project_id")
    @@index([repository_size, project_id], map: "index_project_statistics_on_repository_size_and_project_id")
    @@index([storage_size, project_id], map: "index_project_statistics_on_storage_size_and_project_id")
    @@index([wiki_size, project_id], map: "index_project_statistics_on_wiki_size_and_project_id")
}

model project_topics {
    id         BigInt   @id @default(autoincrement())
    project_id Int
    topic_id   BigInt
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_db13576296")
    topics     topics   @relation(fields: [topic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_34af9ab07a")

    @@unique([project_id, topic_id], map: "index_project_topics_on_project_id_and_topic_id")
    @@index([project_id], map: "index_project_topics_on_project_id")
    @@index([topic_id], map: "index_project_topics_on_topic_id")
}

model project_tracing_settings {
    id           BigInt   @id @default(autoincrement())
    created_at   DateTime @db.Timestamptz(6)
    updated_at   DateTime @db.Timestamptz(6)
    project_id   Int      @unique(map: "index_project_tracing_settings_on_project_id")
    external_url String   @db.VarChar
    projects     projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fe56f57fc6")
}

model projects {
    id                                                                                                                                        Int                                               @id @default(autoincrement())
    name                                                                                                                                      String?                                           @db.VarChar
    path                                                                                                                                      String?                                           @db.VarChar
    description                                                                                                                               String?
    created_at                                                                                                                                DateTime?                                         @db.Timestamp(6)
    updated_at                                                                                                                                DateTime?                                         @db.Timestamp(6)
    creator_id                                                                                                                                Int?
    namespace_id                                                                                                                              Int
    last_activity_at                                                                                                                          DateTime?                                         @db.Timestamp(6)
    import_url                                                                                                                                String?                                           @db.VarChar
    visibility_level                                                                                                                          Int                                               @default(0)
    archived                                                                                                                                  Boolean                                           @default(false)
    avatar                                                                                                                                    String?                                           @db.VarChar
    merge_requests_template                                                                                                                   String?
    star_count                                                                                                                                Int                                               @default(0)
    merge_requests_rebase_enabled                                                                                                             Boolean?                                          @default(false)
    import_type                                                                                                                               String?                                           @db.VarChar
    import_source                                                                                                                             String?                                           @db.VarChar
    approvals_before_merge                                                                                                                    Int                                               @default(0)
    reset_approvals_on_push                                                                                                                   Boolean?                                          @default(true)
    merge_requests_ff_only_enabled                                                                                                            Boolean?                                          @default(false)
    issues_template                                                                                                                           String?
    mirror                                                                                                                                    Boolean                                           @default(false)
    mirror_last_update_at                                                                                                                     DateTime?                                         @db.Timestamp(6)
    mirror_last_successful_update_at                                                                                                          DateTime?                                         @db.Timestamp(6)
    mirror_user_id                                                                                                                            Int?
    shared_runners_enabled                                                                                                                    Boolean                                           @default(true)
    runners_token                                                                                                                             String?                                           @db.VarChar
    build_coverage_regex                                                                                                                      String?                                           @db.VarChar
    build_allow_git_fetch                                                                                                                     Boolean                                           @default(true)
    build_timeout                                                                                                                             Int                                               @default(3600)
    mirror_trigger_builds                                                                                                                     Boolean                                           @default(false)
    pending_delete                                                                                                                            Boolean?                                          @default(false)
    public_builds                                                                                                                             Boolean                                           @default(true)
    last_repository_check_failed                                                                                                              Boolean?
    last_repository_check_at                                                                                                                  DateTime?                                         @db.Timestamp(6)
    only_allow_merge_if_pipeline_succeeds                                                                                                     Boolean                                           @default(false)
    has_external_issue_tracker                                                                                                                Boolean?
    repository_storage                                                                                                                        String                                            @default("default") @db.VarChar
    repository_read_only                                                                                                                      Boolean?
    request_access_enabled                                                                                                                    Boolean                                           @default(true)
    has_external_wiki                                                                                                                         Boolean?
    ci_config_path                                                                                                                            String?                                           @db.VarChar
    lfs_enabled                                                                                                                               Boolean?
    description_html                                                                                                                          String?
    only_allow_merge_if_all_discussions_are_resolved                                                                                          Boolean?
    repository_size_limit                                                                                                                     BigInt?
    printing_merge_request_link_enabled                                                                                                       Boolean                                           @default(true)
    auto_cancel_pending_pipelines                                                                                                             Int                                               @default(1)
    service_desk_enabled                                                                                                                      Boolean?                                          @default(true)
    cached_markdown_version                                                                                                                   Int?
    delete_error                                                                                                                              String?
    last_repository_updated_at                                                                                                                DateTime?                                         @db.Timestamp(6)
    disable_overriding_approvers_per_merge_request                                                                                            Boolean?
    storage_version                                                                                                                           Int?                                              @db.SmallInt
    resolve_outdated_diff_discussions                                                                                                         Boolean?
    remote_mirror_available_overridden                                                                                                        Boolean?
    only_mirror_protected_branches                                                                                                            Boolean?
    pull_mirror_available_overridden                                                                                                          Boolean?
    jobs_cache_index                                                                                                                          Int?
    external_authorization_classification_label                                                                                               String?                                           @db.VarChar
    mirror_overwrites_diverged_branches                                                                                                       Boolean?
    pages_https_only                                                                                                                          Boolean?                                          @default(true)
    external_webhook_token                                                                                                                    String?                                           @db.VarChar
    packages_enabled                                                                                                                          Boolean?
    merge_requests_author_approval                                                                                                            Boolean?                                          @default(false)
    pool_repository_id                                                                                                                        BigInt?
    runners_token_encrypted                                                                                                                   String?                                           @db.VarChar
    bfg_object_map                                                                                                                            String?                                           @db.VarChar
    detected_repository_languages                                                                                                             Boolean?
    merge_requests_disable_committers_approval                                                                                                Boolean?
    require_password_to_approve                                                                                                               Boolean?
    emails_disabled                                                                                                                           Boolean?
    max_pages_size                                                                                                                            Int?
    max_artifacts_size                                                                                                                        Int?
    pull_mirror_branch_prefix                                                                                                                 String?                                           @db.VarChar(50)
    remove_source_branch_after_merge                                                                                                          Boolean?
    marked_for_deletion_at                                                                                                                    DateTime?                                         @db.Date
    marked_for_deletion_by_user_id                                                                                                            Int?
    autoclose_referenced_issues                                                                                                               Boolean?
    suggestion_commit_message                                                                                                                 String?                                           @db.VarChar(255)
    project_namespace_id                                                                                                                      Int?                                              @unique(map: "index_projects_on_project_namespace_id")
    hidden                                                                                                                                    Boolean                                           @default(false)
    users                                                                                                                                     users?                                            @relation(fields: [marked_for_deletion_by_user_id], references: [id], onUpdate: NoAction, map: "fk_25d8780d11")
    namespaces_namespacesToprojects_namespace_id                                                                                              namespaces                                        @relation("namespacesToprojects_namespace_id", fields: [namespace_id], references: [id], onUpdate: NoAction, map: "fk_projects_namespace_id")
    pool_repositories_pool_repositoriesToprojects_pool_repository_id                                                                          pool_repositories?                                @relation("pool_repositoriesToprojects_pool_repository_id", fields: [pool_repository_id], references: [id], onUpdate: NoAction, map: "fk_6e5c14658a")
    namespaces_namespacesToprojects_project_namespace_id                                                                                      namespaces?                                       @relation("namespacesToprojects_project_namespace_id", fields: [project_namespace_id], references: [id], onUpdate: NoAction, map: "fk_71625606ac")
    agent_activity_events                                                                                                                     agent_activity_events[]
    agent_project_authorizations                                                                                                              agent_project_authorizations[]
    alert_management_alerts                                                                                                                   alert_management_alerts[]
    alert_management_http_integrations                                                                                                        alert_management_http_integrations[]
    analytics_cycle_analytics_project_stages                                                                                                  analytics_cycle_analytics_project_stages[]
    analytics_cycle_analytics_project_value_streams                                                                                           analytics_cycle_analytics_project_value_streams[]
    analytics_language_trend_repository_languages                                                                                             analytics_language_trend_repository_languages[]
    application_settings_application_settings_file_template_project_idToprojects                                                              application_settings[]                            @relation("application_settings_file_template_project_idToprojects")
    application_settings_application_settings_instance_administration_project_idToprojects                                                    application_settings[]                            @relation("application_settings_instance_administration_project_idToprojects")
    approval_project_rules                                                                                                                    approval_project_rules[]
    badges                                                                                                                                    badges[]
    board_project_recent_visits                                                                                                               board_project_recent_visits[]
    boards                                                                                                                                    boards[]
    bulk_import_entities                                                                                                                      bulk_import_entities[]
    bulk_import_exports                                                                                                                       bulk_import_exports[]
    cluster_agents                                                                                                                            cluster_agents[]
    cluster_projects                                                                                                                          cluster_projects[]
    clusters                                                                                                                                  clusters[]
    clusters_kubernetes_namespaces                                                                                                            clusters_kubernetes_namespaces[]
    container_expiration_policies                                                                                                             container_expiration_policies?
    container_repositories                                                                                                                    container_repositories[]
    coverage_fuzzing_corpuses                                                                                                                 coverage_fuzzing_corpuses[]
    csv_issue_imports                                                                                                                         csv_issue_imports[]
    dast_profile_schedules                                                                                                                    dast_profile_schedules[]
    dast_profiles                                                                                                                             dast_profiles[]
    dast_scanner_profiles                                                                                                                     dast_scanner_profiles[]
    dast_site_profiles                                                                                                                        dast_site_profiles[]
    dast_site_tokens                                                                                                                          dast_site_tokens[]
    dast_sites                                                                                                                                dast_sites[]
    deploy_keys_projects                                                                                                                      deploy_keys_projects[]
    deployments                                                                                                                               deployments[]
    design_management_designs                                                                                                                 design_management_designs[]
    elasticsearch_indexed_projects                                                                                                            elasticsearch_indexed_projects?
    environments                                                                                                                              environments[]
    error_tracking_client_keys                                                                                                                error_tracking_client_keys[]
    error_tracking_errors                                                                                                                     error_tracking_errors[]
    events                                                                                                                                    events[]
    experiment_subjects                                                                                                                       experiment_subjects[]
    external_approval_rules                                                                                                                   external_approval_rules[]
    external_status_checks                                                                                                                    external_status_checks[]
    fork_network_members_fork_network_members_forked_from_project_idToprojects                                                                fork_network_members[]                            @relation("fork_network_members_forked_from_project_idToprojects")
    fork_network_members_fork_network_members_project_idToprojects                                                                            fork_network_members?                             @relation("fork_network_members_project_idToprojects")
    fork_networks                                                                                                                             fork_networks?
    geo_hashed_storage_attachments_events                                                                                                     geo_hashed_storage_attachments_events[]
    geo_hashed_storage_migrated_events                                                                                                        geo_hashed_storage_migrated_events[]
    geo_repository_created_events                                                                                                             geo_repository_created_events[]
    geo_repository_renamed_events                                                                                                             geo_repository_renamed_events[]
    geo_repository_updated_events                                                                                                             geo_repository_updated_events[]
    geo_reset_checksum_events                                                                                                                 geo_reset_checksum_events[]
    gpg_signatures                                                                                                                            gpg_signatures[]
    grafana_integrations                                                                                                                      grafana_integrations[]
    import_export_uploads                                                                                                                     import_export_uploads[]
    incident_management_escalation_policies                                                                                                   incident_management_escalation_policies[]
    incident_management_oncall_schedules                                                                                                      incident_management_oncall_schedules[]
    incident_management_timeline_events                                                                                                       incident_management_timeline_events[]
    index_statuses                                                                                                                            index_statuses?
    insights                                                                                                                                  insights[]
    integrations                                                                                                                              integrations[]
    internal_ids                                                                                                                              internal_ids[]
    issue_search_data                                                                                                                         issue_search_data[]                               @ignore
    issues                                                                                                                                    issues[]
    jira_imports                                                                                                                              jira_imports[]
    label_priorities                                                                                                                          label_priorities[]
    labels                                                                                                                                    labels[]
    lfs_file_locks                                                                                                                            lfs_file_locks[]
    lfs_objects_projects                                                                                                                      lfs_objects_projects[]
    member_tasks                                                                                                                              member_tasks[]
    merge_request_metrics                                                                                                                     merge_request_metrics[]
    merge_requests_merge_requests_source_project_idToprojects                                                                                 merge_requests[]                                  @relation("merge_requests_source_project_idToprojects")
    merge_requests_merge_requests_target_project_idToprojects                                                                                 merge_requests[]                                  @relation("merge_requests_target_project_idToprojects")
    merge_trains                                                                                                                              merge_trains[]
    metrics_users_starred_dashboards                                                                                                          metrics_users_starred_dashboards[]
    milestones                                                                                                                                milestones[]
    namespaces_namespaces_file_template_project_idToprojects                                                                                  namespaces[]                                      @relation("namespaces_file_template_project_idToprojects")
    namespaces_namespaces_tmp_project_idToprojects                                                                                            namespaces?                                       @relation("namespaces_tmp_project_idToprojects")
    notes                                                                                                                                     notes[]
    operations_feature_flags                                                                                                                  operations_feature_flags[]
    operations_feature_flags_clients                                                                                                          operations_feature_flags_clients[]
    operations_user_lists                                                                                                                     operations_user_lists[]
    packages_debian_project_distributions                                                                                                     packages_debian_project_distributions[]
    packages_packages                                                                                                                         packages_packages[]
    pages_deployments                                                                                                                         pages_deployments[]
    pages_domains                                                                                                                             pages_domains[]
    path_locks                                                                                                                                path_locks[]
    pool_repositories_pool_repositories_source_project_idToprojects                                                                           pool_repositories[]                               @relation("pool_repositories_source_project_idToprojects")
    product_analytics_events_experimental                                                                                                     product_analytics_events_experimental[]           @ignore
    project_access_tokens                                                                                                                     project_access_tokens[]
    project_alerting_settings                                                                                                                 project_alerting_settings?
    project_aliases                                                                                                                           project_aliases[]
    project_authorizations                                                                                                                    project_authorizations[]
    project_auto_devops                                                                                                                       project_auto_devops?
    project_build_artifacts_size_refreshes                                                                                                    project_build_artifacts_size_refreshes?
    project_ci_cd_settings                                                                                                                    project_ci_cd_settings?
    project_ci_feature_usages                                                                                                                 project_ci_feature_usages[]
    project_compliance_framework_settings                                                                                                     project_compliance_framework_settings?
    project_custom_attributes                                                                                                                 project_custom_attributes[]
    project_daily_statistics                                                                                                                  project_daily_statistics[]
    project_deploy_tokens                                                                                                                     project_deploy_tokens[]
    project_error_tracking_settings                                                                                                           project_error_tracking_settings?
    project_export_jobs                                                                                                                       project_export_jobs[]
    project_feature_usages                                                                                                                    project_feature_usages?
    project_features                                                                                                                          project_features?
    project_group_links                                                                                                                       project_group_links[]
    project_import_data                                                                                                                       project_import_data[]
    project_incident_management_settings                                                                                                      project_incident_management_settings?
    project_metrics_settings                                                                                                                  project_metrics_settings?
    project_mirror_data                                                                                                                       project_mirror_data?
    project_pages_metadata                                                                                                                    project_pages_metadata?
    project_repositories                                                                                                                      project_repositories?
    project_repository_states                                                                                                                 project_repository_states?
    project_repository_storage_moves                                                                                                          project_repository_storage_moves[]
    project_security_settings                                                                                                                 project_security_settings?
    project_settings                                                                                                                          project_settings?
    project_statistics                                                                                                                        project_statistics?
    project_topics                                                                                                                            project_topics[]
    project_tracing_settings                                                                                                                  project_tracing_settings?
    projects_sync_events                                                                                                                      projects_sync_events[]
    prometheus_alert_events                                                                                                                   prometheus_alert_events[]
    prometheus_alerts                                                                                                                         prometheus_alerts[]
    prometheus_metrics                                                                                                                        prometheus_metrics[]
    protected_branches                                                                                                                        protected_branches[]
    protected_environments                                                                                                                    protected_environments[]
    protected_tags                                                                                                                            protected_tags[]
    push_rules                                                                                                                                push_rules[]
    releases                                                                                                                                  releases[]
    remote_mirrors                                                                                                                            remote_mirrors[]
    repository_languages                                                                                                                      repository_languages[]
    requirements                                                                                                                              requirements[]
    reviews                                                                                                                                   reviews[]
    security_orchestration_policy_configurations_projectsTosecurity_orchestration_policy_configurations_project_id                            security_orchestration_policy_configurations[]    @relation("projectsTosecurity_orchestration_policy_configurations_project_id")
    security_orchestration_policy_configurations_projectsTosecurity_orchestration_policy_configurations_security_policy_management_project_id security_orchestration_policy_configurations[]    @relation("projectsTosecurity_orchestration_policy_configurations_security_policy_management_project_id")
    security_scans                                                                                                                            security_scans[]
    security_trainings                                                                                                                        security_trainings[]
    self_managed_prometheus_alert_events                                                                                                      self_managed_prometheus_alert_events[]
    service_desk_settings_projectsToservice_desk_settings_file_template_project_id                                                            service_desk_settings[]                           @relation("projectsToservice_desk_settings_file_template_project_id")
    service_desk_settings_projectsToservice_desk_settings_project_id                                                                          service_desk_settings?                            @relation("projectsToservice_desk_settings_project_id")
    snippets                                                                                                                                  snippets[]
    software_license_policies                                                                                                                 software_license_policies[]
    sprints                                                                                                                                   sprints[]
    status_page_settings                                                                                                                      status_page_settings?
    subscriptions                                                                                                                             subscriptions[]
    terraform_states                                                                                                                          terraform_states[]
    timelogs                                                                                                                                  timelogs[]
    todos                                                                                                                                     todos[]
    trending_projects                                                                                                                         trending_projects?
    user_interacted_projects                                                                                                                  user_interacted_projects[]
    users_ops_dashboard_projects                                                                                                              users_ops_dashboard_projects[]
    users_security_dashboard_projects                                                                                                         users_security_dashboard_projects[]
    users_star_projects                                                                                                                       users_star_projects[]
    vulnerabilities                                                                                                                           vulnerabilities[]
    vulnerability_exports                                                                                                                     vulnerability_exports[]
    vulnerability_feedback                                                                                                                    vulnerability_feedback[]
    vulnerability_historical_statistics                                                                                                       vulnerability_historical_statistics[]
    vulnerability_identifiers                                                                                                                 vulnerability_identifiers[]
    vulnerability_occurrences                                                                                                                 vulnerability_occurrences[]
    vulnerability_reads                                                                                                                       vulnerability_reads[]
    vulnerability_remediations                                                                                                                vulnerability_remediations[]
    vulnerability_scanners                                                                                                                    vulnerability_scanners[]
    vulnerability_statistics                                                                                                                  vulnerability_statistics?
    web_hooks                                                                                                                                 web_hooks[]
    wiki_page_meta                                                                                                                            wiki_page_meta[]
    x509_commit_signatures                                                                                                                    x509_commit_signatures[]
    zoom_meetings                                                                                                                             zoom_meetings[]

    @@index([id, repository_storage, last_repository_updated_at], map: "idx_projects_on_repository_storage_last_repository_updated_at")
    @@index([path], map: "index_on_projects_path")
    @@index([created_at, id], map: "index_projects_api_created_at_id_desc")
    @@index([last_activity_at, id], map: "index_projects_api_last_activity_at_id_desc")
    @@index([name, id], map: "index_projects_api_name_id_desc")
    @@index([path, id], map: "index_projects_api_path_id_desc")
    @@index([updated_at, id], map: "index_projects_api_updated_at_id_desc")
    @@index([created_at, id], map: "index_projects_on_created_at_and_id")
    @@index([creator_id, created_at, id], map: "index_projects_on_creator_id_and_created_at_and_id")
    @@index([creator_id, id], map: "index_projects_on_creator_id_and_id")
    @@index([description], map: "index_projects_on_description_trigram")
    @@index([last_activity_at, id], map: "index_projects_on_last_activity_at_and_id")
    @@index([last_repository_check_failed], map: "index_projects_on_last_repository_check_failed")
    @@index([last_repository_updated_at], map: "index_projects_on_last_repository_updated_at")
    @@index([mirror_last_successful_update_at], map: "index_projects_on_mirror_last_successful_update_at")
    @@index([mirror_user_id], map: "index_projects_on_mirror_user_id")
    @@index([name, id], map: "index_projects_on_name_and_id")
    @@index([name], map: "index_projects_on_name_trigram")
    @@index([namespace_id, id], map: "index_projects_on_namespace_id_and_id")
    @@index([path, id], map: "index_projects_on_path_and_id")
    @@index([path], map: "index_projects_on_path_trigram")
    @@index([pending_delete], map: "index_projects_on_pending_delete")
    @@index([repository_storage], map: "index_projects_on_repository_storage")
    @@index([runners_token], map: "index_projects_on_runners_token")
    @@index([runners_token_encrypted], map: "index_projects_on_runners_token_encrypted")
    @@index([star_count], map: "index_projects_on_star_count")
    @@index([updated_at, id], map: "index_projects_on_updated_at_and_id")
}

model projects_sync_events {
    id         BigInt   @id @default(autoincrement())
    project_id Int
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bbf0eef59f")

    @@index([project_id], map: "index_projects_sync_events_on_project_id")
}

model prometheus_alert_events {
    id                             BigInt                           @id @default(autoincrement())
    project_id                     Int
    prometheus_alert_id            Int
    started_at                     DateTime                         @db.Timestamptz(6)
    ended_at                       DateTime?                        @db.Timestamptz(6)
    status                         Int?                             @db.SmallInt
    payload_key                    String?                          @db.VarChar
    projects                       projects                         @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4675865839")
    prometheus_alerts              prometheus_alerts                @relation(fields: [prometheus_alert_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_106f901176")
    issues_prometheus_alert_events issues_prometheus_alert_events[]

    @@unique([prometheus_alert_id, payload_key], map: "index_prometheus_alert_event_scoped_payload_key")
    @@index([project_id, status], map: "index_prometheus_alert_events_on_project_id_and_status")
}

model prometheus_alerts {
    id                      Int                       @id @default(autoincrement())
    created_at              DateTime                  @db.Timestamptz(6)
    updated_at              DateTime                  @db.Timestamptz(6)
    threshold               Float
    operator                Int
    environment_id          Int
    project_id              Int
    prometheus_metric_id    Int
    runbook_url             String?
    environments            environments              @relation(fields: [environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6d9b283465")
    projects                projects                  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f0e8db86aa")
    prometheus_metrics      prometheus_metrics        @relation(fields: [prometheus_metric_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e6351447ec")
    alert_management_alerts alert_management_alerts[]
    prometheus_alert_events prometheus_alert_events[]

    @@unique([project_id, prometheus_metric_id, environment_id], map: "index_prometheus_alerts_metric_environment")
    @@index([environment_id], map: "index_prometheus_alerts_on_environment_id")
    @@index([prometheus_metric_id], map: "index_prometheus_alerts_on_prometheus_metric_id")
}

model prometheus_metrics {
    id                Int                 @id @default(autoincrement())
    project_id        Int?
    title             String              @db.VarChar
    query             String              @db.VarChar
    y_label           String              @db.VarChar
    unit              String              @db.VarChar
    legend            String?             @db.VarChar
    group             Int
    created_at        DateTime            @db.Timestamptz(6)
    updated_at        DateTime            @db.Timestamptz(6)
    common            Boolean             @default(false)
    identifier        String?             @db.VarChar
    dashboard_path    String?
    projects          projects?           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4c8957a707")
    prometheus_alerts prometheus_alerts[]

    @@unique([identifier, project_id], map: "index_prometheus_metrics_on_identifier_and_project_id")
    @@index([common], map: "index_prometheus_metrics_on_common")
    @@index([group], map: "index_prometheus_metrics_on_group")
    @@index([project_id], map: "index_prometheus_metrics_on_project_id")
}

model protected_branch_merge_access_levels {
    id                  Int                @id @default(autoincrement())
    protected_branch_id Int
    access_level        Int?               @default(40)
    created_at          DateTime           @db.Timestamp(6)
    updated_at          DateTime           @db.Timestamp(6)
    user_id             Int?
    group_id            Int?
    namespaces          namespaces?        @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_98f3d044fe")
    protected_branches  protected_branches @relation(fields: [protected_branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_8a3072ccb3")
    users               users?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_protected_branch_merge_access_levels_user_id")

    @@index([protected_branch_id], map: "index_protected_branch_merge_access")
    @@index([group_id], map: "index_protected_branch_merge_access_levels_on_group_id")
    @@index([user_id], map: "index_protected_branch_merge_access_levels_on_user_id")
}

model protected_branch_push_access_levels {
    id                  Int                @id @default(autoincrement())
    protected_branch_id Int
    access_level        Int?               @default(40)
    created_at          DateTime           @db.Timestamp(6)
    updated_at          DateTime           @db.Timestamp(6)
    user_id             Int?
    group_id            Int?
    deploy_key_id       Int?
    keys                keys?              @relation(fields: [deploy_key_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_15d2a7a4ae")
    namespaces          namespaces?        @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_7111b68cdb")
    protected_branches  protected_branches @relation(fields: [protected_branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_9ffc86a3d9")
    users               users?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_protected_branch_push_access_levels_user_id")

    @@index([deploy_key_id], map: "index_deploy_key_id_on_protected_branch_push_access_levels")
    @@index([protected_branch_id], map: "index_protected_branch_push_access")
    @@index([group_id], map: "index_protected_branch_push_access_levels_on_group_id")
    @@index([user_id], map: "index_protected_branch_push_access_levels_on_user_id")
}

model protected_branch_unprotect_access_levels {
    id                  Int                @id @default(autoincrement())
    protected_branch_id Int
    access_level        Int?               @default(40)
    user_id             Int?
    group_id            Int?
    namespaces          namespaces?        @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5be1abfc25")
    protected_branches  protected_branches @relation(fields: [protected_branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e9eb8dc025")
    users               users?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2d2aba21ef")

    @@index([protected_branch_id], map: "index_protected_branch_unprotect_access")
    @@index([group_id], map: "index_protected_branch_unprotect_access_levels_on_group_id")
    @@index([user_id], map: "index_protected_branch_unprotect_access_levels_on_user_id")
}

model protected_branches {
    id                                         Int                                          @id @default(autoincrement())
    project_id                                 Int
    name                                       String                                       @db.VarChar
    created_at                                 DateTime?                                    @db.Timestamp(6)
    updated_at                                 DateTime?                                    @db.Timestamp(6)
    code_owner_approval_required               Boolean                                      @default(false)
    allow_force_push                           Boolean                                      @default(false)
    projects                                   projects                                     @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_7a9c6d93e7")
    approval_project_rules_protected_branches  approval_project_rules_protected_branches[]
    external_approval_rules_protected_branches external_approval_rules_protected_branches[]
    external_status_checks_protected_branches  external_status_checks_protected_branches[]
    protected_branch_merge_access_levels       protected_branch_merge_access_levels[]
    protected_branch_push_access_levels        protected_branch_push_access_levels[]
    protected_branch_unprotect_access_levels   protected_branch_unprotect_access_levels[]
    required_code_owners_sections              required_code_owners_sections[]

    @@index([project_id], map: "index_protected_branches_on_project_id")
}

model protected_environment_approval_rules {
    id                       BigInt                 @id @default(autoincrement())
    protected_environment_id Int
    user_id                  Int?
    group_id                 Int?
    created_at               DateTime               @db.Timestamptz(6)
    updated_at               DateTime               @db.Timestamptz(6)
    access_level             Int?                   @db.SmallInt
    required_approvals       Int                    @db.SmallInt
    namespaces               namespaces?            @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_405568b491")
    protected_environments   protected_environments @relation(fields: [protected_environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4e554f96f5")
    users                    users?                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_6ee8249821")
    deployment_approvals     deployment_approvals[]

    @@index([protected_environment_id], map: "index_approval_rule_on_protected_environment_id")
    @@index([group_id], map: "index_protected_environment_approval_rules_on_group_id")
    @@index([user_id], map: "index_protected_environment_approval_rules_on_user_id")
}

model protected_environment_deploy_access_levels {
    id                       Int                    @id @default(autoincrement())
    created_at               DateTime               @db.Timestamptz(6)
    updated_at               DateTime               @db.Timestamptz(6)
    access_level             Int?                   @default(40)
    protected_environment_id Int
    user_id                  Int?
    group_id                 Int?
    namespaces               namespaces?            @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_45cc02a931")
    protected_environments   protected_environments @relation(fields: [protected_environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_898a13b650")
    users                    users?                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5b9f6970fe")

    @@index([protected_environment_id], map: "index_protected_environment_deploy_access")
    @@index([group_id], map: "index_protected_environment_deploy_access_levels_on_group_id")
    @@index([user_id], map: "index_protected_environment_deploy_access_levels_on_user_id")
}

model protected_environments {
    id                                         Int                                          @id @default(autoincrement())
    project_id                                 Int?
    created_at                                 DateTime                                     @db.Timestamptz(6)
    updated_at                                 DateTime                                     @db.Timestamptz(6)
    name                                       String                                       @db.VarChar
    group_id                                   Int?
    required_approval_count                    Int                                          @default(0)
    namespaces                                 namespaces?                                  @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_9e112565b7")
    projects                                   projects?                                    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a354313d11")
    protected_environment_approval_rules       protected_environment_approval_rules[]
    protected_environment_deploy_access_levels protected_environment_deploy_access_levels[]

    @@unique([project_id, name], map: "index_protected_environments_on_project_id_and_name")
    @@index([project_id], map: "index_protected_environments_on_project_id")
}

model protected_tag_create_access_levels {
    id               Int            @id @default(autoincrement())
    protected_tag_id Int
    access_level     Int?           @default(40)
    user_id          Int?
    group_id         Int?
    created_at       DateTime       @db.Timestamp(6)
    updated_at       DateTime       @db.Timestamp(6)
    namespaces       namespaces?    @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b4eb82fe3c")
    protected_tags   protected_tags @relation(fields: [protected_tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f7dfda8c51")
    users            users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_protected_tag_create_access_levels_user_id")

    @@index([protected_tag_id], map: "index_protected_tag_create_access")
    @@index([group_id], map: "index_protected_tag_create_access_levels_on_group_id")
    @@index([user_id], map: "index_protected_tag_create_access_levels_on_user_id")
}

model protected_tags {
    id                                 Int                                  @id @default(autoincrement())
    project_id                         Int
    name                               String                               @db.VarChar
    created_at                         DateTime                             @db.Timestamp(6)
    updated_at                         DateTime                             @db.Timestamp(6)
    projects                           projects                             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_8e4af87648")
    protected_tag_create_access_levels protected_tag_create_access_levels[]

    @@unique([project_id, name], map: "index_protected_tags_on_project_id_and_name")
    @@index([project_id], map: "index_protected_tags_on_project_id")
}

model push_event_payloads {
    commit_count BigInt
    action       Int     @db.SmallInt
    ref_type     Int     @db.SmallInt
    commit_from  Bytes?
    commit_to    Bytes?
    ref          String?
    commit_title String? @db.VarChar(70)
    ref_count    Int?
    event_id     BigInt  @id
    events       events  @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_36c74129da")
}

model push_rules {
    id                            Int                   @id @default(autoincrement())
    force_push_regex              String?               @db.VarChar
    delete_branch_regex           String?               @db.VarChar
    commit_message_regex          String?               @db.VarChar
    deny_delete_tag               Boolean?
    project_id                    Int?
    created_at                    DateTime?             @db.Timestamp(6)
    updated_at                    DateTime?             @db.Timestamp(6)
    author_email_regex            String?               @db.VarChar
    member_check                  Boolean               @default(false)
    file_name_regex               String?               @db.VarChar
    is_sample                     Boolean?              @default(false)
    max_file_size                 Int                   @default(0)
    prevent_secrets               Boolean               @default(false)
    branch_name_regex             String?               @db.VarChar
    reject_unsigned_commits       Boolean?
    commit_committer_check        Boolean?
    regexp_uses_re2               Boolean?              @default(true)
    commit_message_negative_regex String?               @db.VarChar
    projects                      projects?             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_83b29894de")
    application_settings          application_settings?
    namespaces                    namespaces?
    project_settings              project_settings?

    @@index([project_id], map: "index_push_rules_on_project_id")
}

model raw_usage_data {
    id                          BigInt    @id @default(autoincrement())
    created_at                  DateTime  @db.Timestamptz(6)
    updated_at                  DateTime  @db.Timestamptz(6)
    recorded_at                 DateTime  @unique(map: "index_raw_usage_data_on_recorded_at") @db.Timestamptz(6)
    sent_at                     DateTime? @db.Timestamptz(6)
    payload                     Json
    version_usage_data_id_value BigInt?
}

model redirect_routes {
    id          Int      @id @default(autoincrement())
    source_id   Int
    source_type String   @db.VarChar
    path        String   @unique(map: "index_redirect_routes_on_path") @db.VarChar
    created_at  DateTime @db.Timestamp(6)
    updated_at  DateTime @db.Timestamp(6)

    @@index([source_type, source_id], map: "index_redirect_routes_on_source_type_and_source_id")
}

model related_epic_links {
    id                                        BigInt   @id @default(autoincrement())
    source_id                                 Int
    target_id                                 Int
    created_at                                DateTime @db.Timestamptz(6)
    updated_at                                DateTime @db.Timestamptz(6)
    link_type                                 Int      @default(0) @db.SmallInt
    epics_epicsTorelated_epic_links_source_id epics    @relation("epicsTorelated_epic_links_source_id", fields: [source_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c464534def")
    epics_epicsTorelated_epic_links_target_id epics    @relation("epicsTorelated_epic_links_target_id", fields: [target_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0b72027748")

    @@unique([source_id, target_id], map: "index_related_epic_links_on_source_id_and_target_id")
    @@index([source_id], map: "index_related_epic_links_on_source_id")
    @@index([target_id], map: "index_related_epic_links_on_target_id")
}

model release_links {
    id         BigInt   @id @default(autoincrement())
    release_id Int
    url        String   @db.VarChar
    name       String   @db.VarChar
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    filepath   String?  @db.VarChar(128)
    link_type  Int?     @default(0) @db.SmallInt
    releases   releases @relation(fields: [release_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_753be7ae29")

    @@unique([release_id, name], map: "index_release_links_on_release_id_and_name")
    @@unique([release_id, url], map: "index_release_links_on_release_id_and_url")
}

model releases {
    id                      Int                  @id @default(autoincrement())
    tag                     String?              @db.VarChar
    description             String?
    project_id              Int?
    created_at              DateTime             @db.Timestamp(6)
    updated_at              DateTime             @db.Timestamp(6)
    description_html        String?
    cached_markdown_version Int?
    author_id               Int?
    name                    String?              @db.VarChar
    sha                     String?              @db.VarChar
    released_at             DateTime             @db.Timestamptz(6)
    users                   users?               @relation(fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_8e4456f90f")
    projects                projects?            @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_47fe2a0596")
    evidences               evidences[]
    milestone_releases      milestone_releases[]
    release_links           release_links[]

    @@unique([project_id, tag], map: "index_releases_on_project_tag_unique")
    @@index([author_id, id, created_at], map: "index_releases_on_author_id_id_created_at")
    @@index([project_id, released_at, id], map: "index_releases_on_project_id_and_released_at_and_id")
    @@index([released_at], map: "index_releases_on_released_at")
}

model remote_mirrors {
    id                         Int       @id @default(autoincrement())
    project_id                 Int?
    url                        String?   @db.VarChar
    enabled                    Boolean?  @default(false)
    update_status              String?   @db.VarChar
    last_update_at             DateTime? @db.Timestamp(6)
    last_successful_update_at  DateTime? @db.Timestamp(6)
    last_error                 String?   @db.VarChar
    encrypted_credentials      String?
    encrypted_credentials_iv   String?   @db.VarChar
    encrypted_credentials_salt String?   @db.VarChar
    created_at                 DateTime  @db.Timestamp(6)
    updated_at                 DateTime  @db.Timestamp(6)
    last_update_started_at     DateTime? @db.Timestamp(6)
    only_protected_branches    Boolean   @default(false)
    remote_name                String?   @db.VarChar
    error_notification_sent    Boolean?
    keep_divergent_refs        Boolean?
    projects                   projects? @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_43a9aa4ca8")

    @@index([last_successful_update_at], map: "index_remote_mirrors_on_last_successful_update_at")
    @@index([project_id], map: "index_remote_mirrors_on_project_id")
}

model repository_languages {
    project_id              Int
    programming_language_id Int
    share                   Float
    projects                projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a750ec87a8")

    @@id([project_id, programming_language_id])
}

model required_code_owners_sections {
    id                  BigInt             @id @default(autoincrement())
    protected_branch_id Int
    name                String
    protected_branches  protected_branches @relation(fields: [protected_branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_817708cf2d")

    @@index([protected_branch_id], map: "index_required_code_owners_sections_on_protected_branch_id")
}

model requirements {
    id                                   BigInt                                 @id @default(autoincrement())
    created_at                           DateTime                               @db.Timestamptz(6)
    updated_at                           DateTime                               @db.Timestamptz(6)
    project_id                           Int
    author_id                            Int?
    iid                                  Int
    cached_markdown_version              Int?
    state                                Int                                    @default(1) @db.SmallInt
    title                                String                                 @db.VarChar(255)
    title_html                           String?
    description                          String?
    description_html                     String?
    issue_id                             Int?                                   @unique(map: "index_requirements_on_issue_id")
    users                                users?                                 @relation(fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_rails_33fed8aa4e")
    issues                               issues?                                @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_85044baef0")
    projects                             projects                               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f212e67e63")
    requirements_management_test_reports requirements_management_test_reports[]

    @@index([author_id], map: "index_requirements_on_author_id")
    @@index([created_at], map: "index_requirements_on_created_at")
    @@index([project_id], map: "index_requirements_on_project_id")
    @@index([state], map: "index_requirements_on_state")
    @@index([title], map: "index_requirements_on_title_trigram")
    @@index([updated_at], map: "index_requirements_on_updated_at")
}

model requirements_management_test_reports {
    id             BigInt        @id @default(autoincrement())
    created_at     DateTime      @db.Timestamptz(6)
    requirement_id BigInt?
    author_id      Int?
    state          Int           @db.SmallInt
    build_id       BigInt?
    issue_id       Int?
    users          users?        @relation(fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_rails_d1e8b498bf")
    issues         issues?       @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_88f30752fc")
    requirements   requirements? @relation(fields: [requirement_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_fb3308ad55")

    @@index([author_id], map: "index_requirements_management_test_reports_on_author_id")
    @@index([build_id], map: "index_requirements_management_test_reports_on_build_id")
    @@index([issue_id], map: "index_requirements_management_test_reports_on_issue_id")
    @@index([requirement_id], map: "index_requirements_management_test_reports_on_requirement_id")
}

model resource_iteration_events {
    id               BigInt          @id @default(autoincrement())
    user_id          Int
    issue_id         Int?
    merge_request_id Int?
    iteration_id     BigInt?
    created_at       DateTime        @db.Timestamptz(6)
    action           Int             @db.SmallInt
    issues           issues?         @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_abf5d4affa")
    sprints          sprints?        @relation(fields: [iteration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_cee126f66c")
    merge_requests   merge_requests? @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6830c13ac1")
    users            users           @relation(fields: [user_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "fk_rails_501fa15d69")

    @@index([issue_id], map: "index_resource_iteration_events_on_issue_id")
    @@index([iteration_id], map: "index_resource_iteration_events_on_iteration_id")
    @@index([merge_request_id], map: "index_resource_iteration_events_on_merge_request_id")
    @@index([user_id], map: "index_resource_iteration_events_on_user_id")
}

model resource_label_events {
    id                      BigInt          @id @default(autoincrement())
    action                  Int
    issue_id                Int?
    merge_request_id        Int?
    epic_id                 Int?
    label_id                Int?
    user_id                 Int?
    created_at              DateTime        @db.Timestamptz(6)
    cached_markdown_version Int?
    reference               String?
    reference_html          String?
    epics                   epics?          @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_75efb0a653")
    issues                  issues?         @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5ac1d2fc24")
    labels                  labels?         @relation(fields: [label_id], references: [id], onUpdate: NoAction, map: "fk_rails_b126799f57")
    merge_requests          merge_requests? @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9851a00031")
    users                   users?          @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_rails_fe91ece594")

    @@index([issue_id, label_id, action], map: "index_resource_label_events_issue_id_label_id_action")
    @@index([epic_id], map: "index_resource_label_events_on_epic_id")
    @@index([label_id, action], map: "index_resource_label_events_on_label_id_and_action")
    @@index([merge_request_id, label_id, action], map: "index_resource_label_events_on_merge_request_id_label_id_action")
    @@index([user_id], map: "index_resource_label_events_on_user_id")
}

model resource_milestone_events {
    id               BigInt          @id @default(autoincrement())
    user_id          Int?
    issue_id         Int?
    merge_request_id Int?
    milestone_id     Int?
    action           Int             @db.SmallInt
    state            Int             @db.SmallInt
    created_at       DateTime        @db.Timestamptz(6)
    issues           issues?         @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a788026e85")
    merge_requests   merge_requests? @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a006df5590")
    milestones       milestones?     @relation(fields: [milestone_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c940fb9fc5")
    users            users?          @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_rails_cedf8cce4d")

    @@index([created_at], map: "index_resource_milestone_events_created_at")
    @@index([issue_id], map: "index_resource_milestone_events_on_issue_id")
    @@index([merge_request_id], map: "index_resource_milestone_events_on_merge_request_id")
    @@index([milestone_id], map: "index_resource_milestone_events_on_milestone_id")
    @@index([user_id], map: "index_resource_milestone_events_on_user_id")
}

model resource_state_events {
    id                                                                           BigInt          @id @default(autoincrement())
    user_id                                                                      Int?
    issue_id                                                                     Int?
    merge_request_id                                                             Int?
    created_at                                                                   DateTime        @db.Timestamptz(6)
    state                                                                        Int             @db.SmallInt
    epic_id                                                                      Int?
    source_commit                                                                String?
    close_after_error_tracking_resolve                                           Boolean         @default(false)
    close_auto_resolve_prometheus_alert                                          Boolean         @default(false)
    source_merge_request_id                                                      Int?
    epics                                                                        epics?          @relation(fields: [epic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c913c64977")
    issues                                                                       issues?         @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_29af06892a")
    merge_requests_merge_requestsToresource_state_events_merge_request_id        merge_requests? @relation("merge_requestsToresource_state_events_merge_request_id", fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3112bba7dc")
    merge_requests_merge_requestsToresource_state_events_source_merge_request_id merge_requests? @relation("merge_requestsToresource_state_events_source_merge_request_id", fields: [source_merge_request_id], references: [id], onUpdate: NoAction, map: "fk_rails_7ddc5f7457")
    users                                                                        users?          @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_rails_f5827a7ccd")

    @@index([epic_id], map: "index_resource_state_events_on_epic_id")
    @@index([issue_id, created_at], map: "index_resource_state_events_on_issue_id_and_created_at")
    @@index([merge_request_id], map: "index_resource_state_events_on_merge_request_id")
    @@index([source_merge_request_id], map: "index_resource_state_events_on_source_merge_request_id")
    @@index([user_id], map: "index_resource_state_events_on_user_id")
}

model resource_weight_events {
    id         BigInt   @id @default(autoincrement())
    user_id    Int?
    issue_id   Int
    weight     Int?
    created_at DateTime @db.Timestamptz(6)
    issues     issues   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5eb5cb92a1")
    users      users?   @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_rails_bfc406b47c")

    @@index([issue_id, created_at], map: "index_resource_weight_events_on_issue_id_and_created_at")
    @@index([issue_id, weight], map: "index_resource_weight_events_on_issue_id_and_weight")
    @@index([user_id], map: "index_resource_weight_events_on_user_id")
}

model reviews {
    id               BigInt         @id @default(autoincrement())
    author_id        Int?
    merge_request_id Int
    project_id       Int
    created_at       DateTime       @db.Timestamptz(6)
    users            users?         @relation(fields: [author_id], references: [id], onUpdate: NoAction, map: "fk_rails_29e6f859c4")
    merge_requests   merge_requests @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5ca11d8c31")
    projects         projects       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_64798be025")
    notes            notes[]

    @@index([author_id], map: "index_reviews_on_author_id")
    @@index([merge_request_id], map: "index_reviews_on_merge_request_id")
    @@index([project_id], map: "index_reviews_on_project_id")
}

model routes {
    id           Int         @id @default(autoincrement())
    source_id    Int
    source_type  String      @db.VarChar
    path         String      @unique(map: "index_routes_on_path") @db.VarChar
    created_at   DateTime?   @db.Timestamp(6)
    updated_at   DateTime?   @db.Timestamp(6)
    name         String?     @db.VarChar
    namespace_id Int?        @unique(map: "index_routes_on_namespace_id")
    namespaces   namespaces? @relation(fields: [namespace_id], references: [id], onUpdate: NoAction, map: "fk_679ff8213d")

    @@unique([source_type, source_id], map: "index_routes_on_source_type_and_source_id")
    @@index([name], map: "index_route_on_name_trigram")
    @@index([path], map: "index_routes_on_path_text_pattern_ops")
    @@index([path], map: "index_routes_on_path_trigram")
}

model saml_group_links {
    id              BigInt     @id @default(autoincrement())
    access_level    Int        @db.SmallInt
    group_id        Int
    created_at      DateTime   @db.Timestamptz(6)
    updated_at      DateTime   @db.Timestamptz(6)
    saml_group_name String
    namespaces      namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_22e312c530")

    @@unique([group_id, saml_group_name], map: "index_saml_group_links_on_group_id_and_saml_group_name")
}

model saml_providers {
    id                              Int          @id @default(autoincrement())
    group_id                        Int
    enabled                         Boolean
    certificate_fingerprint         String       @db.VarChar
    sso_url                         String       @db.VarChar
    enforced_sso                    Boolean      @default(false)
    enforced_group_managed_accounts Boolean      @default(false)
    prohibited_outer_forks          Boolean      @default(true)
    default_membership_role         Int          @default(10) @db.SmallInt
    git_check_enforced              Boolean      @default(false)
    namespaces                      namespaces   @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_306d459be7")
    identities                      identities[]

    @@index([group_id], map: "index_saml_providers_on_group_id")
}

model saved_replies {
    id         BigInt   @id @default(autoincrement())
    user_id    Int
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    name       String
    content    String
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a8bf5bf111")

    @@unique([user_id, name], map: "index_saved_replies_on_name_text_pattern_ops")
}

model schema_migrations {
    version     String    @id @db.VarChar
    finished_at DateTime? @default(now()) @db.Timestamptz(6)
}

model scim_identities {
    id         BigInt     @id @default(autoincrement())
    group_id   Int        @unique(map: "index_scim_identities_on_lower_extern_uid_and_group_id")
    user_id    Int
    created_at DateTime   @db.Timestamptz(6)
    updated_at DateTime   @db.Timestamptz(6)
    active     Boolean?   @default(false)
    extern_uid String     @db.VarChar(255)
    namespaces namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4d2056ebd9")
    users      users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9421a0bffb")

    @@unique([user_id, group_id], map: "index_scim_identities_on_user_id_and_group_id")
    @@index([group_id], map: "index_scim_identities_on_group_id")
}

model scim_oauth_access_tokens {
    id              Int        @id @default(autoincrement())
    created_at      DateTime   @db.Timestamptz(6)
    updated_at      DateTime   @db.Timestamptz(6)
    group_id        Int
    token_encrypted String     @db.VarChar
    namespaces      namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c84404fb6c")

    @@unique([group_id, token_encrypted], map: "index_scim_oauth_access_tokens_on_group_id_and_token_encrypted")
}

model security_findings {
    id                     BigInt                 @id @default(autoincrement())
    scan_id                BigInt
    scanner_id             BigInt
    severity               Int                    @db.SmallInt
    confidence             Int                    @db.SmallInt
    project_fingerprint    String?
    deduplicated           Boolean                @default(false)
    uuid                   String?                @db.Uuid
    overridden_uuid        String?                @db.Uuid
    security_scans         security_scans         @relation(fields: [scan_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bb63863cf1")
    vulnerability_scanners vulnerability_scanners @relation(fields: [scanner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_729b763a54")

    @@unique([uuid, scan_id], map: "index_security_findings_on_uuid_and_scan_id")
    @@index([confidence], map: "index_security_findings_on_confidence")
    @@index([project_fingerprint], map: "index_security_findings_on_project_fingerprint")
    @@index([scan_id, deduplicated], map: "index_security_findings_on_scan_id_and_deduplicated")
    @@index([scanner_id], map: "index_security_findings_on_scanner_id")
    @@index([severity], map: "index_security_findings_on_severity")
}

model security_orchestration_policy_configurations {
    id                                                                                                    BigInt                                         @id @default(autoincrement())
    project_id                                                                                            Int?
    security_policy_management_project_id                                                                 Int
    created_at                                                                                            DateTime                                       @db.Timestamptz(6)
    updated_at                                                                                            DateTime                                       @db.Timestamptz(6)
    configured_at                                                                                         DateTime?                                      @db.Timestamptz(6)
    namespace_id                                                                                          Int?
    namespaces                                                                                            namespaces?                                    @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_a50430b375")
    projects_projectsTosecurity_orchestration_policy_configurations_project_id                            projects?                                      @relation("projectsTosecurity_orchestration_policy_configurations_project_id", fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0a22dcd52d")
    projects_projectsTosecurity_orchestration_policy_configurations_security_policy_management_project_id projects                                       @relation("projectsTosecurity_orchestration_policy_configurations_security_policy_management_project_id", fields: [security_policy_management_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_security_policy_configurations_management_project_id")
    security_orchestration_policy_rule_schedules                                                          security_orchestration_policy_rule_schedules[]

    @@index([security_policy_management_project_id, project_id], map: "index_sop_configurations_project_id_policy_project_id")
}

model security_orchestration_policy_rule_schedules {
    id                                             BigInt                                       @id @default(autoincrement())
    created_at                                     DateTime                                     @db.Timestamptz(6)
    updated_at                                     DateTime                                     @db.Timestamptz(6)
    next_run_at                                    DateTime?                                    @db.Timestamptz(6)
    security_orchestration_policy_configuration_id BigInt
    user_id                                        Int
    policy_index                                   Int
    cron                                           String
    rule_index                                     Int                                          @default(0)
    security_orchestration_policy_configurations   security_orchestration_policy_configurations @relation(fields: [security_orchestration_policy_configuration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_17ade83f17")
    users                                          users                                        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_efe1d9b133")

    @@index([security_orchestration_policy_configuration_id], map: "index_sop_schedules_on_sop_configuration_id")
    @@index([user_id], map: "index_sop_schedules_on_user_id")
}

model security_scans {
    id                BigInt              @id @default(autoincrement())
    created_at        DateTime            @db.Timestamptz(6)
    updated_at        DateTime            @db.Timestamptz(6)
    build_id          BigInt
    scan_type         Int                 @db.SmallInt
    info              Json                @default("{}")
    project_id        Int?
    pipeline_id       BigInt?
    latest            Boolean             @default(true)
    status            Int                 @default(0) @db.SmallInt
    projects          projects?           @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dbc89265b9")
    security_findings security_findings[]

    @@unique([build_id, scan_type], map: "idx_security_scans_on_build_and_scan_type")
    @@index([scan_type], map: "idx_security_scans_on_scan_type")
    @@index([created_at], map: "index_security_scans_on_created_at")
    @@index([pipeline_id], map: "index_security_scans_on_pipeline_id")
    @@index([project_id], map: "index_security_scans_on_project_id")
    @@index([id], map: "index_security_scans_on_date_created_at_and_id")
}

model security_training_providers {
    id                 BigInt               @id @default(autoincrement())
    name               String               @unique(map: "index_security_training_providers_on_unique_name")
    description        String?
    url                String
    logo_url           String?
    created_at         DateTime             @db.Timestamptz(6)
    updated_at         DateTime             @db.Timestamptz(6)
    security_trainings security_trainings[]
}

model security_trainings {
    id                          BigInt                      @id @default(autoincrement())
    project_id                  Int
    provider_id                 BigInt
    is_primary                  Boolean                     @default(false)
    created_at                  DateTime                    @db.Timestamptz(6)
    updated_at                  DateTime                    @db.Timestamptz(6)
    projects                    projects                    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_f80240fae0")
    security_training_providers security_training_providers @relation(fields: [provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_84c7951d72")

    @@index([project_id], map: "index_security_trainings_on_project_id")
    @@index([provider_id], map: "index_security_trainings_on_provider_id")
}

model self_managed_prometheus_alert_events {
    id                                          BigInt                                        @id @default(autoincrement())
    project_id                                  Int
    environment_id                              Int?
    started_at                                  DateTime                                      @db.Timestamptz(6)
    ended_at                                    DateTime?                                     @db.Timestamptz(6)
    status                                      Int                                           @db.SmallInt
    title                                       String                                        @db.VarChar(255)
    query_expression                            String?                                       @db.VarChar(255)
    payload_key                                 String                                        @db.VarChar(255)
    environments                                environments?                                 @relation(fields: [environment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_39d83d1b65")
    projects                                    projects                                      @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3936dadc62")
    issues_self_managed_prometheus_alert_events issues_self_managed_prometheus_alert_events[]

    @@unique([project_id, payload_key], map: "idx_project_id_payload_key_self_managed_prometheus_alert_events")
    @@index([environment_id], map: "index_self_managed_prometheus_alert_events_on_environment_id")
}

model sent_notifications {
    id                        Int     @id @default(autoincrement())
    project_id                Int?
    noteable_id               Int?
    noteable_type             String? @db.VarChar
    recipient_id              Int?
    commit_id                 String? @db.VarChar
    reply_key                 String  @unique(map: "index_sent_notifications_on_reply_key") @db.VarChar
    line_code                 String? @db.VarChar
    note_type                 String? @db.VarChar
    position                  String?
    in_reply_to_discussion_id String? @db.VarChar
}

model sentry_issues {
    id                      BigInt @id @default(autoincrement())
    issue_id                Int    @unique(map: "index_sentry_issues_on_issue_id")
    sentry_issue_identifier BigInt
    issues                  issues @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a6a9612965")

    @@index([sentry_issue_identifier], map: "index_sentry_issues_on_sentry_issue_identifier")
}

model serverless_domain_cluster {
    uuid                             String                        @id @db.VarChar(14)
    pages_domain_id                  Int
    clusters_applications_knative_id Int                           @unique(map: "idx_serverless_domain_cluster_on_clusters_applications_knative")
    creator_id                       Int?
    created_at                       DateTime                      @db.Timestamptz(6)
    updated_at                       DateTime                      @db.Timestamptz(6)
    encrypted_key                    String?
    encrypted_key_iv                 String?                       @db.VarChar(255)
    certificate                      String?
    clusters_applications_knative    clusters_applications_knative @relation(fields: [clusters_applications_knative_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e59e868733")
    users                            users?                        @relation(fields: [creator_id], references: [id], onUpdate: NoAction, map: "fk_rails_fbdba67eb1")
    pages_domains                    pages_domains                 @relation(fields: [pages_domain_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c09009dee1")

    @@index([creator_id], map: "index_serverless_domain_cluster_on_creator_id")
    @@index([pages_domain_id], map: "index_serverless_domain_cluster_on_pages_domain_id")
}

model service_desk_settings {
    project_id                                                        Int       @id
    issue_template_key                                                String?   @db.VarChar(255)
    outgoing_name                                                     String?   @db.VarChar(255)
    project_key                                                       String?   @db.VarChar(255)
    file_template_project_id                                          Int?
    projects_projectsToservice_desk_settings_file_template_project_id projects? @relation("projectsToservice_desk_settings_file_template_project_id", fields: [file_template_project_id], references: [id], onUpdate: NoAction, map: "fk_03afb71f06")
    projects_projectsToservice_desk_settings_project_id               projects  @relation("projectsToservice_desk_settings_project_id", fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_223a296a85")

    @@index([file_template_project_id], map: "index_service_desk_settings_on_file_template_project_id")
}

model shards {
    id                      Int                       @id @default(autoincrement())
    name                    String                    @unique(map: "index_shards_on_name") @db.VarChar
    group_wiki_repositories group_wiki_repositories[]
    pool_repositories       pool_repositories[]
    project_repositories    project_repositories[]
    snippet_repositories    snippet_repositories[]
}

model slack_integrations {
    id           Int          @id @default(autoincrement())
    service_id   Int
    team_id      String       @db.VarChar
    team_name    String       @db.VarChar
    alias        String       @db.VarChar
    user_id      String       @db.VarChar
    created_at   DateTime     @db.Timestamp(6)
    updated_at   DateTime     @db.Timestamp(6)
    integrations integrations @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_73db19721a")

    @@unique([team_id, alias], map: "index_slack_integrations_on_team_id_and_alias")
    @@index([service_id], map: "index_slack_integrations_on_service_id")
}

model smartcard_identities {
    id      BigInt @id @default(autoincrement())
    user_id Int
    subject String @db.VarChar
    issuer  String @db.VarChar
    users   users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4689f889a9")

    @@unique([subject, issuer], map: "index_smartcard_identities_on_subject_and_issuer")
    @@index([user_id], map: "index_smartcard_identities_on_user_id")
}

model snippet_repositories {
    snippet_id               Int       @id
    shard_id                 Int
    disk_path                String    @unique(map: "index_snippet_repositories_on_disk_path") @db.VarChar(80)
    verification_retry_count Int?      @db.SmallInt
    verification_retry_at    DateTime? @db.Timestamptz(6)
    verified_at              DateTime? @db.Timestamptz(6)
    verification_checksum    Bytes?
    verification_failure     String?
    verification_state       Int       @default(0) @db.SmallInt
    verification_started_at  DateTime? @db.Timestamptz(6)
    shards                   shards    @relation(fields: [shard_id], references: [id], onUpdate: NoAction, map: "fk_rails_f21f899728")
    snippets                 snippets  @relation(fields: [snippet_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_8afd7e2f71")

    @@index([shard_id], map: "index_snippet_repositories_on_shard_id")
    @@index([verification_state], map: "index_snippet_repositories_verification_state")
}

model snippet_repository_storage_moves {
    id                       BigInt   @id @default(autoincrement())
    created_at               DateTime @db.Timestamptz(6)
    updated_at               DateTime @db.Timestamptz(6)
    snippet_id               Int
    state                    Int      @default(1) @db.SmallInt
    source_storage_name      String
    destination_storage_name String
    snippets                 snippets @relation(fields: [snippet_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4b950f5b94")

    @@index([snippet_id], map: "index_snippet_repository_storage_moves_on_snippet_id")
}

model snippet_statistics {
    snippet_id      Int      @id
    repository_size BigInt   @default(0)
    file_count      BigInt   @default(0)
    commit_count    BigInt   @default(0)
    snippets        snippets @relation(fields: [snippet_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ebc283ccf1")
}

model snippet_user_mentions {
    id                     BigInt   @id @default(autoincrement())
    snippet_id             Int
    note_id                Int?
    mentioned_users_ids    Int[]
    mentioned_projects_ids Int[]
    mentioned_groups_ids   Int[]
    notes                  notes?   @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_4d3f96b2cb")
    snippets               snippets @relation(fields: [snippet_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3e00189191")

    @@unique([snippet_id, note_id], map: "snippet_user_mentions_on_snippet_id_and_note_id_index")
}

model snippets {
    id                               Int                                @id @default(autoincrement())
    title                            String?                            @db.VarChar
    content                          String?
    author_id                        Int
    project_id                       Int?
    created_at                       DateTime?                          @db.Timestamp(6)
    updated_at                       DateTime?                          @db.Timestamp(6)
    file_name                        String?                            @db.VarChar
    type                             String?                            @db.VarChar
    visibility_level                 Int                                @default(0)
    title_html                       String?
    content_html                     String?
    cached_markdown_version          Int?
    description                      String?
    description_html                 String?
    encrypted_secret_token           String?                            @db.VarChar(255)
    encrypted_secret_token_iv        String?                            @db.VarChar(255)
    secret                           Boolean                            @default(false)
    repository_read_only             Boolean                            @default(false)
    projects                         projects?                          @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_be41fd4bb7")
    snippet_repositories             snippet_repositories?
    snippet_repository_storage_moves snippet_repository_storage_moves[]
    snippet_statistics               snippet_statistics?
    snippet_user_mentions            snippet_user_mentions[]

    @@index([id, project_id], map: "index_snippet_on_id_and_project_id")
    @@index([author_id], map: "index_snippets_on_author_id")
    @@index([content], map: "index_snippets_on_content_trigram")
    @@index([created_at], map: "index_snippets_on_created_at")
    @@index([description], map: "index_snippets_on_description_trigram")
    @@index([file_name], map: "index_snippets_on_file_name_trigram")
    @@index([id, created_at], map: "index_snippets_on_id_and_created_at")
    @@index([id, type], map: "index_snippets_on_id_and_type")
    @@index([project_id, title], map: "index_snippets_on_project_id_and_title")
    @@index([project_id, visibility_level], map: "index_snippets_on_project_id_and_visibility_level")
    @@index([title], map: "index_snippets_on_title_trigram")
    @@index([updated_at], map: "index_snippets_on_updated_at")
    @@index([visibility_level, secret], map: "index_snippets_on_visibility_level_and_secret")
}

model software_license_policies {
    id                  Int               @id @default(autoincrement())
    project_id          Int
    software_license_id Int
    classification      Int               @default(0)
    created_at          DateTime          @db.Timestamptz(6)
    updated_at          DateTime          @db.Timestamptz(6)
    projects            projects          @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_87b2247ce5")
    software_licenses   software_licenses @relation(fields: [software_license_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_7a7a2a92de")

    @@unique([project_id, software_license_id], map: "index_software_license_policies_unique_per_project")
    @@index([software_license_id], map: "index_software_license_policies_on_software_license_id")
}

model software_licenses {
    id                        Int                         @id @default(autoincrement())
    name                      String                      @unique(map: "index_software_licenses_on_unique_name") @db.VarChar
    spdx_identifier           String?                     @db.VarChar(255)
    software_license_policies software_license_policies[]

    @@index([spdx_identifier], map: "index_software_licenses_on_spdx_identifier")
}

model spam_logs {
    id                 Int      @id @default(autoincrement())
    user_id            Int?
    source_ip          String?  @db.VarChar
    user_agent         String?  @db.VarChar
    via_api            Boolean?
    noteable_type      String?  @db.VarChar
    title              String?  @db.VarChar
    description        String?
    created_at         DateTime @db.Timestamp(6)
    updated_at         DateTime @db.Timestamp(6)
    submitted_as_ham   Boolean  @default(false)
    recaptcha_verified Boolean  @default(false)

    @@index([user_id], map: "index_spam_logs_on_user_id")
}

model sprints {
    id                        BigInt                      @id @default(autoincrement())
    created_at                DateTime                    @db.Timestamptz(6)
    updated_at                DateTime                    @db.Timestamptz(6)
    start_date                DateTime?                   @db.Date
    due_date                  DateTime?                   @db.Date
    project_id                Int?
    group_id                  Int?
    iid                       Int
    cached_markdown_version   Int?
    title                     String?
    title_html                String?
    description               String?
    description_html          String?
    state_enum                Int                         @default(1) @db.SmallInt
    iterations_cadence_id     BigInt?
    sequence                  Int?
    namespaces                namespaces?                 @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_80aa8a1f95")
    iterations_cadences       iterations_cadences?        @relation(fields: [iterations_cadence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_365d1db505")
    projects                  projects?                   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_e8206c9686")
    issues                    issues[]
    lists                     lists[]
    merge_requests            merge_requests[]
    resource_iteration_events resource_iteration_events[]

    @@unique([project_id, iid], map: "index_sprints_on_project_id_and_iid")
    @@unique([iterations_cadence_id, sequence], map: "sequence_is_unique_per_iterations_cadence_id")
    @@index([iterations_cadence_id], map: "index_sprints_iterations_cadence_id")
    @@index([description], map: "index_sprints_on_description_trigram")
    @@index([due_date], map: "index_sprints_on_due_date")
    @@index([group_id], map: "index_sprints_on_group_id")
    @@index([title], map: "index_sprints_on_title")
    @@index([title], map: "index_sprints_on_title_trigram")
}

model status_check_responses {
    id                        BigInt                 @id @default(autoincrement())
    merge_request_id          Int
    external_approval_rule_id BigInt?
    sha                       Bytes
    external_status_check_id  BigInt
    status                    Int                    @default(0) @db.SmallInt
    external_status_checks    external_status_checks @relation(fields: [external_status_check_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_55bd2abc83")
    merge_requests            merge_requests         @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f3953d86c6")

    @@index([external_approval_rule_id], map: "index_status_check_responses_on_external_approval_rule_id")
    @@index([external_status_check_id], map: "index_status_check_responses_on_external_status_check_id")
    @@index([merge_request_id], map: "index_status_check_responses_on_merge_request_id")
}

model status_page_published_incidents {
    id         BigInt   @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    issue_id   Int      @unique(map: "index_status_page_published_incidents_on_issue_id")
    issues     issues   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_61e5493940")
}

model status_page_settings {
    project_id                  Int      @id @default(autoincrement())
    created_at                  DateTime @db.Timestamptz(6)
    updated_at                  DateTime @db.Timestamptz(6)
    enabled                     Boolean  @default(false)
    aws_s3_bucket_name          String   @db.VarChar(63)
    aws_region                  String   @db.VarChar(255)
    aws_access_key              String   @db.VarChar(255)
    encrypted_aws_secret_key    String   @db.VarChar(255)
    encrypted_aws_secret_key_iv String   @db.VarChar(255)
    status_page_url             String?
    projects                    projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_506e5ba391")

    @@index([project_id], map: "index_status_page_settings_on_project_id")
}

model subscriptions {
    id                Int       @id @default(autoincrement())
    user_id           Int?
    subscribable_id   Int?
    subscribable_type String?   @db.VarChar
    subscribed        Boolean?
    created_at        DateTime? @db.Timestamp(6)
    updated_at        DateTime? @db.Timestamp(6)
    project_id        Int?
    projects          projects? @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d0c8bda804")

    @@unique([subscribable_id, subscribable_type, user_id, project_id], map: "index_subscriptions_on_subscribable_and_user_id_and_project_id")
    @@index([project_id], map: "index_subscriptions_on_project_id")
}

model suggestions {
    id             BigInt  @id @default(autoincrement())
    note_id        Int
    relative_order Int     @db.SmallInt
    applied        Boolean @default(false)
    commit_id      String? @db.VarChar
    from_content   String
    to_content     String
    lines_above    Int     @default(0)
    lines_below    Int     @default(0)
    outdated       Boolean @default(false)
    notes          notes   @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_33b03a535c")

    @@unique([note_id, relative_order], map: "index_suggestions_on_note_id_and_relative_order")
}

model system_note_metadata {
    id                     Int                   @id @default(autoincrement())
    note_id                Int                   @unique(map: "index_system_note_metadata_on_note_id")
    commit_count           Int?
    action                 String?               @db.VarChar
    created_at             DateTime              @db.Timestamp(6)
    updated_at             DateTime              @db.Timestamp(6)
    description_version_id BigInt?
    description_versions   description_versions? @relation(fields: [description_version_id], references: [id], onUpdate: NoAction, map: "fk_fbd87415c9")
    notes                  notes                 @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d83a918cb1")
}

model taggings {
    tag_id        Int?
    taggable_type String?   @db.VarChar
    tagger_id     Int?
    tagger_type   String?   @db.VarChar
    context       String?   @db.VarChar
    created_at    DateTime? @db.Timestamp(6)
    id            BigInt    @id @default(autoincrement())
    taggable_id   BigInt?

    @@unique([tag_id, taggable_id, taggable_type, context, tagger_id, tagger_type], map: "taggings_idx")
    @@index([tag_id], map: "index_taggings_on_tag_id")
    @@index([taggable_id, taggable_type, context], map: "index_taggings_on_taggable_id_and_taggable_type_and_context")
}

model tags {
    id             Int     @id @default(autoincrement())
    name           String? @unique(map: "index_tags_on_name") @db.VarChar
    taggings_count Int?    @default(0)

    @@index([name], map: "index_tags_on_name_trigram")
}

model term_agreements {
    id                        Int                       @id @default(autoincrement())
    term_id                   Int
    user_id                   Int
    accepted                  Boolean                   @default(false)
    created_at                DateTime                  @db.Timestamptz(6)
    updated_at                DateTime                  @db.Timestamptz(6)
    application_setting_terms application_setting_terms @relation(fields: [term_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_a88721bcdf")
    users                     users                     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6ea6520e4a")

    @@unique([user_id, term_id], map: "term_agreements_unique_index")
    @@index([term_id], map: "index_term_agreements_on_term_id")
    @@index([user_id], map: "index_term_agreements_on_user_id")
}

model terraform_state_versions {
    id                       BigInt           @id @default(autoincrement())
    terraform_state_id       BigInt
    created_by_user_id       Int?
    created_at               DateTime         @db.Timestamptz(6)
    updated_at               DateTime         @db.Timestamptz(6)
    version                  Int
    file_store               Int              @db.SmallInt
    file                     String
    verification_retry_count Int?             @db.SmallInt
    verification_retry_at    DateTime?        @db.Timestamptz(6)
    verified_at              DateTime?        @db.Timestamptz(6)
    verification_checksum    Bytes?
    verification_failure     String?
    ci_build_id              BigInt?
    verification_started_at  DateTime?        @db.Timestamptz(6)
    verification_state       Int              @default(0) @db.SmallInt
    users                    users?           @relation(fields: [created_by_user_id], references: [id], onUpdate: NoAction, map: "fk_6e81384d7f")
    terraform_states         terraform_states @relation(fields: [terraform_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_04f176e239")

    @@unique([terraform_state_id, version], map: "index_terraform_state_versions_on_state_id_and_version")
    @@index([ci_build_id], map: "index_terraform_state_versions_on_ci_build_id")
    @@index([created_by_user_id], map: "index_terraform_state_versions_on_created_by_user_id")
    @@index([verification_state], map: "index_terraform_state_versions_on_verification_state")
}

model terraform_states {
    id                       BigInt                     @id @default(autoincrement())
    project_id               Int
    created_at               DateTime                   @db.Timestamptz(6)
    updated_at               DateTime                   @db.Timestamptz(6)
    file_store               Int?                       @db.SmallInt
    file                     String?                    @db.VarChar(255)
    lock_xid                 String?                    @db.VarChar(255)
    locked_at                DateTime?                  @db.Timestamptz(6)
    locked_by_user_id        Int?
    uuid                     String                     @unique(map: "index_terraform_states_on_uuid") @db.VarChar(32)
    name                     String                     @db.VarChar(255)
    versioning_enabled       Boolean                    @default(true)
    users                    users?                     @relation(fields: [locked_by_user_id], references: [id], onUpdate: NoAction, map: "fk_558901b030")
    projects                 projects                   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_78f54ca485")
    terraform_state_versions terraform_state_versions[]

    @@unique([project_id, name], map: "index_terraform_states_on_project_id_and_name")
    @@index([file_store], map: "index_terraform_states_on_file_store")
    @@index([locked_by_user_id], map: "index_terraform_states_on_locked_by_user_id")
}

model timelogs {
    id               Int             @id @default(autoincrement())
    time_spent       Int
    user_id          Int?
    created_at       DateTime        @db.Timestamp(6)
    updated_at       DateTime        @db.Timestamp(6)
    issue_id         Int?
    merge_request_id Int?
    spent_at         DateTime?       @default(now()) @db.Timestamp(6)
    note_id          Int?
    project_id       Int?
    summary          String?
    issues           issues?         @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_timelogs_issues_issue_id")
    merge_requests   merge_requests? @relation(fields: [merge_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_timelogs_merge_requests_merge_request_id")
    notes            notes?          @relation(fields: [note_id], references: [id], onUpdate: NoAction, map: "fk_timelogs_note_id")
    projects         projects?       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c49c83dd77")

    @@index([issue_id], map: "index_timelogs_on_issue_id")
    @@index([merge_request_id], map: "index_timelogs_on_merge_request_id")
    @@index([note_id], map: "index_timelogs_on_note_id")
    @@index([project_id, spent_at], map: "index_timelogs_on_project_id_and_spent_at")
    @@index([user_id], map: "index_timelogs_on_user_id")
}

model todos {
    id                           Int         @id @default(autoincrement())
    user_id                      Int
    project_id                   Int?
    target_id                    Int?
    target_type                  String      @db.VarChar
    author_id                    Int
    action                       Int
    state                        String      @db.VarChar
    created_at                   DateTime?   @db.Timestamp(6)
    updated_at                   DateTime?   @db.Timestamp(6)
    note_id                      Int?
    commit_id                    String?     @db.VarChar
    group_id                     Int?
    resolved_by_action           Int?        @db.SmallInt
    users_todos_author_idTousers users       @relation("todos_author_idTousers", fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ccf0373936")
    namespaces                   namespaces? @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a27c483435")
    notes                        notes?      @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_91d1f47b13")
    projects                     projects?   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_45054f9c45")
    users_todos_user_idTousers   users       @relation("todos_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d94154aa95")

    @@index([author_id], map: "index_todos_on_author_id")
    @@index([author_id, created_at], map: "index_todos_on_author_id_and_created_at")
    @@index([commit_id], map: "index_todos_on_commit_id")
    @@index([group_id], map: "index_todos_on_group_id")
    @@index([note_id], map: "index_todos_on_note_id")
    @@index([project_id, id], map: "index_todos_on_project_id_and_id")
    @@index([project_id, user_id, id], map: "index_todos_on_project_id_and_user_id_and_id")
    @@index([target_type, target_id], map: "index_todos_on_target_type_and_target_id")
    @@index([user_id], map: "index_todos_on_user_id")
}

model token_with_ivs {
    id                     BigInt @id @default(autoincrement())
    hashed_token           Bytes  @unique(map: "index_token_with_ivs_on_hashed_token")
    hashed_plaintext_token Bytes  @unique(map: "index_token_with_ivs_on_hashed_plaintext_token")
    iv                     Bytes
}

model topics {
    id                         BigInt           @id @default(autoincrement())
    name                       String           @unique(map: "index_topics_on_name")
    created_at                 DateTime         @db.Timestamptz(6)
    updated_at                 DateTime         @db.Timestamptz(6)
    avatar                     String?
    description                String?
    total_projects_count       BigInt           @default(0)
    non_private_projects_count BigInt           @default(0)
    project_topics             project_topics[]

    @@index([non_private_projects_count, id], map: "index_topics_non_private_projects_count")
    @@index([name], map: "index_topics_on_name_trigram")
    @@index([total_projects_count, id], map: "index_topics_total_projects_count")
}

model trending_projects {
    id         Int      @id @default(autoincrement())
    project_id Int      @unique(map: "index_trending_projects_on_project_id")
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_09feecd872")
}

model u2f_registrations {
    id                     Int                      @id @default(autoincrement())
    certificate            String?
    key_handle             String?                  @db.VarChar
    public_key             String?                  @db.VarChar
    counter                Int?
    user_id                Int?
    created_at             DateTime                 @db.Timestamp(6)
    updated_at             DateTime                 @db.Timestamp(6)
    name                   String?                  @db.VarChar
    users                  users?                   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_u2f_registrations_user_id")
    webauthn_registrations webauthn_registrations[]

    @@index([key_handle], map: "index_u2f_registrations_on_key_handle")
    @@index([user_id], map: "index_u2f_registrations_on_user_id")
}

model upcoming_reconciliations {
    id                       BigInt      @id @default(autoincrement())
    namespace_id             Int?        @unique(map: "index_upcoming_reconciliations_on_namespace_id")
    next_reconciliation_date DateTime    @db.Date
    display_alert_from       DateTime    @db.Date
    created_at               DateTime    @db.Timestamptz(6)
    updated_at               DateTime    @db.Timestamptz(6)
    namespaces               namespaces? @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_497b4938ac")
}

model upload_states {
    verification_started_at  DateTime? @db.Timestamptz(6)
    verification_retry_at    DateTime? @db.Timestamptz(6)
    verified_at              DateTime? @db.Timestamptz(6)
    upload_id                Int       @id @default(autoincrement())
    verification_state       Int       @default(0) @db.SmallInt
    verification_retry_count Int?      @db.SmallInt
    verification_checksum    Bytes?
    verification_failure     String?
    uploads                  uploads   @relation(fields: [upload_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d00f153613")

    @@index([upload_id], map: "index_upload_states_on_upload_id")
    @@index([verification_state], map: "index_upload_states_on_verification_state")
}

model uploads {
    id            Int            @id @default(autoincrement())
    size          BigInt
    path          String         @db.VarChar(511)
    checksum      String?        @db.VarChar(64)
    model_id      Int?
    model_type    String?        @db.VarChar
    uploader      String         @db.VarChar
    created_at    DateTime       @db.Timestamp(6)
    store         Int?           @default(1)
    mount_point   String?        @db.VarChar
    secret        String?        @db.VarChar
    upload_states upload_states?

    @@index([checksum], map: "index_uploads_on_checksum")
    @@index([model_id, model_type], map: "index_uploads_on_model_id_and_model_type")
    @@index([store], map: "index_uploads_on_store")
    @@index([uploader, path], map: "index_uploads_on_uploader_and_path")
}

model user_agent_details {
    id           Int      @id @default(autoincrement())
    user_agent   String   @db.VarChar
    ip_address   String   @db.VarChar
    subject_id   Int
    subject_type String   @db.VarChar
    submitted    Boolean  @default(false)
    created_at   DateTime @db.Timestamp(6)
    updated_at   DateTime @db.Timestamp(6)

    @@index([subject_id, subject_type], map: "index_user_agent_details_on_subject_id_and_subject_type")
}

model user_callouts {
    id           Int       @id @default(autoincrement())
    feature_name Int
    user_id      Int
    dismissed_at DateTime? @db.Timestamptz(6)
    users        users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ddfdd80f3d")

    @@unique([user_id, feature_name], map: "index_user_callouts_on_user_id_and_feature_name")
    @@index([user_id], map: "index_user_callouts_on_user_id")
}

model user_canonical_emails {
    id              BigInt   @id @default(autoincrement())
    created_at      DateTime @db.Timestamptz(6)
    updated_at      DateTime @db.Timestamptz(6)
    user_id         Int      @unique(map: "index_user_canonical_emails_on_user_id")
    canonical_email String   @db.VarChar
    users           users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c2bd828b51")

    @@unique([user_id, canonical_email], map: "index_user_canonical_emails_on_user_id_and_canonical_email")
    @@index([canonical_email], map: "index_user_canonical_emails_on_canonical_email")
}

model user_credit_card_validations {
    user_id                  Int       @id
    credit_card_validated_at DateTime  @db.Timestamptz(6)
    expiration_date          DateTime? @db.Date
    last_digits              Int?      @db.SmallInt
    holder_name              String?
    network                  String?
    users                    users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_27ebc03cbf")

    @@index([holder_name, expiration_date, last_digits, credit_card_validated_at], map: "index_user_credit_card_validations_meta_data_full_match")
    @@index([expiration_date, last_digits, network, credit_card_validated_at], map: "index_user_credit_card_validations_meta_data_partial_match")
}

model user_custom_attributes {
    id         Int      @id @default(autoincrement())
    created_at DateTime @db.Timestamp(6)
    updated_at DateTime @db.Timestamp(6)
    user_id    Int
    key        String   @db.VarChar
    value      String   @db.VarChar
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_47b91868a8")

    @@unique([user_id, key], map: "index_user_custom_attributes_on_user_id_and_key")
    @@index([key, value], map: "index_user_custom_attributes_on_key_and_value")
}

model user_details {
    user_id                           Int         @id @unique(map: "index_user_details_on_user_id") @default(autoincrement())
    job_title                         String      @default("") @db.VarChar(200)
    bio                               String      @default("") @db.VarChar(255)
    webauthn_xid                      String?
    other_role                        String?
    provisioned_by_group_id           Int?
    pronouns                          String?
    pronunciation                     String?
    registration_objective            Int?        @db.SmallInt
    phone                             String?
    requires_credit_card_verification Boolean     @default(false)
    namespaces                        namespaces? @relation(fields: [provisioned_by_group_id], references: [id], onUpdate: NoAction, map: "fk_190e4fcc88")
    users                             users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_12e0b3043d")

    @@index([provisioned_by_group_id, user_id], map: "idx_user_details_on_provisioned_by_group_id_user_id")
}

model user_follow_users {
    follower_id                                Int
    followee_id                                Int
    users_user_follow_users_followee_idTousers users @relation("user_follow_users_followee_idTousers", fields: [followee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
    users_user_follow_users_follower_idTousers users @relation("user_follow_users_follower_idTousers", fields: [follower_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@id([follower_id, followee_id])
    @@index([followee_id])
}

model user_group_callouts {
    id           BigInt     @id @default(autoincrement())
    user_id      Int
    group_id     Int
    feature_name Int        @db.SmallInt
    dismissed_at DateTime?  @db.Timestamptz(6)
    namespaces   namespaces @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_9dc8b9d4b2")
    users        users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c366e12ec3")

    @@unique([user_id, feature_name, group_id], map: "index_group_user_callouts_feature")
    @@index([group_id], map: "index_user_group_callouts_on_group_id")
}

model user_highest_roles {
    user_id              Int      @id
    updated_at           DateTime @db.Timestamptz(6)
    highest_access_level Int?
    users                users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_60f6c325a6")

    @@index([user_id, highest_access_level], map: "index_user_highest_roles_on_user_id_and_highest_access_level")
}

model user_interacted_projects {
    user_id    Int
    project_id Int
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_722ceba4f7")
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0894651f08")

    @@id([project_id, user_id])
    @@index([user_id], map: "index_user_interacted_projects_on_user_id")
}

model user_permission_export_uploads {
    id         BigInt   @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    user_id    Int
    file_store Int?
    status     Int      @default(0) @db.SmallInt
    file       String?
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a7130085e3")

    @@index([user_id, status], map: "index_user_permission_export_uploads_on_user_id_and_status")
}

model user_preferences {
    id                          Int      @id @default(autoincrement())
    user_id                     Int      @unique(map: "index_user_preferences_on_user_id")
    issue_notes_filter          Int      @default(0) @db.SmallInt
    merge_request_notes_filter  Int      @default(0) @db.SmallInt
    created_at                  DateTime @db.Timestamptz(6)
    updated_at                  DateTime @db.Timestamptz(6)
    epics_sort                  String?  @db.VarChar
    roadmap_epics_state         Int?
    epic_notes_filter           Int      @default(0) @db.SmallInt
    issues_sort                 String?  @db.VarChar
    merge_requests_sort         String?  @db.VarChar
    roadmaps_sort               String?  @db.VarChar
    first_day_of_week           Int?
    timezone                    String?  @db.VarChar
    time_display_relative       Boolean?
    time_format_in_24h          Boolean?
    projects_sort               String?  @db.VarChar(64)
    show_whitespace_in_diffs    Boolean  @default(true)
    sourcegraph_enabled         Boolean?
    setup_for_company           Boolean?
    render_whitespace_in_code   Boolean?
    tab_width                   Int?     @db.SmallInt
    experience_level            Int?     @db.SmallInt
    view_diffs_file_by_file     Boolean  @default(false)
    gitpod_enabled              Boolean  @default(false)
    markdown_surround_selection Boolean  @default(true)
    users                       users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a69bfcfd81")

    @@index([gitpod_enabled], map: "index_user_preferences_on_gitpod_enabled")
}

model user_statuses {
    user_id                 Int       @id @default(autoincrement())
    cached_markdown_version Int?
    emoji                   String    @default("speech_balloon") @db.VarChar
    message                 String?   @db.VarChar(100)
    message_html            String?   @db.VarChar
    availability            Int       @default(0) @db.SmallInt
    clear_status_at         DateTime? @db.Timestamptz(6)
    users                   users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_2178592333")

    @@index([user_id], map: "index_user_statuses_on_user_id")
}

model user_synced_attributes_metadata {
    id              Int      @id @default(autoincrement())
    name_synced     Boolean? @default(false)
    email_synced    Boolean? @default(false)
    location_synced Boolean? @default(false)
    user_id         Int      @unique(map: "index_user_synced_attributes_metadata_on_user_id")
    provider        String?  @db.VarChar
    users           users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_0f4aa0981f")
}

model users {
    id                                                                                                Int                                               @id @default(autoincrement())
    email                                                                                             String                                            @unique(map: "index_users_on_email") @default("") @db.VarChar
    encrypted_password                                                                                String                                            @default("") @db.VarChar
    reset_password_token                                                                              String?                                           @unique(map: "index_users_on_reset_password_token") @db.VarChar
    reset_password_sent_at                                                                            DateTime?                                         @db.Timestamp(6)
    remember_created_at                                                                               DateTime?                                         @db.Timestamp(6)
    sign_in_count                                                                                     Int?                                              @default(0)
    current_sign_in_at                                                                                DateTime?                                         @db.Timestamp(6)
    last_sign_in_at                                                                                   DateTime?                                         @db.Timestamp(6)
    current_sign_in_ip                                                                                String?                                           @db.VarChar
    last_sign_in_ip                                                                                   String?                                           @db.VarChar
    created_at                                                                                        DateTime?                                         @db.Timestamp(6)
    updated_at                                                                                        DateTime?                                         @db.Timestamp(6)
    name                                                                                              String?                                           @db.VarChar
    admin                                                                                             Boolean                                           @default(false)
    projects_limit                                                                                    Int
    skype                                                                                             String                                            @default("") @db.VarChar
    linkedin                                                                                          String                                            @default("") @db.VarChar
    twitter                                                                                           String                                            @default("") @db.VarChar
    failed_attempts                                                                                   Int?                                              @default(0)
    locked_at                                                                                         DateTime?                                         @db.Timestamp(6)
    username                                                                                          String?                                           @db.VarChar
    can_create_group                                                                                  Boolean                                           @default(true)
    can_create_team                                                                                   Boolean                                           @default(true)
    state                                                                                             String?                                           @db.VarChar
    color_scheme_id                                                                                   Int                                               @default(1)
    password_expires_at                                                                               DateTime?                                         @db.Timestamp(6)
    created_by_id                                                                                     Int?
    last_credential_check_at                                                                          DateTime?                                         @db.Timestamp(6)
    avatar                                                                                            String?                                           @db.VarChar
    confirmation_token                                                                                String?                                           @unique(map: "index_users_on_confirmation_token") @db.VarChar
    confirmed_at                                                                                      DateTime?                                         @db.Timestamp(6)
    confirmation_sent_at                                                                              DateTime?                                         @db.Timestamp(6)
    unconfirmed_email                                                                                 String?                                           @db.VarChar
    hide_no_ssh_key                                                                                   Boolean?                                          @default(false)
    website_url                                                                                       String                                            @default("") @db.VarChar
    admin_email_unsubscribed_at                                                                       DateTime?                                         @db.Timestamp(6)
    notification_email                                                                                String?                                           @db.VarChar
    hide_no_password                                                                                  Boolean?                                          @default(false)
    password_automatically_set                                                                        Boolean?                                          @default(false)
    location                                                                                          String?                                           @db.VarChar
    encrypted_otp_secret                                                                              String?                                           @db.VarChar
    encrypted_otp_secret_iv                                                                           String?                                           @db.VarChar
    encrypted_otp_secret_salt                                                                         String?                                           @db.VarChar
    otp_required_for_login                                                                            Boolean                                           @default(false)
    otp_backup_codes                                                                                  String?
    public_email                                                                                      String?                                           @db.VarChar
    dashboard                                                                                         Int?                                              @default(0)
    project_view                                                                                      Int?                                              @default(0)
    consumed_timestep                                                                                 Int?
    layout                                                                                            Int?                                              @default(0)
    hide_project_limit                                                                                Boolean?                                          @default(false)
    note                                                                                              String?
    unlock_token                                                                                      String?                                           @unique(map: "index_users_on_unlock_token") @db.VarChar
    otp_grace_period_started_at                                                                       DateTime?                                         @db.Timestamp(6)
    external                                                                                          Boolean?                                          @default(false)
    incoming_email_token                                                                              String?                                           @db.VarChar
    organization                                                                                      String?                                           @db.VarChar
    auditor                                                                                           Boolean                                           @default(false)
    require_two_factor_authentication_from_group                                                      Boolean                                           @default(false)
    two_factor_grace_period                                                                           Int                                               @default(48)
    last_activity_on                                                                                  DateTime?                                         @db.Date
    notified_of_own_activity                                                                          Boolean?
    preferred_language                                                                                String?                                           @db.VarChar
    email_opted_in                                                                                    Boolean?
    email_opted_in_ip                                                                                 String?                                           @db.VarChar
    email_opted_in_source_id                                                                          Int?
    email_opted_in_at                                                                                 DateTime?                                         @db.Timestamp(6)
    theme_id                                                                                          Int?                                              @db.SmallInt
    accepted_term_id                                                                                  Int?
    feed_token                                                                                        String?                                           @db.VarChar
    private_profile                                                                                   Boolean                                           @default(false)
    roadmap_layout                                                                                    Int?                                              @db.SmallInt
    include_private_contributions                                                                     Boolean?
    commit_email                                                                                      String?                                           @db.VarChar
    group_view                                                                                        Int?
    managing_group_id                                                                                 Int?
    first_name                                                                                        String?                                           @db.VarChar(255)
    last_name                                                                                         String?                                           @db.VarChar(255)
    static_object_token                                                                               String?                                           @unique(map: "index_users_on_static_object_token") @db.VarChar(255)
    role                                                                                              Int?                                              @db.SmallInt
    user_type                                                                                         Int?                                              @db.SmallInt
    static_object_token_encrypted                                                                     String?
    application_setting_terms                                                                         application_setting_terms?                        @relation(fields: [accepted_term_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_789cd90b35")
    namespaces                                                                                        namespaces?                                       @relation(fields: [managing_group_id], references: [id], onUpdate: NoAction, map: "fk_a4b8fefe3e")
    agent_activity_events                                                                             agent_activity_events[]
    alert_management_alert_assignees                                                                  alert_management_alert_assignees[]
    application_settings                                                                              application_settings[]
    approval_merge_request_rules_approved_approvers                                                   approval_merge_request_rules_approved_approvers[]
    approval_merge_request_rules_users                                                                approval_merge_request_rules_users[]
    approval_project_rules_users                                                                      approval_project_rules_users[]
    atlassian_identities                                                                              atlassian_identities?
    authentication_events                                                                             authentication_events[]
    aws_roles                                                                                         aws_roles?
    banned_users                                                                                      banned_users?
    board_assignees                                                                                   board_assignees[]
    board_group_recent_visits                                                                         board_group_recent_visits[]
    board_project_recent_visits                                                                       board_project_recent_visits[]
    board_user_preferences                                                                            board_user_preferences[]
    boards_epic_board_recent_visits                                                                   boards_epic_board_recent_visits[]
    boards_epic_list_user_preferences                                                                 boards_epic_list_user_preferences[]
    boards_epic_user_preferences                                                                      boards_epic_user_preferences[]
    bulk_imports                                                                                      bulk_imports[]
    cluster_agent_tokens                                                                              cluster_agent_tokens[]
    cluster_agents                                                                                    cluster_agents[]
    clusters                                                                                          clusters[]
    coverage_fuzzing_corpuses                                                                         coverage_fuzzing_corpuses[]
    csv_issue_imports                                                                                 csv_issue_imports[]
    custom_emoji                                                                                      custom_emoji[]
    dast_profile_schedules                                                                            dast_profile_schedules[]
    deploy_tokens                                                                                     deploy_tokens[]
    deployment_approvals                                                                              deployment_approvals[]
    design_management_versions                                                                        design_management_versions[]
    draft_notes                                                                                       draft_notes[]
    emails                                                                                            emails[]
    epics_epics_assignee_idTousers                                                                    epics[]                                           @relation("epics_assignee_idTousers")
    epics_epics_author_idTousers                                                                      epics[]                                           @relation("epics_author_idTousers")
    epics_epics_closed_by_idTousers                                                                   epics[]                                           @relation("epics_closed_by_idTousers")
    events                                                                                            events[]
    experiment_subjects                                                                               experiment_subjects[]
    experiment_users                                                                                  experiment_users[]
    gpg_keys                                                                                          gpg_keys[]
    group_deletion_schedules                                                                          group_deletion_schedules[]
    group_deploy_keys                                                                                 group_deploy_keys[]
    group_import_states                                                                               group_import_states[]
    in_product_marketing_emails                                                                       in_product_marketing_emails[]
    incident_management_escalation_rules                                                              incident_management_escalation_rules[]
    incident_management_oncall_participants                                                           incident_management_oncall_participants[]
    incident_management_timeline_events_incident_management_timeline_events_author_idTousers          incident_management_timeline_events[]             @relation("incident_management_timeline_events_author_idTousers")
    incident_management_timeline_events_incident_management_timeline_events_updated_by_user_idTousers incident_management_timeline_events[]             @relation("incident_management_timeline_events_updated_by_user_idTousers")
    issue_assignees                                                                                   issue_assignees[]
    issues_issues_author_idTousers                                                                    issues[]                                          @relation("issues_author_idTousers")
    issues_issues_closed_by_idTousers                                                                 issues[]                                          @relation("issues_closed_by_idTousers")
    issues_issues_updated_by_idTousers                                                                issues[]                                          @relation("issues_updated_by_idTousers")
    jira_imports                                                                                      jira_imports[]
    lfs_file_locks                                                                                    lfs_file_locks[]
    list_user_preferences                                                                             list_user_preferences[]
    lists                                                                                             lists[]
    members                                                                                           members[]
    merge_request_assignees_merge_request_assignees_updated_state_by_user_idTousers                   merge_request_assignees[]                         @relation("merge_request_assignees_updated_state_by_user_idTousers")
    merge_request_assignees_merge_request_assignees_user_idTousers                                    merge_request_assignees[]                         @relation("merge_request_assignees_user_idTousers")
    merge_request_metrics_merge_request_metrics_latest_closed_by_idTousers                            merge_request_metrics[]                           @relation("merge_request_metrics_latest_closed_by_idTousers")
    merge_request_metrics_merge_request_metrics_merged_by_idTousers                                   merge_request_metrics[]                           @relation("merge_request_metrics_merged_by_idTousers")
    merge_request_reviewers_merge_request_reviewers_updated_state_by_user_idTousers                   merge_request_reviewers[]                         @relation("merge_request_reviewers_updated_state_by_user_idTousers")
    merge_request_reviewers_merge_request_reviewers_user_idTousers                                    merge_request_reviewers[]                         @relation("merge_request_reviewers_user_idTousers")
    merge_requests_merge_requests_assignee_idTousers                                                  merge_requests[]                                  @relation("merge_requests_assignee_idTousers")
    merge_requests_merge_requests_author_idTousers                                                    merge_requests[]                                  @relation("merge_requests_author_idTousers")
    merge_requests_merge_requests_merge_user_idTousers                                                merge_requests[]                                  @relation("merge_requests_merge_user_idTousers")
    merge_requests_merge_requests_updated_by_idTousers                                                merge_requests[]                                  @relation("merge_requests_updated_by_idTousers")
    merge_requests_compliance_violations                                                              merge_requests_compliance_violations[]
    merge_trains                                                                                      merge_trains[]
    metrics_users_starred_dashboards                                                                  metrics_users_starred_dashboards[]
    notification_settings                                                                             notification_settings[]
    packages_debian_group_distributions                                                               packages_debian_group_distributions[]
    packages_debian_project_distributions                                                             packages_debian_project_distributions[]
    packages_packages                                                                                 packages_packages[]
    path_locks                                                                                        path_locks[]
    personal_access_tokens                                                                            personal_access_tokens[]
    project_authorizations                                                                            project_authorizations[]
    projects                                                                                          projects[]
    protected_branch_merge_access_levels                                                              protected_branch_merge_access_levels[]
    protected_branch_push_access_levels                                                               protected_branch_push_access_levels[]
    protected_branch_unprotect_access_levels                                                          protected_branch_unprotect_access_levels[]
    protected_environment_approval_rules                                                              protected_environment_approval_rules[]
    protected_environment_deploy_access_levels                                                        protected_environment_deploy_access_levels[]
    protected_tag_create_access_levels                                                                protected_tag_create_access_levels[]
    releases                                                                                          releases[]
    requirements                                                                                      requirements[]
    requirements_management_test_reports                                                              requirements_management_test_reports[]
    resource_iteration_events                                                                         resource_iteration_events[]
    resource_label_events                                                                             resource_label_events[]
    resource_milestone_events                                                                         resource_milestone_events[]
    resource_state_events                                                                             resource_state_events[]
    resource_weight_events                                                                            resource_weight_events[]
    reviews                                                                                           reviews[]
    saved_replies                                                                                     saved_replies[]
    scim_identities                                                                                   scim_identities[]
    security_orchestration_policy_rule_schedules                                                      security_orchestration_policy_rule_schedules[]
    serverless_domain_cluster                                                                         serverless_domain_cluster[]
    smartcard_identities                                                                              smartcard_identities[]
    term_agreements                                                                                   term_agreements[]
    terraform_state_versions                                                                          terraform_state_versions[]
    terraform_states                                                                                  terraform_states[]
    todos_todos_author_idTousers                                                                      todos[]                                           @relation("todos_author_idTousers")
    todos_todos_user_idTousers                                                                        todos[]                                           @relation("todos_user_idTousers")
    u2f_registrations                                                                                 u2f_registrations[]
    user_callouts                                                                                     user_callouts[]
    user_canonical_emails                                                                             user_canonical_emails?
    user_credit_card_validations                                                                      user_credit_card_validations?
    user_custom_attributes                                                                            user_custom_attributes[]
    user_details                                                                                      user_details?
    user_follow_users_user_follow_users_followee_idTousers                                            user_follow_users[]                               @relation("user_follow_users_followee_idTousers")
    user_follow_users_user_follow_users_follower_idTousers                                            user_follow_users[]                               @relation("user_follow_users_follower_idTousers")
    user_group_callouts                                                                               user_group_callouts[]
    user_highest_roles                                                                                user_highest_roles?
    user_interacted_projects                                                                          user_interacted_projects[]
    user_permission_export_uploads                                                                    user_permission_export_uploads[]
    user_preferences                                                                                  user_preferences?
    user_statuses                                                                                     user_statuses?
    user_synced_attributes_metadata                                                                   user_synced_attributes_metadata?
    users_ops_dashboard_projects                                                                      users_ops_dashboard_projects[]
    users_security_dashboard_projects                                                                 users_security_dashboard_projects[]
    vulnerabilities_usersTovulnerabilities_author_id                                                  vulnerabilities[]                                 @relation("usersTovulnerabilities_author_id")
    vulnerabilities_usersTovulnerabilities_confirmed_by_id                                            vulnerabilities[]                                 @relation("usersTovulnerabilities_confirmed_by_id")
    vulnerabilities_usersTovulnerabilities_dismissed_by_id                                            vulnerabilities[]                                 @relation("usersTovulnerabilities_dismissed_by_id")
    vulnerabilities_usersTovulnerabilities_last_edited_by_id                                          vulnerabilities[]                                 @relation("usersTovulnerabilities_last_edited_by_id")
    vulnerabilities_usersTovulnerabilities_resolved_by_id                                             vulnerabilities[]                                 @relation("usersTovulnerabilities_resolved_by_id")
    vulnerabilities_usersTovulnerabilities_updated_by_id                                              vulnerabilities[]                                 @relation("usersTovulnerabilities_updated_by_id")
    vulnerability_exports                                                                             vulnerability_exports[]
    vulnerability_external_issue_links                                                                vulnerability_external_issue_links[]
    vulnerability_feedback_usersTovulnerability_feedback_author_id                                    vulnerability_feedback[]                          @relation("usersTovulnerability_feedback_author_id")
    vulnerability_feedback_usersTovulnerability_feedback_comment_author_id                            vulnerability_feedback[]                          @relation("usersTovulnerability_feedback_comment_author_id")
    webauthn_registrations                                                                            webauthn_registrations[]

    @@index([accepted_term_id], map: "index_users_on_accepted_term_id")
    @@index([admin], map: "index_users_on_admin")
    @@index([created_at], map: "index_users_on_created_at")
    @@index([email], map: "index_users_on_email_trigram")
    @@index([feed_token], map: "index_users_on_feed_token")
    @@index([group_view], map: "index_users_on_group_view")
    @@index([incoming_email_token], map: "index_users_on_incoming_email_token")
    @@index([managing_group_id], map: "index_users_on_managing_group_id")
    @@index([name], map: "index_users_on_name")
    @@index([name], map: "index_users_on_name_trigram")
    @@index([state], map: "index_users_on_state")
    @@index([state, user_type], map: "index_users_on_state_and_user_type")
    @@index([user_type], map: "index_users_on_user_type")
    @@index([username], map: "index_users_on_username")
    @@index([username], map: "index_users_on_username_trigram")
}

model users_ops_dashboard_projects {
    id         BigInt   @id @default(autoincrement())
    created_at DateTime @db.Timestamptz(6)
    updated_at DateTime @db.Timestamptz(6)
    user_id    Int
    project_id Int
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9b4ebf005b")
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_220a0562db")

    @@unique([user_id, project_id], map: "index_users_ops_dashboard_projects_on_user_id_and_project_id")
    @@index([project_id], map: "index_users_ops_dashboard_projects_on_project_id")
}

model users_security_dashboard_projects {
    user_id    Int
    project_id Int
    projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_150cd5682c")
    users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_6f6cf8e66e")

    @@id([project_id, user_id])
    @@index([user_id], map: "index_users_security_dashboard_projects_on_user_id")
}

model users_star_projects {
    id         Int       @id @default(autoincrement())
    project_id Int
    user_id    Int
    created_at DateTime? @db.Timestamp(6)
    updated_at DateTime? @db.Timestamp(6)
    projects   projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_22cd27ddfc")

    @@unique([user_id, project_id], map: "index_users_star_projects_on_user_id_and_project_id")
    @@index([project_id], map: "index_users_star_projects_on_project_id")
}

model users_statistics {
    id                               BigInt   @id @default(autoincrement())
    created_at                       DateTime @db.Timestamptz(6)
    updated_at                       DateTime @db.Timestamptz(6)
    without_groups_and_projects      Int      @default(0)
    with_highest_role_guest          Int      @default(0)
    with_highest_role_reporter       Int      @default(0)
    with_highest_role_developer      Int      @default(0)
    with_highest_role_maintainer     Int      @default(0)
    with_highest_role_owner          Int      @default(0)
    bots                             Int      @default(0)
    blocked                          Int      @default(0)
    with_highest_role_minimal_access Int      @default(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model verification_codes {
    created_at      DateTime @default(now()) @db.Timestamptz(6)
    visitor_id_code String
    code            String
    phone           String

    @@ignore
}

model vulnerabilities {
    id                                                                      BigInt                               @id @default(autoincrement())
    milestone_id                                                            Int?
    epic_id                                                                 Int?
    project_id                                                              Int
    author_id                                                               Int
    updated_by_id                                                           Int?
    last_edited_by_id                                                       Int?
    start_date                                                              DateTime?                            @db.Date
    due_date                                                                DateTime?                            @db.Date
    last_edited_at                                                          DateTime?                            @db.Timestamptz(6)
    created_at                                                              DateTime                             @db.Timestamptz(6)
    updated_at                                                              DateTime                             @db.Timestamptz(6)
    title                                                                   String                               @db.VarChar(255)
    title_html                                                              String?
    description                                                             String?
    description_html                                                        String?
    start_date_sourcing_milestone_id                                        Int?
    due_date_sourcing_milestone_id                                          Int?
    state                                                                   Int                                  @default(1) @db.SmallInt
    severity                                                                Int                                  @db.SmallInt
    severity_overridden                                                     Boolean?                             @default(false)
    confidence                                                              Int                                  @db.SmallInt
    confidence_overridden                                                   Boolean?                             @default(false)
    resolved_by_id                                                          Int?
    resolved_at                                                             DateTime?                            @db.Timestamptz(6)
    report_type                                                             Int                                  @db.SmallInt
    cached_markdown_version                                                 Int?
    confirmed_by_id                                                         Int?
    confirmed_at                                                            DateTime?                            @db.Timestamptz(6)
    dismissed_at                                                            DateTime?                            @db.Timestamptz(6)
    dismissed_by_id                                                         Int?
    resolved_on_default_branch                                              Boolean                              @default(false)
    present_on_default_branch                                               Boolean                              @default(true)
    detected_at                                                             DateTime?                            @default(now()) @db.Timestamptz(6)
    users_usersTovulnerabilities_author_id                                  users                                @relation("usersTovulnerabilities_author_id", fields: [author_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "fk_b1de915a15")
    users_usersTovulnerabilities_confirmed_by_id                            users?                               @relation("usersTovulnerabilities_confirmed_by_id", fields: [confirmed_by_id], references: [id], onUpdate: NoAction, map: "fk_959d40ad0a")
    users_usersTovulnerabilities_dismissed_by_id                            users?                               @relation("usersTovulnerabilities_dismissed_by_id", fields: [dismissed_by_id], references: [id], onUpdate: NoAction, map: "fk_725465b774")
    milestones_milestonesTovulnerabilities_due_date_sourcing_milestone_id   milestones?                          @relation("milestonesTovulnerabilities_due_date_sourcing_milestone_id", fields: [due_date_sourcing_milestone_id], references: [id], onUpdate: NoAction, map: "fk_7c5bb22a22")
    epics                                                                   epics?                               @relation(fields: [epic_id], references: [id], onUpdate: NoAction, map: "fk_1d37cddf91")
    users_usersTovulnerabilities_last_edited_by_id                          users?                               @relation("usersTovulnerabilities_last_edited_by_id", fields: [last_edited_by_id], references: [id], onUpdate: NoAction, map: "fk_1302949740")
    milestones_milestonesTovulnerabilities_milestone_id                     milestones?                          @relation("milestonesTovulnerabilities_milestone_id", fields: [milestone_id], references: [id], onUpdate: NoAction, map: "fk_131d289c65")
    projects                                                                projects                             @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_efb96ab1e2")
    users_usersTovulnerabilities_resolved_by_id                             users?                               @relation("usersTovulnerabilities_resolved_by_id", fields: [resolved_by_id], references: [id], onUpdate: NoAction, map: "fk_76bc5f5455")
    milestones_milestonesTovulnerabilities_start_date_sourcing_milestone_id milestones?                          @relation("milestonesTovulnerabilities_start_date_sourcing_milestone_id", fields: [start_date_sourcing_milestone_id], references: [id], onUpdate: NoAction, map: "fk_88b4d546ef")
    users_usersTovulnerabilities_updated_by_id                              users?                               @relation("usersTovulnerabilities_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "fk_7ac31eacb9")
    vulnerability_external_issue_links                                      vulnerability_external_issue_links[]
    vulnerability_issue_links                                               vulnerability_issue_links[]
    vulnerability_occurrences                                               vulnerability_occurrences[]
    vulnerability_reads                                                     vulnerability_reads?
    vulnerability_user_mentions                                             vulnerability_user_mentions[]

    @@index([author_id], map: "index_vulnerabilities_on_author_id")
    @@index([confirmed_by_id], map: "index_vulnerabilities_on_confirmed_by_id")
    @@index([dismissed_by_id], map: "index_vulnerabilities_on_dismissed_by_id")
    @@index([due_date_sourcing_milestone_id], map: "index_vulnerabilities_on_due_date_sourcing_milestone_id")
    @@index([epic_id], map: "index_vulnerabilities_on_epic_id")
    @@index([last_edited_by_id], map: "index_vulnerabilities_on_last_edited_by_id")
    @@index([milestone_id], map: "index_vulnerabilities_on_milestone_id")
    @@index([project_id, id], map: "index_vulnerabilities_on_project_id_and_id")
    @@index([project_id, state, severity], map: "index_vulnerabilities_on_project_id_and_state_and_severity")
    @@index([resolved_by_id], map: "index_vulnerabilities_on_resolved_by_id")
    @@index([start_date_sourcing_milestone_id], map: "index_vulnerabilities_on_start_date_sourcing_milestone_id")
    @@index([updated_by_id], map: "index_vulnerabilities_on_updated_by_id")
    @@index([id], map: "index_vulnerabilities_on_state_case_id")
    @@index([id], map: "index_vulnerabilities_on_state_case_id_desc")
}

model vulnerability_exports {
    id          BigInt      @id @default(autoincrement())
    created_at  DateTime    @db.Timestamptz(6)
    updated_at  DateTime    @db.Timestamptz(6)
    started_at  DateTime?   @db.Timestamptz(6)
    finished_at DateTime?   @db.Timestamptz(6)
    status      String      @db.VarChar(255)
    file        String?     @db.VarChar(255)
    project_id  Int?
    author_id   Int
    file_store  Int?
    format      Int         @default(0) @db.SmallInt
    group_id    Int?
    users       users       @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1019162882")
    namespaces  namespaces? @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_c3d3cb5d0f")
    projects    projects?   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9aff2c3b45")

    @@index([author_id], map: "index_vulnerability_exports_on_author_id")
    @@index([file_store], map: "index_vulnerability_exports_on_file_store")
}

model vulnerability_external_issue_links {
    id                   BigInt          @id @default(autoincrement())
    created_at           DateTime        @db.Timestamptz(6)
    updated_at           DateTime        @db.Timestamptz(6)
    author_id            Int
    vulnerability_id     BigInt
    link_type            Int             @default(1) @db.SmallInt
    external_type        Int             @default(1) @db.SmallInt
    external_project_key String
    external_issue_key   String
    users                users           @relation(fields: [author_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "fk_rails_e5ba7f7b13")
    vulnerabilities      vulnerabilities @relation(fields: [vulnerability_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_f07bb8233d")

    @@unique([vulnerability_id, external_type, external_project_key, external_issue_key], map: "idx_vulnerability_ext_issue_links_on_vulne_id_and_ext_issue")
    @@index([author_id], map: "index_vulnerability_external_issue_links_on_author_id")
    @@index([vulnerability_id], map: "index_vulnerability_external_issue_links_on_vulnerability_id")
}

model vulnerability_feedback {
    id                                                    Int             @id @default(autoincrement())
    created_at                                            DateTime        @db.Timestamptz(6)
    updated_at                                            DateTime        @db.Timestamptz(6)
    feedback_type                                         Int             @db.SmallInt
    category                                              Int             @db.SmallInt
    project_id                                            Int
    author_id                                             Int
    pipeline_id                                           Int?
    issue_id                                              Int?
    project_fingerprint                                   String          @db.VarChar(40)
    merge_request_id                                      Int?
    comment_author_id                                     Int?
    comment                                               String?
    comment_timestamp                                     DateTime?       @db.Timestamptz(6)
    finding_uuid                                          String?         @db.Uuid
    dismissal_reason                                      Int?            @db.SmallInt
    users_usersTovulnerability_feedback_author_id         users           @relation("usersTovulnerability_feedback_author_id", fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_472f69b043")
    users_usersTovulnerability_feedback_comment_author_id users?          @relation("usersTovulnerability_feedback_comment_author_id", fields: [comment_author_id], references: [id], onUpdate: NoAction, map: "fk_94f7c8a81e")
    issues                                                issues?         @relation(fields: [issue_id], references: [id], onUpdate: NoAction, map: "fk_rails_8c77e5891a")
    merge_requests                                        merge_requests? @relation(fields: [merge_request_id], references: [id], onUpdate: NoAction, map: "fk_563ff1912e")
    projects                                              projects        @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_debd54e456")

    @@unique([project_id, category, feedback_type, project_fingerprint], map: "vulnerability_feedback_unique_idx")
    @@index([author_id], map: "index_vulnerability_feedback_on_author_id")
    @@index([comment_author_id], map: "index_vulnerability_feedback_on_comment_author_id")
    @@index([issue_id], map: "index_vulnerability_feedback_on_issue_id")
    @@index([merge_request_id], map: "index_vulnerability_feedback_on_merge_request_id")
    @@index([pipeline_id], map: "index_vulnerability_feedback_on_pipeline_id")
}

model vulnerability_finding_evidences {
    id                          BigInt                    @id @default(autoincrement())
    created_at                  DateTime                  @db.Timestamptz(6)
    updated_at                  DateTime                  @db.Timestamptz(6)
    vulnerability_occurrence_id BigInt                    @unique(map: "finding_evidences_on_unique_vulnerability_occurrence_id")
    data                        Json                      @default("{}")
    vulnerability_occurrences   vulnerability_occurrences @relation(fields: [vulnerability_occurrence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e3205a0c65")
}

model vulnerability_finding_links {
    id                          BigInt                    @id @default(autoincrement())
    created_at                  DateTime                  @db.Timestamptz(6)
    updated_at                  DateTime                  @db.Timestamptz(6)
    vulnerability_occurrence_id BigInt
    name                        String?
    url                         String
    vulnerability_occurrences   vulnerability_occurrences @relation(fields: [vulnerability_occurrence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_cbdfde27ce")

    @@unique([vulnerability_occurrence_id, name, url], map: "finding_link_name_url_idx")
    @@index([vulnerability_occurrence_id], map: "finding_links_on_vulnerability_occurrence_id")
}

model vulnerability_finding_signatures {
    id                        BigInt                    @id @default(autoincrement())
    finding_id                BigInt
    created_at                DateTime                  @db.Timestamptz(6)
    updated_at                DateTime                  @db.Timestamptz(6)
    algorithm_type            Int                       @db.SmallInt
    signature_sha             Bytes
    vulnerability_occurrences vulnerability_occurrences @relation(fields: [finding_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_9e0baf9dcd")

    @@unique([finding_id, signature_sha], map: "idx_vuln_signatures_on_occurrences_id_and_signature_sha")
    @@unique([finding_id, algorithm_type, signature_sha], map: "idx_vuln_signatures_uniqueness_signature_sha")
    @@index([finding_id], map: "index_vulnerability_finding_signatures_on_finding_id")
}

model vulnerability_findings_remediations {
    id                           BigInt                      @id @default(autoincrement())
    vulnerability_occurrence_id  BigInt?
    vulnerability_remediation_id BigInt?
    created_at                   DateTime                    @db.Timestamptz(6)
    updated_at                   DateTime                    @db.Timestamptz(6)
    vulnerability_occurrences    vulnerability_occurrences?  @relation(fields: [vulnerability_occurrence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_28a8d0cf93")
    vulnerability_remediations   vulnerability_remediations? @relation(fields: [vulnerability_remediation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_681c85ae0f")

    @@unique([vulnerability_occurrence_id, vulnerability_remediation_id], map: "index_vulnerability_findings_remediations_on_unique_keys")
    @@index([vulnerability_remediation_id], map: "index_vulnerability_findings_remediations_on_remediation_id")
}

model vulnerability_flags {
    id                          BigInt                    @id @default(autoincrement())
    created_at                  DateTime                  @db.Timestamptz(6)
    updated_at                  DateTime                  @db.Timestamptz(6)
    vulnerability_occurrence_id BigInt
    flag_type                   Int                       @default(0) @db.SmallInt
    origin                      String
    description                 String
    vulnerability_occurrences   vulnerability_occurrences @relation(fields: [vulnerability_occurrence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e59393b48b")

    @@unique([vulnerability_occurrence_id, flag_type, origin], map: "index_vulnerability_flags_on_unique_columns")
    @@index([vulnerability_occurrence_id], map: "index_vulnerability_flags_on_vulnerability_occurrence_id")
}

model vulnerability_historical_statistics {
    id           BigInt   @id @default(autoincrement())
    created_at   DateTime @db.Timestamptz(6)
    updated_at   DateTime @db.Timestamptz(6)
    project_id   Int
    total        Int      @default(0)
    critical     Int      @default(0)
    high         Int      @default(0)
    medium       Int      @default(0)
    low          Int      @default(0)
    unknown      Int      @default(0)
    info         Int      @default(0)
    date         DateTime @db.Date
    letter_grade Int      @db.SmallInt
    projects     projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_72b73ed023")

    @@unique([project_id, date], map: "index_vuln_historical_statistics_on_project_id_and_date")
    @@index([date, id], map: "index_vulnerability_historical_statistics_on_date_and_id")
}

model vulnerability_identifiers {
    id                                   BigInt                                 @id @default(autoincrement())
    created_at                           DateTime                               @db.Timestamptz(6)
    updated_at                           DateTime                               @db.Timestamptz(6)
    project_id                           Int
    fingerprint                          Bytes
    external_type                        String                                 @db.VarChar
    external_id                          String                                 @db.VarChar
    name                                 String                                 @db.VarChar
    url                                  String?
    projects                             projects                               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a67a16c885")
    vulnerability_occurrence_identifiers vulnerability_occurrence_identifiers[]
    vulnerability_occurrences            vulnerability_occurrences[]

    @@unique([project_id, fingerprint], map: "index_vulnerability_identifiers_on_project_id_and_fingerprint")
}

model vulnerability_issue_links {
    id               BigInt          @id @default(autoincrement())
    vulnerability_id BigInt
    issue_id         Int
    link_type        Int             @default(1) @db.SmallInt
    created_at       DateTime        @db.Timestamptz(6)
    updated_at       DateTime        @db.Timestamptz(6)
    issues           issues          @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e9180d534b")
    vulnerabilities  vulnerabilities @relation(fields: [vulnerability_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d459c19036")

    @@unique([vulnerability_id, issue_id], map: "idx_vulnerability_issue_links_on_vulnerability_id_and_issue_id")
    @@index([issue_id], map: "index_vulnerability_issue_links_on_issue_id")
}

model vulnerability_occurrence_identifiers {
    id                        BigInt                    @id @default(autoincrement())
    created_at                DateTime                  @db.Timestamptz(6)
    updated_at                DateTime                  @db.Timestamptz(6)
    occurrence_id             BigInt
    identifier_id             BigInt
    vulnerability_identifiers vulnerability_identifiers @relation(fields: [identifier_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_be2e49e1d0")
    vulnerability_occurrences vulnerability_occurrences @relation(fields: [occurrence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_e4ef6d027c")

    @@unique([occurrence_id, identifier_id], map: "index_vulnerability_occurrence_identifiers_on_unique_keys")
    @@index([identifier_id], map: "index_vulnerability_occurrence_identifiers_on_identifier_id")
}

model vulnerability_occurrence_pipelines {
    id                        BigInt                    @id @default(autoincrement())
    created_at                DateTime                  @db.Timestamptz(6)
    updated_at                DateTime                  @db.Timestamptz(6)
    occurrence_id             BigInt
    pipeline_id               Int
    vulnerability_occurrences vulnerability_occurrences @relation(fields: [occurrence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_dc3ae04693")

    @@unique([occurrence_id, pipeline_id], map: "vulnerability_occurrence_pipelines_on_unique_keys")
    @@index([occurrence_id, id], map: "index_vulnerability_occurrence_pipelines_occurrence_id_and_id")
    @@index([pipeline_id], map: "index_vulnerability_occurrence_pipelines_on_pipeline_id")
}

model vulnerability_occurrences {
    id                                   BigInt                                 @id @default(autoincrement())
    created_at                           DateTime                               @db.Timestamptz(6)
    updated_at                           DateTime                               @db.Timestamptz(6)
    severity                             Int                                    @db.SmallInt
    confidence                           Int                                    @db.SmallInt
    report_type                          Int                                    @db.SmallInt
    project_id                           Int
    scanner_id                           BigInt
    primary_identifier_id                BigInt
    project_fingerprint                  Bytes
    location_fingerprint                 Bytes
    uuid                                 String                                 @unique(map: "index_vulnerability_occurrences_on_uuid") @db.VarChar(36)
    name                                 String                                 @db.VarChar
    metadata_version                     String                                 @db.VarChar
    raw_metadata                         String
    vulnerability_id                     BigInt?
    details                              Json                                   @default("{}")
    description                          String?
    message                              String?
    solution                             String?
    cve                                  String?
    location                             Json?
    detection_method                     Int                                    @default(0) @db.SmallInt
    migrated_to_new_structure            Boolean                                @default(false)
    vulnerability_identifiers            vulnerability_identifiers              @relation(fields: [primary_identifier_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c8661a61eb")
    projects                             projects                               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_90fed4faba")
    vulnerability_scanners               vulnerability_scanners                 @relation(fields: [scanner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bf5b788ca7")
    vulnerabilities                      vulnerabilities?                       @relation(fields: [vulnerability_id], references: [id], onUpdate: NoAction, map: "fk_97ffe77653")
    vulnerability_finding_evidences      vulnerability_finding_evidences?
    vulnerability_finding_links          vulnerability_finding_links[]
    vulnerability_finding_signatures     vulnerability_finding_signatures[]
    vulnerability_findings_remediations  vulnerability_findings_remediations[]
    vulnerability_flags                  vulnerability_flags[]
    vulnerability_occurrence_identifiers vulnerability_occurrence_identifiers[]
    vulnerability_occurrence_pipelines   vulnerability_occurrence_pipelines[]

    @@index([project_id, report_type, project_fingerprint], map: "index_vulnerability_occurrences_deduplication")
    @@index([project_id, report_type], map: "index_vulnerability_occurrences_for_issue_links_migration")
    @@index([migrated_to_new_structure, id], map: "index_vulnerability_occurrences_on_migrated_to_new_structure")
    @@index([primary_identifier_id], map: "index_vulnerability_occurrences_on_primary_identifier_id")
    @@index([project_fingerprint], map: "index_vulnerability_occurrences_on_project_fingerprint")
    @@index([scanner_id], map: "index_vulnerability_occurrences_on_scanner_id")
    @@index([vulnerability_id], map: "index_vulnerability_occurrences_on_vulnerability_id")
}

model vulnerability_reads {
    id                         BigInt                 @id @default(autoincrement())
    vulnerability_id           BigInt                 @unique(map: "index_vulnerability_reads_on_vulnerability_id")
    project_id                 Int
    scanner_id                 BigInt
    report_type                Int                    @db.SmallInt
    severity                   Int                    @db.SmallInt
    state                      Int                    @db.SmallInt
    has_issues                 Boolean                @default(false)
    resolved_on_default_branch Boolean                @default(false)
    uuid                       String                 @unique(map: "index_vulnerability_reads_on_uuid") @db.Uuid
    location_image             String?
    cluster_agent_id           String?
    projects                   projects               @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_5001652292")
    vulnerability_scanners     vulnerability_scanners @relation(fields: [scanner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b28c28abf1")
    vulnerabilities            vulnerabilities        @relation(fields: [vulnerability_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_62736f638f")

    @@index([project_id, state, severity, vulnerability_id], map: "index_vuln_reads_on_project_id_state_severity_and_vuln_id")
    @@index([project_id, state, report_type, severity, vulnerability_id], map: "index_vulnerability_reads_common_finder_query")
    @@index([scanner_id], map: "index_vulnerability_reads_on_scanner_id")
}

model vulnerability_remediations {
    id                                  BigInt                                @id @default(autoincrement())
    created_at                          DateTime                              @db.Timestamptz(6)
    updated_at                          DateTime                              @db.Timestamptz(6)
    file_store                          Int?                                  @db.SmallInt
    summary                             String
    file                                String
    checksum                            Bytes
    project_id                          Int
    projects                            projects                              @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_fc61a535a0")
    vulnerability_findings_remediations vulnerability_findings_remediations[]

    @@unique([project_id, checksum], map: "index_vulnerability_remediations_on_project_id_and_checksum")
}

model vulnerability_scanners {
    id                        BigInt                      @id @default(autoincrement())
    created_at                DateTime                    @db.Timestamptz(6)
    updated_at                DateTime                    @db.Timestamptz(6)
    project_id                Int
    external_id               String                      @db.VarChar
    name                      String                      @db.VarChar
    vendor                    String                      @default("GitLab")
    projects                  projects                    @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_5c9d42a221")
    security_findings         security_findings[]
    vulnerability_occurrences vulnerability_occurrences[]
    vulnerability_reads       vulnerability_reads[]

    @@unique([project_id, external_id], map: "index_vulnerability_scanners_on_project_id_and_external_id")
}

model vulnerability_statistics {
    id                 BigInt   @id @default(autoincrement())
    created_at         DateTime @db.Timestamptz(6)
    updated_at         DateTime @db.Timestamptz(6)
    project_id         Int      @unique(map: "index_vulnerability_statistics_on_unique_project_id")
    total              Int      @default(0)
    critical           Int      @default(0)
    high               Int      @default(0)
    medium             Int      @default(0)
    low                Int      @default(0)
    unknown            Int      @default(0)
    info               Int      @default(0)
    letter_grade       Int      @db.SmallInt
    latest_pipeline_id BigInt?
    projects           projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_af61a7df4c")

    @@index([latest_pipeline_id], map: "index_vulnerability_statistics_on_latest_pipeline_id")
    @@index([letter_grade], map: "index_vulnerability_statistics_on_letter_grade")
}

model vulnerability_user_mentions {
    id                     BigInt          @id @default(autoincrement())
    vulnerability_id       BigInt
    note_id                Int?
    mentioned_users_ids    Int[]
    mentioned_projects_ids Int[]
    mentioned_groups_ids   Int[]
    notes                  notes?          @relation(fields: [note_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_a18600f210")
    vulnerabilities        vulnerabilities @relation(fields: [vulnerability_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1a41c485cd")

    @@unique([vulnerability_id, note_id], map: "index_vulns_user_mentions_on_vulnerability_id_and_note_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model web_hook_logs {
    id                     BigInt    @default(autoincrement())
    web_hook_id            Int
    trigger                String?   @db.VarChar
    url                    String?   @db.VarChar
    request_headers        String?
    request_data           String?
    response_headers       String?
    response_body          String?
    response_status        String?   @db.VarChar
    execution_duration     Float?
    internal_error_message String?   @db.VarChar
    updated_at             DateTime  @db.Timestamp(6)
    created_at             DateTime  @db.Timestamp(6)
    web_hooks              web_hooks @relation(fields: [web_hook_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_bb3355782d")

    @@ignore
}

model web_hooks {
    id                         Int             @id @default(autoincrement())
    project_id                 Int?
    created_at                 DateTime?       @db.Timestamp(6)
    updated_at                 DateTime?       @db.Timestamp(6)
    type                       String?         @default("ProjectHook") @db.VarChar
    service_id                 Int?
    push_events                Boolean         @default(true)
    issues_events              Boolean         @default(false)
    merge_requests_events      Boolean         @default(false)
    tag_push_events            Boolean?        @default(false)
    group_id                   Int?
    note_events                Boolean         @default(false)
    enable_ssl_verification    Boolean?        @default(true)
    wiki_page_events           Boolean         @default(false)
    pipeline_events            Boolean         @default(false)
    confidential_issues_events Boolean         @default(false)
    repository_update_events   Boolean         @default(false)
    job_events                 Boolean         @default(false)
    confidential_note_events   Boolean?
    push_events_branch_filter  String?
    encrypted_token            String?         @db.VarChar
    encrypted_token_iv         String?         @db.VarChar
    encrypted_url              String?         @db.VarChar
    encrypted_url_iv           String?         @db.VarChar
    deployment_events          Boolean         @default(false)
    releases_events            Boolean         @default(false)
    feature_flag_events        Boolean         @default(false)
    member_events              Boolean         @default(false)
    subgroup_events            Boolean         @default(false)
    recent_failures            Int             @default(0) @db.SmallInt
    backoff_count              Int             @default(0) @db.SmallInt
    disabled_until             DateTime?       @db.Timestamptz(6)
    namespaces                 namespaces?     @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_d35697648e")
    projects                   projects?       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_0c8ca6d9d1")
    integrations               integrations?   @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_d47999a98a")
    web_hook_logs              web_hook_logs[] @ignore

    @@index([group_id], map: "index_on_group_id_on_webhooks")
    @@index([project_id], map: "index_web_hooks_on_project_id")
    @@index([project_id, recent_failures], map: "index_web_hooks_on_project_id_recent_failures")
    @@index([service_id], map: "index_web_hooks_on_service_id")
    @@index([type], map: "index_web_hooks_on_type")
}

model webauthn_registrations {
    id                  BigInt             @id @default(autoincrement())
    user_id             Int
    counter             BigInt             @default(0)
    created_at          DateTime           @db.Timestamptz(6)
    updated_at          DateTime           @db.Timestamptz(6)
    credential_xid      String             @unique(map: "index_webauthn_registrations_on_credential_xid")
    name                String
    public_key          String
    u2f_registration_id Int?
    u2f_registrations   u2f_registrations? @relation(fields: [u2f_registration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_13e04d719a")
    users               users              @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_b15c016782")

    @@index([user_id], map: "index_webauthn_registrations_on_user_id")
}

model wiki_page_meta {
    id              Int               @id @default(autoincrement())
    project_id      Int
    created_at      DateTime          @db.Timestamptz(6)
    updated_at      DateTime          @db.Timestamptz(6)
    title           String            @db.VarChar(255)
    projects        projects          @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_c7a0c59cf1")
    wiki_page_slugs wiki_page_slugs[]

    @@index([project_id], map: "index_wiki_page_meta_on_project_id")
}

model wiki_page_slugs {
    id                Int            @id @default(autoincrement())
    canonical         Boolean        @default(false)
    wiki_page_meta_id Int
    created_at        DateTime       @db.Timestamptz(6)
    updated_at        DateTime       @db.Timestamptz(6)
    slug              String         @db.VarChar(2048)
    wiki_page_meta    wiki_page_meta @relation(fields: [wiki_page_meta_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_358b46be14")

    @@unique([slug, wiki_page_meta_id], map: "index_wiki_page_slugs_on_slug_and_wiki_page_meta_id")
    @@index([wiki_page_meta_id], map: "index_wiki_page_slugs_on_wiki_page_meta_id")
}

model work_item_types {
    id                      BigInt      @id @default(autoincrement())
    base_type               Int         @default(0) @db.SmallInt
    cached_markdown_version Int?
    name                    String
    description             String?
    description_html        String?
    icon_name               String?
    namespace_id            Int?        @unique(map: "work_item_types_namespace_id_and_name_unique")
    created_at              DateTime    @db.Timestamptz(6)
    updated_at              DateTime    @db.Timestamptz(6)
    namespaces              namespaces? @relation(fields: [namespace_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_20f694a960")
    issues                  issues[]
}

model x509_certificates {
    id                     BigInt                   @id @default(autoincrement())
    created_at             DateTime                 @db.Timestamptz(6)
    updated_at             DateTime                 @db.Timestamptz(6)
    subject_key_identifier String                   @db.VarChar(255)
    subject                String                   @db.VarChar(255)
    email                  String                   @db.VarChar(255)
    serial_number          Bytes
    certificate_status     Int                      @default(0) @db.SmallInt
    x509_issuer_id         BigInt
    x509_issuers           x509_issuers             @relation(fields: [x509_issuer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_76479fb5b4")
    x509_commit_signatures x509_commit_signatures[]

    @@index([subject_key_identifier], map: "index_x509_certificates_on_subject_key_identifier")
    @@index([x509_issuer_id], map: "index_x509_certificates_on_x509_issuer_id")
}

model x509_commit_signatures {
    id                  BigInt            @id @default(autoincrement())
    created_at          DateTime          @db.Timestamptz(6)
    updated_at          DateTime          @db.Timestamptz(6)
    project_id          Int
    x509_certificate_id BigInt
    commit_sha          Bytes
    verification_status Int               @default(0) @db.SmallInt
    projects            projects          @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_ab07452314")
    x509_certificates   x509_certificates @relation(fields: [x509_certificate_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_53fe41188f")

    @@index([commit_sha], map: "index_x509_commit_signatures_on_commit_sha")
    @@index([project_id], map: "index_x509_commit_signatures_on_project_id")
    @@index([x509_certificate_id], map: "index_x509_commit_signatures_on_x509_certificate_id")
}

model x509_issuers {
    id                     BigInt              @id @default(autoincrement())
    created_at             DateTime            @db.Timestamptz(6)
    updated_at             DateTime            @db.Timestamptz(6)
    subject_key_identifier String              @db.VarChar(255)
    subject                String              @db.VarChar(255)
    crl_url                String              @db.VarChar(255)
    x509_certificates      x509_certificates[]

    @@index([subject_key_identifier], map: "index_x509_issuers_on_subject_key_identifier")
}

model zentao_tracker_data {
    id                              BigInt       @id @default(autoincrement())
    integration_id                  Int
    created_at                      DateTime     @db.Timestamptz(6)
    updated_at                      DateTime     @db.Timestamptz(6)
    encrypted_url                   Bytes?
    encrypted_url_iv                Bytes?
    encrypted_api_url               Bytes?
    encrypted_api_url_iv            Bytes?
    encrypted_zentao_product_xid    Bytes?
    encrypted_zentao_product_xid_iv Bytes?
    encrypted_api_token             Bytes?
    encrypted_api_token_iv          Bytes?
    integrations                    integrations @relation(fields: [integration_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_84efda7be0")

    @@index([integration_id], map: "index_zentao_tracker_data_on_integration_id")
}

model zoom_meetings {
    id           BigInt   @id @default(autoincrement())
    project_id   Int
    issue_id     Int
    created_at   DateTime @db.Timestamptz(6)
    updated_at   DateTime @db.Timestamptz(6)
    issue_status Int      @default(1) @db.SmallInt
    url          String?  @db.VarChar(255)
    issues       issues   @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_3263f29616")
    projects     projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_1190f0e0fa")

    @@index([issue_id], map: "index_zoom_meetings_on_issue_id")
    @@index([issue_status], map: "index_zoom_meetings_on_issue_status")
    @@index([project_id], map: "index_zoom_meetings_on_project_id")
}